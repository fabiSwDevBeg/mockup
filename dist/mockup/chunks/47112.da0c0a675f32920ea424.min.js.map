{"version":3,"file":"chunks/47112.da0c0a675f32920ea424.min.js","mappings":"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","sources":["webpack://@plone/mockup/./node_modules/@patternslib/pat-code-editor/src/code-editor.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/core/mockup-parser.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/core/base.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/core/basepattern.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/core/dom.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/core/events.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/core/jquery-ext.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/core/logging.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/core/parser.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/core/polyfills.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/core/registry.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/core/utils.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/pat/checklist/checklist.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/pat/date-picker/date-picker.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/pat/datetime-picker/datetime-picker.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/pat/depends/depends.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/pat/display-time/display-time.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/pat/ajax/ajax.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/pat/inject/inject.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/pat/close-panel/close-panel.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/pat/tooltip/tooltip.js","webpack://@plone/mockup/./node_modules/@patternslib/patternslib/src/pat/validation/validation.js"],"sourcesContent":["import { BasePattern } from \"@patternslib/patternslib/src/core/basepattern\";\nimport Parser from \"@patternslib/patternslib/src/core/parser\";\nimport events from \"@patternslib/patternslib/src/core/events\";\nimport registry from \"@patternslib/patternslib/src/core/registry\";\n\nexport const parser = new Parser(\"code-editor\");\nparser.addArgument(\"language\", null); // programming language to use.\nparser.addArgument(\"linenumbers\", false);\nparser.addArgument(\"theme\", \"dark\"); // dark or light or any other theme variant.\n\n// CodeJar options\nparser.addArgument(\"tab\", \"    \"); // The tab-string. \"\\t\" for real tabs.\nparser.addArgument(\"indent-on\", \"{$\");\nparser.addArgument(\"spellcheck\", false);\nparser.addArgument(\"catch-tab\", true);\nparser.addArgument(\"preserve-ident\", true);\nparser.addArgument(\"add-closing\", true);\nparser.addArgument(\"history\", true);\n\nconst language_mapping = {\n    atom: \"xml\",\n    html: \"xml\",\n    plist: \"xml\",\n    rss: \"xml\",\n    svg: \"xml\",\n    wsf: \"xml\",\n    xhtml: \"xml\",\n    xjb: \"xml\",\n    xsd: \"xml\",\n    xsl: \"xml\",\n};\n\nclass Pattern extends BasePattern {\n    static name = \"code-editor\";\n    static trigger = \".pat-code-editor\";\n    static parser = parser;\n\n    async init() {\n        const CodeJar = (await import(\"codejar\")).CodeJar;\n        const hljs = (await import(\"highlight.js/lib/core\")).default;\n        let el = this.el;\n\n        // Set and load the theme.\n        let theme;\n        if (this.options.theme === \"light\") {\n            theme = \"stackoverflow-light\";\n        } else if (this.options.theme === \"dark\" || this.options.theme === \"okaidia\") {\n            theme = \"stackoverflow-dark\";\n        } else {\n            theme = this.options.theme;\n        }\n\n        // Need to await the style import, otherwise theme might not be applied.\n        await import(`highlight.js/styles/${theme}.css`);\n        if (window.__patternslib_import_styles) {\n            await import(\"./_code-editor.scss\");\n        }\n\n        // Custom hightlighting function, as of:\n        // https://github.com/antonmedv/codejar/blob/master/index.html\n        const highlight = (editor) => {\n            // highlight.js does not trim old tags,\n            // let's do it by this hack.\n            editor.textContent = editor.textContent;\n            hljs.highlightElement(editor);\n        };\n        let highlight_wrapper = highlight;\n\n        // Optional line numbers.\n        if (this.options.linenumbers) {\n            const linenumbers = (await import(\"codejar/linenumbers\")).withLineNumbers;\n            highlight_wrapper = linenumbers(highlight, {\n                class: `codejar-linenumbers ${theme}`,\n            });\n        }\n\n        // Import and register the language.\n        let language = [...el.classList].filter((it) => it.startsWith(\"language-\"))[0];\n        language = language ? language.replace(\"language-\", \"\") : this.options.language;\n        language = language || \"plaintext\";\n        const hljs_language = (\n            await import(\n                `highlight.js/lib/languages/${language_mapping[language] || language}`\n            )\n        ).default;\n        hljs.registerLanguage(language, hljs_language);\n\n        // Create a editor element in case of an input element.\n        if ([\"textarea\", \"input\"].includes(this.el.nodeName.toLowerCase())) {\n            const pre_el = document.createElement(\"pre\");\n            pre_el.innerHTML = `<code contenteditable></code>`;\n            el = pre_el.querySelector(\"code\");\n            el.textContent = this.el.value; // value is already unescaped.\n            this.el.parentNode.insertBefore(pre_el, this.el);\n            this.el.setAttribute(\"hidden\", \"\");\n        }\n\n        // Add some classes to the editor element.\n        el.classList.add(\n            \"code-editor\",\n            `theme-${this.options.theme}`,\n            `language-${language}`\n        );\n\n        // Allow spaces within quotes to be added as tab argument.\n        // Replace escaped tab character with real tab.\n        const tab = this.options.tab\n            .replace(/'/g, \"\") // Allow spaces within quotes\n            .replace(/\"/g, \"\")\n            .replace(/\\\\t/g, \"\\t\"); // Replace double escaped tab character\n\n        // Create the editor.\n        const config = {\n            tab: tab,\n            indentOn: new RegExp(this.options.indentOn),\n            spellcheck: this.options.spellcheck,\n            catchTab: this.options.catchTab,\n            preserveIdent: this.options.preserveIdent,\n            addClosing: this.options.addClosing,\n            history: this.options.history,\n        };\n        this.codeeditor = CodeJar(el, highlight_wrapper, config);\n\n        // Update the input element.\n        if (el !== this.el) {\n            // Update <textarea> or <input>, if one of these were the\n            // initializing elements.\n            this.codeeditor.onUpdate((code) => {\n                this.el.value = code.trim();\n                this.el.dispatchEvent(events.input_event());\n            });\n        }\n    }\n}\n\nregistry.register(Pattern);\n\nexport default Pattern;\nexport { Pattern };\n","import $ from \"jquery\";\n\nvar parser = {\n    getOptions($el, patternName, options) {\n        /* This is the Mockup parser. An alternative parser for Patternslib\n         * patterns.\n         *\n         * NOTE: Use of the Mockup parser is discouraged and is added here for\n         * legacy support for the Plone Mockup project.\n         *\n         * It parses a DOM element for pattern configuration options.\n         */\n        options = options || {};\n        // get options from parent element first, stop if element tag name is 'body'\n        if ($el.length !== 0 && !$.nodeName($el[0], \"body\")) {\n            options = this.getOptions($el.parent(), patternName, options);\n        }\n        // collect all options from element\n        let elOptions = {};\n        if ($el.length !== 0) {\n            elOptions = $el.data(\"pat-\" + patternName);\n            if (elOptions) {\n                // parse options if string\n                if (typeof elOptions === \"string\") {\n                    const tmpOptions = {};\n                    $.each(elOptions.split(\";\"), function (i, item) {\n                        item = item.split(\":\");\n                        item.reverse();\n                        let key = item.pop();\n                        key = key.replace(/^\\s+|\\s+$/g, \"\"); // trim\n                        item.reverse();\n                        let value = item.join(\":\");\n                        value = value.replace(/^\\s+|\\s+$/g, \"\"); // trim\n                        tmpOptions[key] = value;\n                    });\n                    elOptions = tmpOptions;\n                }\n            }\n        }\n        return $.extend(true, {}, options, elOptions);\n    },\n};\n\nexport default parser;\n","/**\n * A Base pattern for creating scoped patterns. It's similar to Backbone's\n * Model class. The advantage of this approach is that each instance of a\n * pattern has its own local scope (closure).\n *\n * A new instance is created for each DOM element on which a pattern applies.\n *\n * You can assign values, such as $el, to `this` for an instance and they\n * will remain unique to that instance.\n *\n * Older Patternslib patterns on the other hand have a single global scope for\n * all DOM elements.\n */\nimport $ from \"jquery\";\nimport Registry from \"./registry\";\nimport logging from \"./logging\";\nimport mockupParser from \"./mockup-parser\";\n\nconst log = logging.getLogger(\"Patternslib Base\");\n\nconst initBasePattern = function ($el, options, trigger) {\n    if (!$el.jquery) {\n        $el = $($el);\n    }\n    const name = this.prototype.name;\n    const plog = logging.getLogger(`pat.${name}`);\n    let pattern = $el.data(`pattern-${name}`);\n    if (pattern === undefined && Registry.patterns[name]) {\n        try {\n            // Immediately set the pattern instance to the temporary value\n            // ``initializing`` before the async Base constructor is setting\n            // the value later.\n            // This prevents re-init the pattern on this element on multiple\n            // initialization calls..\n            $el.data(`pattern-${name}`, \"initializing\");\n            options =\n                this.prototype.parser === \"mockup\"\n                    ? mockupParser.getOptions($el, name, options)\n                    : options;\n            pattern = new Registry.patterns[name]($el, options, trigger);\n        } catch (e) {\n            plog.error(`Failed while initializing ${name} pattern.`, e);\n        }\n    }\n    return pattern;\n};\n\nconst Base = async function ($el, options, trigger) {\n    if (($el?.jquery && $el.length === 0) || !$el) {\n        log.warn(\"No element given to pattern.\");\n        return;\n    }\n    if (!$el.jquery) {\n        $el = $($el);\n    }\n    this.$el = $el;\n    this.el = $el[0];\n    this.options = $.extend(true, {}, this.defaults || {}, options || {});\n\n    this.emit(\"pre-init\");\n\n    await this.init($el, options, trigger);\n\n    // Store pattern instance on element\n    this.$el.data(`pattern-${this.name}`, this);\n    this.el[`pattern-${this.name}`] = this;\n\n    this.emit(\"init\");\n};\n\nBase.prototype = {\n    constructor: Base,\n    on(eventName, eventCallback) {\n        this.$el.on(`${eventName}.${this.name}.patterns`, eventCallback);\n    },\n    one(eventName, eventCallback) {\n        this.$el.one(`${eventName}.${this.name}.patterns`, eventCallback);\n    },\n    emit(eventName, args) {\n        // args should be a list\n        if (args === undefined) {\n            args = [];\n        }\n        this.$el.trigger(`${eventName}.${this.name}.patterns`, args);\n    },\n};\n\nBase.extend = function (patternProps) {\n    /* Helper function to correctly set up the prototype chain for new patterns.\n     */\n    const parent = this;\n    let child;\n\n    // Check that the required configuration properties are given.\n    if (!patternProps) {\n        throw new Error(\n            \"Pattern configuration properties required when calling Base.extend\"\n        );\n    }\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent's constructor.\n    if (Object.hasOwnProperty.call(patternProps, \"constructor\")) {\n        child = patternProps.constructor;\n    } else {\n        child = function () {\n            parent.apply(this, arguments);\n        };\n    }\n\n    // Allow patterns to be extended indefinitely\n    child.extend = Base.extend;\n\n    // Static properties required by the Patternslib registry\n    child.init = initBasePattern;\n    child.jquery_plugin = true;\n    child.trigger = patternProps.trigger;\n    child.parser = patternProps?.parser || null;\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function.\n    var Surrogate = function () {\n        this.constructor = child;\n    };\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate();\n\n    // Add pattern's configuration properties (instance properties) to the subclass,\n    $.extend(true, child.prototype, patternProps);\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    // Register the pattern in the Patternslib registry.\n    if (!patternProps.name) {\n        log.warn(\"This pattern without a name attribute will not be registered!\");\n    } else if (!patternProps.trigger) {\n        log.warn(\n            `The pattern ${patternProps.name} does not have a trigger attribute, it will not be registered.`\n        );\n    } else if (patternProps.autoregister !== false) {\n        Registry.register(child, patternProps.name);\n    }\n    return child;\n};\n\nexport default Base;\n","/**\n * A Base pattern for creating scoped patterns.\n *\n * Each instance of a pattern has its own local scope.\n * A new instance is created for each DOM element on which a pattern applies.\n *\n * For usage, see basepattern.md\n */\nimport events from \"./events\";\nimport logging from \"./logging\";\n\nconst log = logging.getLogger(\"basepattern\");\n\nclass BasePattern {\n    static name; // name of pattern used in Registry.\n    static trigger; // A CSS selector to match elements that should trigger the pattern instantiation.\n    static parser; // Options parser.\n\n    // Parser options\n    parser_group_options = true;\n    parser_multiple = undefined;\n    parser_inherit = true;\n\n    constructor(el, options = {}) {\n        // Make static variables available on instance.\n        this.name = this.constructor.name;\n        this.trigger = this.constructor.trigger;\n        this.parser = this.constructor.parser;\n\n        if (!el) {\n            log.warn(`No element given to pattern ${this.name}.`);\n            return;\n        }\n        if (el.jquery) {\n            el = el[0];\n        }\n        this.el = el;\n\n        // Notify pre-init\n        this.el.dispatchEvent(\n            new Event(`pre-init.${this.name}.patterns`, {\n                bubbles: true,\n                cancelable: true,\n            })\n        );\n\n        // Initialize asynchronously.\n        //\n        // 1) We need to call the concrete implementation of ``init``, but the\n        //    inheritance chain is not yet set up and ``init`` not available.\n        //\n        // 2) We want to wait for the init() to successfuly finish and fire an\n        //    event then.\n        //    But the constructer cannot not return a Promise, thus not be\n        //    asynchronous but only return itself.\n        //\n        // Both limitations are gone in next tick.\n        //\n        window.setTimeout(async () => {\n            if (typeof this.el[`pattern-${this.name}`] !== \"undefined\") {\n                // Do not reinstantiate\n                log.debug(`Not reinstatiating the pattern ${this.name}.`, this.el);\n\n                // Notify that not instantiated\n                this.el.dispatchEvent(\n                    new Event(`not-init.${this.name}.patterns`, {\n                        bubbles: true,\n                        cancelable: false,\n                    })\n                );\n                return;\n            }\n\n            // Create the options object by parsing the element and using the\n            // optional options as default.\n            this.options =\n                this.parser?.parse(\n                    this.el,\n                    options,\n                    this.parser_multiple,\n                    this.parser_inherit,\n                    this.parser_group_options\n                ) ?? options;\n\n            // Store pattern instance on element\n            this.el[`pattern-${this.name}`] = this;\n\n            // Initialize the pattern\n            await this.init();\n\n            // Notify that now ready\n            this.el.dispatchEvent(\n                new Event(`init.${this.name}.patterns`, {\n                    bubbles: true,\n                    cancelable: true,\n                })\n            );\n        }, 0);\n    }\n\n    async init() {\n        // Extend this method in your pattern.\n    }\n\n    /**\n     * Listen to an event on the element only once.\n     *\n     * @param {string} event_name - Name of the event to listen to.\n     * @param {function} callback - Callback to call when the event is thrown.\n     */\n    one(event_name, event_callback) {\n        events.add_event_listener(\n            this.el,\n            `${event_name}.${this.name}.patterns`,\n            `basepattern-one--${event_name}.${this.name}.patterns`,\n            event_callback,\n            {\n                once: true,\n            }\n        );\n    }\n\n    /**\n     * Destroy/remove/unload the pattern from the element.\n     */\n    destroy() {\n        delete this.el[`pattern-${this.name}`];\n    }\n}\n\nexport default BasePattern;\nexport { BasePattern };\n","/* Utilities for DOM traversal or navigation */\nimport events from \"./events\";\nimport logging from \"./logging\";\n\nconst logger = logging.getLogger(\"core dom\");\n\nconst DATA_PREFIX = \"__patternslib__data_prefix__\";\nconst DATA_STYLE_DISPLAY = \"__patternslib__style__display\";\n\n/**\n * Return an array of DOM nodes.\n *\n * @param {Node|NodeList|jQuery} nodes - The DOM node to start the search from.\n *\n * @returns {Array} - An array of DOM nodes.\n */\nconst toNodeArray = (nodes) => {\n    if (nodes.jquery || nodes instanceof NodeList) {\n        // jQuery or document.querySelectorAll\n        nodes = [...nodes];\n    } else if (nodes instanceof Array === false) {\n        nodes = [nodes];\n    }\n    return nodes;\n};\n\n/**\n * Like querySelectorAll but including the element where it starts from.\n * Returns an Array, not a NodeList\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst querySelectorAllAndMe = (el, selector) => {\n    if (!el) {\n        return [];\n    }\n\n    const all = [...el.querySelectorAll(selector)];\n    if (el.matches(selector)) {\n        all.unshift(el); // start element should be first.\n    }\n    return all;\n};\n\n/**\n * Wrap a element with a wrapper element.\n *\n * The element to be wrapped will be moved into the wrapper element and the\n * wrapper element is placed just before the old element was.\n *\n * @param {Node} el - The DOM node to wrap.\n * @param {Node} wrapper - The wrapper element.\n */\nconst wrap = (el, wrapper) => {\n    // See: https://stackoverflow.com/a/13169465/1337474\n    el.parentNode.insertBefore(wrapper, el);\n    wrapper.appendChild(el);\n};\n\n/**\n * Hides the element with ``display: none`` and stores the current display value.\n *\n * @param {Node} el - The DOM node to hide.\n */\nconst hide = (el) => {\n    if (el.style.display === \"none\") {\n        // Nothing to do.\n        return;\n    }\n    if (el.style.display) {\n        el[DATA_STYLE_DISPLAY] = el.style.display;\n    }\n    el.style.display = \"none\";\n};\n\n/**\n * Shows element by removing ``display: none`` and restoring the display value\n * to whatever it was before.\n *\n * @param {Node} el - The DOM node to show.\n */\nconst show = (el) => {\n    const val = el[DATA_STYLE_DISPLAY] || null;\n    el.style.display = val;\n    delete el[DATA_STYLE_DISPLAY];\n};\n\n/**\n * Test, if a element is visible or not.\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is visible.\n */\nconst is_visible = (el) => {\n    // Check, if element is visible in DOM.\n    // https://stackoverflow.com/a/19808107/1337474\n    return el.offsetWidth > 0 && el.offsetHeight > 0;\n};\n\n/**\n * Test, if a element is a input-type element.\n *\n * This is taken from Sizzle/jQuery at:\n * https://github.com/jquery/sizzle/blob/f2a2412e5e8a5d9edf168ae3b6633ac8e6bd9f2e/src/sizzle.js#L139\n * https://github.com/jquery/sizzle/blob/f2a2412e5e8a5d9edf168ae3b6633ac8e6bd9f2e/src/sizzle.js#L1773\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is a input-type element.\n */\nconst is_input = (el) => {\n    const re_input = /^(?:input|select|textarea|button)$/i;\n    return re_input.test(el.nodeName);\n};\n\n/**\n * Return all direct parents of ``el`` matching ``selector``.\n * This matches against all parents but not the element itself.\n * The order of elements is from the search starting point up to higher\n * DOM levels.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - CSS selector to match against.\n * @returns {Array} - List of matching DOM nodes.\n */\nconst find_parents = (el, selector) => {\n    const ret = [];\n    let parent = el;\n    while (parent) {\n        parent = parent.parentNode?.closest?.(selector);\n        if (parent) ret.push(parent);\n    }\n    return ret;\n};\n\n/**\n * Find an element in the whole DOM tree if the selector is an ID selector,\n * otherwise use the given element as the starting point.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - The CSS selector to search for.\n *\n * @returns {NodeList} - The DOM nodes found.\n *\n */\nconst find_scoped = (el, selector) => {\n    // If the selector starts with an object id do a global search,\n    // otherwise do a local search.\n    return (selector.indexOf(\"#\") === 0 ? document : el).querySelectorAll(selector);\n};\n\n/**\n * Return all HTMLElement parents of el, starting from the direct parent of el.\n * The document itself is excluded because it's not a real DOM node.\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst get_parents = (el) => {\n    // Return all HTMLElement parents of el, starting from the direct parent of el.\n    const parents = [];\n    let parent = el?.parentNode;\n    while (parent) {\n        parents.push(parent);\n        parent = parent?.parentNode;\n        parent = parent instanceof HTMLElement ? parent : null;\n    }\n    return parents;\n};\n\n/**\n * Return the value of the first attribute found in the list of parents.\n *\n * @param {Node} el - The DOM element to start the acquisition search for the given attribute.\n * @param {string} attribute - Name of the attribute to search for.\n * @param {Boolean} include_empty - Also return empty values.\n * @param {Boolean} include_all - Return a list of attribute values found in all parents.\n *\n * @returns {*} - Returns the value of the searched attribute or a list of all attributes.\n */\nconst acquire_attribute = (\n    el,\n    attribute,\n    include_empty = false,\n    include_all = false\n) => {\n    let _el = el;\n    const ret = []; // array for ``include_all`` mode.\n    while (_el) {\n        const val = _el.getAttribute(attribute);\n        if (val || (include_empty && val === \"\")) {\n            if (!include_all) {\n                return val;\n            }\n            ret.push(val);\n        }\n        _el = _el.parentElement;\n    }\n    if (include_all) {\n        return ret;\n    }\n};\n\n/**\n * Return a DocumentFragment from a given string.\n *\n * @param {String} string - The HTML structure as a string.\n *\n * @returns {DocumentFragment} - The DOM nodes as a DocumentFragment.\n */\nconst create_from_string = (string) => {\n    // See: https://davidwalsh.name/convert-html-stings-dom-nodes\n    return document.createRange().createContextualFragment(string.trim());\n};\n\n/**\n * Return a CSS property value for a given DOM node.\n * For length-values, relative values are converted to pixels.\n * Optionally parse as pixels, if applicable.\n *\n * Note: The element must be attached to the body to make CSS caluclations work.\n *\n * @param {Node} el - DOM node.\n * @param {String} property - CSS property to query on DOM node.\n * @param {Boolean} [as_pixels=false] - Convert value to pixels, if applicable.\n * @param {Boolean} [as_float=false] - Convert value to float, if applicable.\n *\n * @returns {(String|Number)} - The CSS value to return.\n */\nfunction get_css_value(el, property, as_pixels = false, as_float = false) {\n    let value = window.getComputedStyle(el).getPropertyValue(property);\n    if (as_pixels || as_float) {\n        value = parseFloat(value) || 0.0;\n    }\n    if (as_pixels && !as_float) {\n        value = parseInt(Math.round(value), 10);\n    }\n    return value;\n}\n\n/**\n * Find a scrollable element up in the DOM tree.\n *\n * Note: Setting the ``overflow`` shorthand property also sets the individual overflow-y and overflow-y properties.\n *\n * @param {Node} el - The DOM element to start the search on.\n * @param {String} [direction=] - Not given: Search for any scrollable element up in the DOM tree.\n *                                ``x``: Search for a horizontally scrollable element.\n *                                ``y``: Search for a vertically scrollable element.\n * @param {(Node|null)} [fallback=document.body] - Fallback, if no scroll container can be found.\n *                                                     The default is to use document.body.\n *\n * @returns {Node} - Return the first scrollable element.\n *                   If no other element could be found, document.body would be returned.\n */\nconst find_scroll_container = (el, direction, fallback = document.body) => {\n    while (el && el !== document.body) {\n        if (!direction || direction === \"y\") {\n            let overflow_y = get_css_value(el, \"overflow-y\");\n            if ([\"auto\", \"scroll\"].includes(overflow_y)) {\n                return el;\n            }\n        }\n        if (!direction || direction === \"x\") {\n            let overflow_x = get_css_value(el, \"overflow-x\");\n            if ([\"auto\", \"scroll\"].includes(overflow_x)) {\n                return el;\n            }\n        }\n        el = el.parentElement;\n    }\n    return fallback;\n};\n\n/**\n * Get the horizontal scroll position.\n *\n * @param {Node} scroll_reference - The element to get the scroll position from.\n *\n * @returns {number} The horizontal scroll position.\n */\nconst get_scroll_x = (scroll_reference) => {\n    // scroll_listener == window: window.scrollX\n    // scroll_listener == html: html.scrollLeft == window.scrollX\n    // scroll_listener == DOM node: node.scrollLeft\n    return typeof scroll_reference.scrollLeft !== \"undefined\"\n        ? scroll_reference.scrollLeft\n        : scroll_reference.scrollX;\n};\n\n/**\n * Get the vertical scroll position.\n *\n * @param {Node} scroll_reference - The element to get the scroll position from.\n *\n * @returns {number} The vertical scroll position.\n */\nconst get_scroll_y = (scroll_reference) => {\n    // scroll_listener == window: window.scrollY\n    // scroll_listener == html: html.scrollTop == window.scrollY\n    // scroll_listener == DOM node: node.scrollTop\n    return typeof scroll_reference.scrollTop !== \"undefined\"\n        ? scroll_reference.scrollTop\n        : scroll_reference.scrollY;\n};\n\n/**\n * Get the elements position relative to another element.\n *\n * @param {Node} el - The DOM element to get the position for.\n * @param {Node} [reference_el=document.body] - The DOM element to get the position relative to.\n *\n * @returns {{top: number, left: number}} - The position of the element relative to the other element.\n */\nconst get_relative_position = (el, reference_el = document.body) => {\n    // Get the reference element to which against we calculate\n    // the relative position of the target.\n    // In case of a scroll container of window, we do not have\n    // getBoundingClientRect method, so get the body instead.\n    if (reference_el === window) {\n        reference_el = document.body;\n    }\n\n    // Calculate absolute [¹] position difference between\n    // scroll_container and scroll_target.\n    // Substract the container's border from the scrolling\n    // value, as this one isn't respected by\n    // getBoundingClientRect [²] and would lead to covered\n    // items [³].\n    // ¹) so that it doesn't make a difference, if the element\n    // is below or above the scrolling container. We just need\n    // to know the absolute difference.\n    // ²) Calculations are based from the viewport.\n    // ³) See:\n    //      https://docs.microsoft.com/en-us/previous-versions//hh781509(v=vs.85)\n    //      https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n    const left = Math.abs(\n        el.getBoundingClientRect().left +\n            reference_el.scrollLeft -\n            reference_el.getBoundingClientRect().left -\n            dom.get_css_value(reference_el, \"border-left-width\", true)\n    );\n    const top = Math.abs(\n        el.getBoundingClientRect().top +\n            reference_el.scrollTop -\n            reference_el.getBoundingClientRect().top -\n            dom.get_css_value(reference_el, \"border-top-width\", true)\n    );\n\n    return { top, left };\n};\n\n/**\n * Scroll to a given element.\n * The element will be scrolled to the top of the scroll container.\n *\n * @param {Node} el - The element which should be scrolled to.\n * @param {Node} scroll_container - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n * @param {string} [direction=\"top\"] - The direction to scroll to. Can be either \"top\", \"left\" or \"both\".\n */\nconst scroll_to_element = (el, scroll_container, offset = 0, direction = \"top\") => {\n    // Get the position of the element relative to the scroll container.\n    const position = get_relative_position(el, scroll_container);\n\n    const options = { behavior: \"auto\" };\n    if (direction === \"top\" || direction === \"both\") {\n        options.top = position.top - offset;\n    }\n    if (direction === \"left\" || direction === \"both\") {\n        options.left = position.left - offset;\n    }\n\n    // Scroll to the target position.\n    scroll_container.scrollTo(options);\n};\n\n/**\n * Scroll to the top of a scrolling container.\n *\n * @param {Node} [scroll_container = document.body] - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n */\nconst scroll_to_top = (scroll_container = document.body, offset = 0) => {\n    // Just scroll up, period.\n    scroll_container.scrollTo({ top: 0 - offset, behavior: \"auto\" });\n};\n\n/**\n * Scroll to the bottom of a scrolling container.\n *\n * @param {Node} [scroll_container = document.body] - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n */\nconst scroll_to_bottom = (scroll_container = document.body, offset = 0) => {\n    // Just scroll up, period.\n    //\n    const top = (scroll_container === window ? document.body : scroll_container)\n        .scrollHeight;\n    scroll_container.scrollTo({ top: top - offset, behavior: \"auto\" });\n};\n\n/**\n * Get data stored directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node from which we want to retrieve the data.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param default_value {Any} - Optional default value.\n * @returns {Any} - The value which is stored on the DOM node.\n */\nconst get_data = (el, name, default_value) => {\n    return el[`${DATA_PREFIX}${name}`] || default_value;\n};\n\n/**\n * Set and store data directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node which we want to store the data on.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param value {Any} - The value we want to store on the DOM node.\n */\nconst set_data = (el, name, value) => {\n    el[`${DATA_PREFIX}${name}`] = value;\n};\n\n/**\n * Delete a variable from the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node which we want to delete the variable from.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n */\nconst delete_data = (el, name) => {\n    delete el[`${DATA_PREFIX}${name}`];\n};\n\n/**\n * Simple template engine, based on JS template literal\n *\n * NOTE: This uses eval and would break if Content-Security-Policy does not\n *       allow 'unsafe-eval'.\n *       Because of this CSR problem the use of this method is not recommended.\n *\n * Please note: You cannot pass a template literal as template_string.\n * JavaScript itself would try to expand it and would fail.\n *\n * See: https://stackoverflow.com/a/37217166/1337474\n *\n * @param {String} template_string - The template string as a JavaScript template literal.\n *                                   For each variable in the template you have to use ``this``.\n *                                   E.g. if you pass ``{message: \"ok\"}`` as template_variables, you can use it like so:\n *                                   `<h1>${this.message}</h1>`\n * @param {Object} template_variables - Object literal with all the variables which should be used in the template.\n *\n * @returns {String} - Returns the a string as template expanded with the template_variables.\n */\nconst template = (template_string, template_variables = {}) => {\n    logger.warn(\n        \"Using dom.template is not recommended due to a problem with Content-Security-Policy.\"\n    );\n    return new Function(\"return `\" + template_string + \"`;\").call(template_variables);\n};\n\n/**\n * Get the visible ratio of an element compared to container.\n * If no container is given, the viewport is used.\n *\n * Note: currently only vertical ratio is supported.\n *\n * @param {Node} el - The element to get the visible ratio from.\n * @param {Node} [container] - The container to compare the element to.\n * @returns {number} - The visible ratio of the element.\n *                    0 means the element is not visible.\n *                    1 means the element is fully visible.\n */\nconst get_visible_ratio = (el, container) => {\n    if (!el) {\n        return 0;\n    }\n\n    const rect = el.getBoundingClientRect();\n    const container_rect =\n        container !== window\n            ? container.getBoundingClientRect()\n            : {\n                  top: 0,\n                  bottom: window.innerHeight,\n              };\n\n    let visible_ratio = 0;\n    if (rect.top < container_rect.bottom && rect.bottom > container_rect.top) {\n        const rect_height = rect.bottom - rect.top;\n        const visible_height =\n            Math.min(rect.bottom, container_rect.bottom) -\n            Math.max(rect.top, container_rect.top);\n        visible_ratio = visible_height / rect_height;\n    }\n\n    return visible_ratio;\n};\n\n/**\n * Get an escaped CSS selector for a given id string.\n *\n * id selectors should - but don't have to - start with a letter.\n * If the id starts with a number or a dash, it should be escaped.\n * This method does that for you.\n *\n * Alse see:\n * - https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id\n * - https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape\n *\n * @param {String} id - The id to escape.\n *\n * @returns {String} - The escaped CSS selector.\n *\n * @example\n * escape_css_id_selector(\"#123\"); // returns \"#\\\\31 23\"\"\n * escape_css_id_selector(\"#-123\"); // returns \"#-\\\\31 23\"\n */\nconst escape_css_id = (id) => {\n    return `#${CSS.escape(id.split(\"#\")[1])}`;\n};\n\nconst dom = {\n    toNodeArray: toNodeArray,\n    querySelectorAllAndMe: querySelectorAllAndMe,\n    wrap: wrap,\n    hide: hide,\n    show: show,\n    find_parents: find_parents,\n    find_scoped: find_scoped,\n    get_parents: get_parents,\n    acquire_attribute: acquire_attribute,\n    is_visible: is_visible,\n    is_input: is_input,\n    create_from_string: create_from_string,\n    get_css_value: get_css_value,\n    find_scroll_container: find_scroll_container,\n    get_scroll_x: get_scroll_x,\n    get_scroll_y: get_scroll_y,\n    get_relative_position: get_relative_position,\n    scroll_to_element: scroll_to_element,\n    scroll_to_top: scroll_to_top,\n    scroll_to_bottom: scroll_to_bottom,\n    get_data: get_data,\n    set_data: set_data,\n    delete_data: delete_data,\n    template: template,\n    get_visible_ratio: get_visible_ratio,\n    escape_css_id: escape_css_id,\n    add_event_listener: events.add_event_listener, // BBB export. TODO: Remove in an upcoming version.\n    remove_event_listener: events.remove_event_listener, // BBB export. TODO: Remove in an upcoming version.\n};\n\nexport default dom;\n","// Event related methods and event factories\n\n// Event listener registration for easy-to-remove event listeners.\n// once Safari supports the ``signal`` option for addEventListener we can abort\n// event handlers by calling AbortController.abort().\nexport const event_listener_map = {};\n\n/**\n * Add an event listener to a DOM element under a unique id.\n * If a event is registered under the same id for the same element, the old handler is removed first.\n *\n * @param {DOM Node} el - The element to register the event for.\n * @param {string} event_type - The event type to listen for.\n * @param {string} id - A unique id under which the event is registered.\n * @param {function} cb - The event handler / callback function.\n * @param {Object} opts - Options for the addEventListener API.\n *\n */\nconst add_event_listener = (el, event_type, id, cb, opts = {}) => {\n    if (!el?.addEventListener) {\n        return; // nothing to do.\n    }\n    remove_event_listener(el, id); // do not register one listener twice.\n\n    // Create event_listener_map entry if not existent.\n    if (!event_listener_map[el]) {\n        event_listener_map[el] = {};\n    }\n    let _cb = cb;\n    if (opts?.once === true) {\n        // For `once` events, also remove the entry from the event_listener_map.\n        _cb = (e) => {\n            delete event_listener_map[el][id];\n            cb(e);\n        };\n    }\n    // Only `capture` option is necessary for `removeEventListener`.\n    event_listener_map[el][id] = [event_type, _cb, opts.capture ? opts : undefined];\n    el.addEventListener(event_type, _cb, opts);\n};\n\n/**\n * Remove an event listener from a DOM element under a unique id.\n *\n * @param {DOM Node} el - The element to register the event for.\n * @param {string} id - A unique id under which the event is registered.\n *\n */\nconst remove_event_listener = (el, id) => {\n    if (!el?.removeEventListener) {\n        return; // nothing to do.\n    }\n    const el_events = event_listener_map[el];\n    if (!el_events) {\n        return;\n    }\n    let entries;\n    if (id) {\n        // remove event listener with specific id\n        const entry = el_events[id];\n        entries = entry ? [entry] : [];\n    } else {\n        // remove all event listeners of element\n        entries = Object.entries(el_events);\n    }\n    for (const entry of entries || []) {\n        el.removeEventListener(entry[0], entry[1], entry[2]);\n    }\n};\n\n/**\n * Await an event to be thrown.\n *\n * Usage:\n *     await events.await_event(button, \"click\");\n *\n * @param {DOM Node} el - The element to listen on.\n * @param {String} event_name - The event name to listen for.\n *\n * @returns {Promise} - Returns a Promise which can be used for ``await`` and which will be resolved when the event is throwm.\n *\n */\nconst await_event = (el, event_name) => {\n    // See: https://stackoverflow.com/a/44746691/1337474\n    return new Promise((resolve) =>\n        el.addEventListener(event_name, resolve, { once: true })\n    );\n};\n\n/**\n * Await pattern init.\n *\n * Usage:\n *     await events.await_pattern_init(PATTERN);\n *\n * @param {Pattern instance} pattern - The pattern instance.\n *\n * @returns {Promise} - Returns a Promise which can be used for ``await`` and which will be resolved when the event is throwm.\n *\n */\nconst await_pattern_init = (pattern) => {\n    // See: https://stackoverflow.com/a/44746691/1337474\n    return new Promise((resolve, reject) => {\n        // Case initialized\n        pattern.one(\"init\", (e) => {\n            if (e.target !== pattern.el) {\n                // Don't handle bubbling init events from child elements. We\n                // want to check on init events coming directly from this\n                // Pattern's element.\n                return;\n            }\n            // Resolve promise and unregister the not-init event handler.\n            remove_event_listener(\n                pattern.el,\n                `basepattern-one--not-init.${pattern.name}.patterns`\n            );\n            resolve();\n        });\n\n        // Case not initialized\n        pattern.one(\"not-init\", (e) => {\n            if (e.target !== pattern.el) {\n                // Don't handle bubbling not-init events from child elements.\n                // We want to check on not-init events coming directly from\n                // this Pattern's element.\n                return;\n            }\n            // Reject promise and unregister the init event handler.\n            remove_event_listener(\n                pattern.el,\n                `basepattern-one--init.${pattern.name}.patterns`\n            );\n            reject();\n        });\n    }).catch(() => {\n        throw new Error(`Pattern \"${pattern.name}\" not initialized.`);\n    });\n};\n\n/**\n * Event factories\n */\n\nconst blur_event = () => {\n    return new Event(\"blur\", {\n        bubbles: false,\n        cancelable: false,\n    });\n};\n\nconst click_event = () => {\n    return new Event(\"click\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst change_event = () => {\n    return new Event(\"change\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst focus_event = () => {\n    return new Event(\"focus\", {\n        bubbles: false,\n        cancelable: false,\n    });\n};\n\nconst input_event = () => {\n    return new Event(\"input\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst mousedown_event = () => {\n    return new Event(\"mousedown\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst mouseup_event = () => {\n    return new Event(\"mouseup\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst scroll_event = () => {\n    return new Event(\"scroll\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst submit_event = () => {\n    return new Event(\"submit\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst dragstart_event = () => {\n    return new Event(\"dragstart\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst dragend_event = () => {\n    return new Event(\"dragend\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nexport default {\n    add_event_listener: add_event_listener,\n    remove_event_listener: remove_event_listener,\n    await_event: await_event,\n    await_pattern_init: await_pattern_init,\n    blur_event: blur_event,\n    click_event: click_event,\n    change_event: change_event,\n    focus_event: focus_event,\n    input_event: input_event,\n    mousedown_event: mousedown_event,\n    mouseup_event: mouseup_event,\n    scroll_event: scroll_event,\n    submit_event: submit_event,\n    dragstart_event: dragstart_event,\n    dragend_event: dragend_event,\n};\n","/**\n * @license\n * Patterns @VERSION@ jquery-ext - various jQuery extensions\n *\n * Copyright 2011 Humberto Sermeño\n */\n\nimport $ from \"jquery\";\n\nvar methods = {\n    init: function (options) {\n        var settings = {\n            time: 3 /* time it will wait before moving to \"timeout\" after a move event */,\n            initialTime: 8 /* time it will wait before first adding the \"timeout\" class */,\n            exceptionAreas: [] /* IDs of elements that, if the mouse is over them, will reset the timer */,\n        };\n        return this.each(function () {\n            var $this = $(this),\n                data = $this.data(\"timeout\");\n\n            if (!data) {\n                if (options) {\n                    $.extend(settings, options);\n                }\n                $this.data(\"timeout\", {\n                    lastEvent: new Date(),\n                    trueTime: settings.time,\n                    time: settings.initialTime,\n                    untouched: true,\n                    inExceptionArea: false,\n                });\n\n                $this.on(\"mouseover.timeout\", methods.mouseMoved);\n                $this.on(\"mouseenter.timeout\", methods.mouseMoved);\n\n                $(settings.exceptionAreas).each(function () {\n                    $this\n                        .find(this)\n                        .live(\n                            \"mouseover.timeout\",\n                            { parent: $this },\n                            methods.enteredException\n                        )\n                        .live(\n                            \"mouseleave.timeout\",\n                            { parent: $this },\n                            methods.leftException\n                        );\n                });\n\n                if (settings.initialTime > 0) $this.timeout(\"startTimer\");\n                else $this.addClass(\"timeout\");\n            }\n        });\n    },\n\n    enteredException: function (event) {\n        var data = event.data.parent.data(\"timeout\");\n        data.inExceptionArea = true;\n        event.data.parent.data(\"timeout\", data);\n        event.data.parent.trigger(\"mouseover\");\n    },\n\n    leftException: function (event) {\n        var data = event.data.parent.data(\"timeout\");\n        data.inExceptionArea = false;\n        event.data.parent.data(\"timeout\", data);\n    },\n\n    destroy: function () {\n        return this.each(function () {\n            var $this = $(this),\n                data = $this.data(\"timeout\");\n\n            $(window).off(\".timeout\");\n            data.timeout.remove();\n            $this.removeData(\"timeout\");\n        });\n    },\n\n    mouseMoved: function () {\n        var $this = $(this),\n            data = $this.data(\"timeout\");\n\n        if ($this.hasClass(\"timeout\")) {\n            $this.removeClass(\"timeout\");\n            $this.timeout(\"startTimer\");\n        } else if (data.untouched) {\n            data.untouched = false;\n            data.time = data.trueTime;\n        }\n\n        data.lastEvent = new Date();\n        $this.data(\"timeout\", data);\n    },\n\n    startTimer: function () {\n        var $this = $(this),\n            data = $this.data(\"timeout\");\n        var fn = function () {\n            var data = $this.data(\"timeout\");\n            if (data && data.lastEvent) {\n                if (data.inExceptionArea) {\n                    setTimeout(fn, Math.floor(data.time * 1000));\n                } else {\n                    var now = new Date();\n                    var diff = Math.floor(data.time * 1000) - (now - data.lastEvent);\n                    if (diff > 0) {\n                        // the timeout has not ocurred, so set the timeout again\n                        setTimeout(fn, diff + 100);\n                    } else {\n                        // timeout ocurred, so set the class\n                        $this.addClass(\"timeout\");\n                    }\n                }\n            }\n        };\n\n        setTimeout(fn, Math.floor(data.time * 1000));\n    },\n};\n\n$.fn.timeout = function (method) {\n    if (methods[method]) {\n        return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n    } else if (typeof method === \"object\" || !method) {\n        return methods.init.apply(this, arguments);\n    } else {\n        $.error(\"Method \" + method + \" does not exist on jQuery.timeout\");\n    }\n};\n\n// Custom jQuery selector to find elements with scrollbars\n$.extend($.expr[\":\"], {\n    scrollable: function (element) {\n        var vertically_scrollable, horizontally_scrollable;\n        if (\n            $(element).css(\"overflow\") === \"scroll\" ||\n            $(element).css(\"overflowX\") === \"scroll\" ||\n            $(element).css(\"overflowY\") === \"scroll\"\n        )\n            return true;\n\n        vertically_scrollable =\n            element.clientHeight < element.scrollHeight &&\n            ($.inArray($(element).css(\"overflowY\"), [\"scroll\", \"auto\"]) !== -1 ||\n                $.inArray($(element).css(\"overflow\"), [\"scroll\", \"auto\"]) !== -1);\n\n        if (vertically_scrollable) return true;\n\n        horizontally_scrollable =\n            element.clientWidth < element.scrollWidth &&\n            ($.inArray($(element).css(\"overflowX\"), [\"scroll\", \"auto\"]) !== -1 ||\n                $.inArray($(element).css(\"overflow\"), [\"scroll\", \"auto\"]) !== -1);\n        return horizontally_scrollable;\n    },\n});\n\n// Make Visible in scroll\n$.fn.makeVisibleInScroll = function (parent_id) {\n    var absoluteParent = null;\n    if (typeof parent_id === \"string\") {\n        absoluteParent = $(\"#\" + parent_id);\n    } else if (parent_id) {\n        absoluteParent = $(parent_id);\n    }\n\n    return this.each(function () {\n        var $this = $(this),\n            parent;\n        if (!absoluteParent) {\n            parent = $this.parents(\":scrollable\");\n            if (parent.length > 0) {\n                parent = $(parent[0]);\n            } else {\n                parent = $(window);\n            }\n        } else {\n            parent = absoluteParent;\n        }\n\n        var elemTop = $this.position().top;\n        var elemBottom = $this.height() + elemTop;\n\n        var viewTop = parent.scrollTop();\n        var viewBottom = parent.height() + viewTop;\n\n        if (elemTop < viewTop) {\n            parent.scrollTop(elemTop);\n        } else if (elemBottom > viewBottom - parent.height() / 2) {\n            parent.scrollTop(elemTop - (parent.height() - $this.height()) / 2);\n        }\n    });\n};\n\n//Work around warning for jQuery 3.x:\n//JQMIGRATE: jQuery.fn.offset() requires an element connected to a document\n$.fn.safeOffset = function () {\n    var docElem,\n        elem = this[0],\n        origin = { top: 0, left: 0 };\n\n    if (!elem || !elem.nodeType) {\n        return origin;\n    }\n\n    docElem = (elem.ownerDocument || document).documentElement;\n    if (!$.contains(docElem, elem)) {\n        return origin;\n    }\n\n    return $.fn.offset.apply(this, arguments);\n};\n\n//Make absolute location\n$.fn.setPositionAbsolute = function (element, offsettop, offsetleft) {\n    return this.each(function () {\n        // set absolute location for based on the element passed\n        // dynamically since every browser has different settings\n        var $this = $(this);\n        var thiswidth = $(this).width();\n        var pos = element.safeOffset();\n        var width = element.width();\n        var height = element.height();\n        var setleft = pos.left + width - thiswidth + offsetleft;\n        var settop = pos.top + height + offsettop;\n        $this.css({\n            \"z-index\": 1,\n            \"position\": \"absolute\",\n            \"marginLeft\": 0,\n            \"marginTop\": 0,\n            \"left\": setleft + \"px\",\n            \"top\": settop + \"px\",\n            \"width\": thiswidth,\n        });\n        $this.remove().appendTo(\"body\").show();\n    });\n};\n\n$.fn.positionAncestor = function (selector) {\n    var left = 0;\n    var top = 0;\n    this.each(function () {\n        // check if current element has an ancestor matching a selector\n        // and that ancestor is positioned\n        var $ancestor = $(this).closest(selector);\n        if ($ancestor.length && $ancestor.css(\"position\") !== \"static\") {\n            var $child = $(this);\n            var childMarginEdgeLeft =\n                $child.safeOffset().left - parseInt($child.css(\"marginLeft\"), 10);\n            var childMarginEdgeTop =\n                $child.safeOffset().top - parseInt($child.css(\"marginTop\"), 10);\n            var ancestorPaddingEdgeLeft =\n                $ancestor.safeOffset().left +\n                parseInt($ancestor.css(\"borderLeftWidth\"), 10);\n            var ancestorPaddingEdgeTop =\n                $ancestor.safeOffset().top +\n                parseInt($ancestor.css(\"borderTopWidth\"), 10);\n            left = childMarginEdgeLeft - ancestorPaddingEdgeLeft;\n            top = childMarginEdgeTop - ancestorPaddingEdgeTop;\n            // we have found the ancestor and computed the position\n            // stop iterating\n            return false;\n        }\n    });\n    return {\n        left: left,\n        top: top,\n    };\n};\n\n$.fn.findInclusive = function (selector) {\n    return this.find(\"*\").addBack().filter(selector);\n};\n\n$.fn.slideIn = function (speed, easing, callback) {\n    return this.animate({ width: \"show\" }, speed, easing, callback);\n};\n\n$.fn.slideOut = function (speed, easing, callback) {\n    return this.animate({ width: \"hide\" }, speed, easing, callback);\n};\n\n// case-insensitive :contains\n$.expr[\":\"].Contains = function (a, i, m) {\n    return $(a).text().toUpperCase().indexOf(m[3].toUpperCase()) >= 0;\n};\n\n$.fn.scopedFind = function (selector) {\n    /*  If the selector starts with an object id do a global search,\n     *  otherwise do a local search.\n     */\n    if (selector.indexOf(\"#\") === 0) {\n        return $(selector);\n    } else {\n        return this.find(selector);\n    }\n};\n\nexport default undefined;\n","/**\n * Patterns logging - minimal logging framework\n *\n * Copyright 2012 Simplon B.V.\n */\n\n// source: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/bind\nif (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n        if (typeof this !== \"function\") {\n            // closest thing possible to the ECMAScript 5 internal IsCallable function\n            throw new TypeError(\n                \"Function.prototype.bind - what is trying to be bound is not callable\"\n            );\n        }\n\n        var aArgs = Array.prototype.slice.call(arguments, 1),\n            fToBind = this,\n            fNOP = function () {},\n            fBound = function () {\n                return fToBind.apply(\n                    this instanceof fNOP && oThis ? this : oThis,\n                    aArgs.concat(Array.prototype.slice.call(arguments))\n                );\n            };\n        fNOP.prototype = this.prototype;\n        fBound.prototype = new fNOP();\n\n        return fBound;\n    };\n}\n\nvar root, // root logger instance\n    writer; // writer instance, used to output log entries\n\nvar Level = {\n    DEBUG: 10,\n    INFO: 20,\n    WARN: 30,\n    ERROR: 40,\n    FATAL: 50,\n};\n\nfunction ConsoleWriter() {}\n\nConsoleWriter.prototype = {\n    output: function (log_name, level, messages) {\n        if (log_name) messages.unshift(log_name + \":\");\n        if (level <= Level.DEBUG) {\n            // console.debug exists but is deprecated\n            messages.unshift(\"[DEBUG]\");\n            console.log.apply(console, messages);\n        } else if (level <= Level.INFO) console.info.apply(console, messages);\n        else if (level <= Level.WARN) console.warn.apply(console, messages);\n        else console.error.apply(console, messages);\n    },\n};\n\nfunction Logger(name, parent) {\n    this._loggers = {};\n    this.name = name || \"\";\n    this._parent = parent || null;\n    if (!parent) {\n        this._enabled = true;\n        this._level = Level.WARN;\n    }\n}\n\nLogger.prototype = {\n    getLogger: function (name) {\n        var path = name.split(\".\"),\n            root = this,\n            route = this.name ? [this.name] : [];\n        while (path.length) {\n            var entry = path.shift();\n            route.push(entry);\n            if (!(entry in root._loggers))\n                root._loggers[entry] = new Logger(route.join(\".\"), root);\n            root = root._loggers[entry];\n        }\n        return root;\n    },\n\n    _getFlag: function (flag) {\n        var context = this;\n        flag = \"_\" + flag;\n        while (context !== null) {\n            if (context[flag] !== undefined) return context[flag];\n            context = context._parent;\n        }\n        return null;\n    },\n\n    setEnabled: function (state) {\n        this._enabled = !!state;\n    },\n\n    isEnabled: function () {\n        this._getFlag(\"enabled\");\n    },\n\n    setLevel: function (level) {\n        if (typeof level === \"number\") this._level = level;\n        else if (typeof level === \"string\") {\n            level = level.toUpperCase();\n            if (level in Level) this._level = Level[level];\n        }\n    },\n\n    getLevel: function () {\n        return this._getFlag(\"level\");\n    },\n\n    log: function (level, messages) {\n        if (\n            !messages.length ||\n            !this._getFlag(\"enabled\") ||\n            level < this._getFlag(\"level\")\n        )\n            return;\n        messages = Array.prototype.slice.call(messages);\n        writer.output(this.name, level, messages);\n    },\n\n    debug: function () {\n        this.log(Level.DEBUG, arguments);\n    },\n\n    info: function () {\n        this.log(Level.INFO, arguments);\n    },\n\n    warn: function () {\n        this.log(Level.WARN, arguments);\n    },\n\n    error: function () {\n        this.log(Level.ERROR, arguments);\n    },\n\n    fatal: function () {\n        this.log(Level.FATAL, arguments);\n    },\n};\n\nfunction getWriter() {\n    return writer;\n}\n\nfunction setWriter(w) {\n    writer = w;\n}\n\nsetWriter(new ConsoleWriter());\n\nroot = new Logger();\n\nvar logconfig = /loglevel(|-[^=]+)=([^&]+)/g,\n    match;\n\nwhile ((match = logconfig.exec(window.location.search)) !== null) {\n    var logger = match[1] === \"\" ? root : root.getLogger(match[1].slice(1));\n    logger.setLevel(match[2].toUpperCase());\n}\n\nvar api = {\n    Level: Level,\n    getLogger: root.getLogger.bind(root),\n    setEnabled: root.setEnabled.bind(root),\n    isEnabled: root.isEnabled.bind(root),\n    setLevel: root.setLevel.bind(root),\n    getLevel: root.getLevel.bind(root),\n    debug: root.debug.bind(root),\n    info: root.info.bind(root),\n    warn: root.warn.bind(root),\n    error: root.error.bind(root),\n    fatal: root.fatal.bind(root),\n    getWriter: getWriter,\n    setWriter: setWriter,\n};\n\nexport default api;\n","// Patterns argument parser\nimport $ from \"jquery\";\nimport utils from \"./utils.js\";\nimport logging from \"./logging\";\n\nclass ArgumentParser {\n    constructor(name) {\n        this.order = [];\n        this.parameters = {};\n        this.attribute = \"data-pat-\" + name;\n        this.enum_values = {};\n        this.enum_conflicts = [];\n        this.groups = {};\n        this.possible_groups = {};\n        this.log = logging.getLogger(name + \".parser\");\n\n        this.group_pattern = /([a-z][a-z0-9]*)-([A-Z][a-z0-0\\-]*)/i;\n        this.json_param_pattern = /^\\s*\\[?\\s*{/i;\n        this.named_param_pattern = /^\\s*([a-z][a-z0-9\\-]*)\\s*:(.*)/is;\n        this.token_pattern = /(([\"']).*?(?!\\\\)\\2)|\\s*(\\S+)\\s*/g;\n    }\n\n    _camelCase(str) {\n        return str.replace(/\\-([a-z])/g, (__, p1) => p1.toUpperCase());\n    }\n\n    addAlias(alias, original) {\n        /* Add an alias for a previously added parser argument.\n         *\n         * Useful when you want to support both US and UK english argument\n         * names.\n         */\n        if (this.parameters[original]) {\n            this.parameters[original].alias = alias;\n        } else {\n            throw (\n                'Attempted to add an alias \"' +\n                alias +\n                '\" for a non-existing parser argument \"' +\n                original +\n                '\".'\n            );\n        }\n    }\n\n    addGroupToSpec(spec) {\n        /* Determine wether an argument being parsed can be grouped and\n         * update its specifications object accordingly.\n         *\n         * Internal method used by addArgument and addJSONArgument\n         */\n        const m = spec.name.match(this.group_pattern);\n        if (m) {\n            const group = m[1];\n            const field = m[2];\n            if (group in this.possible_groups) {\n                const first_spec = this.possible_groups[group];\n                const first_name = first_spec.name.match(this.group_pattern)[2];\n                first_spec.group = group;\n                first_spec.dest = first_name;\n                this.groups[group] = new ArgumentParser();\n                this.groups[group].addArgument(\n                    first_name,\n                    first_spec.value,\n                    first_spec.choices,\n                    first_spec.multiple\n                );\n                delete this.possible_groups[group];\n            }\n            if (group in this.groups) {\n                this.groups[group].addArgument(\n                    field,\n                    spec.value,\n                    spec.choices,\n                    spec.multiple\n                );\n                spec.group = group;\n                spec.dest = field;\n            } else {\n                this.possible_groups[group] = spec;\n                spec.dest = this._camelCase(spec.name);\n            }\n        }\n        return spec;\n    }\n\n    addJSONArgument(name, default_value) {\n        /* Add an argument where the value is provided in JSON format.\n         *\n         * This is a different usecase than specifying all arguments to\n         * the data-pat-... attributes in JSON format, and instead is part\n         * of the normal notation except that a value is in JSON instead of\n         * for example a string.\n         */\n        this.order.push(name);\n        this.parameters[name] = this.addGroupToSpec({\n            name: name,\n            value: default_value,\n            dest: name,\n            group: null,\n            type: \"json\",\n        });\n    }\n\n    addArgument(name, default_value, choices, multiple) {\n        const spec = {\n            name: name,\n            value:\n                multiple && !Array.isArray(default_value)\n                    ? [default_value]\n                    : default_value,\n            multiple: multiple,\n            dest: name,\n            group: null,\n        };\n        if (choices && Array.isArray(choices) && choices.length) {\n            spec.choices = choices;\n            spec.type = this._typeof(choices[0]);\n            for (const choice of choices) {\n                if (this.enum_conflicts.indexOf(choice) !== -1) {\n                    continue;\n                } else if (choice in this.enum_values) {\n                    this.enum_conflicts.push(choice);\n                    delete this.enum_values[choice];\n                } else {\n                    this.enum_values[choice] = name;\n                }\n            }\n        } else if (typeof spec.value === \"string\" && spec.value.slice(0, 1) === \"$\") {\n            spec.type = this.parameters[spec.value.slice(1)].type;\n        } else {\n            // Note that this will get reset by _defaults if default_value is a function.\n            spec.type = this._typeof(multiple ? spec.value[0] : spec.value);\n        }\n        this.order.push(name);\n        this.parameters[name] = this.addGroupToSpec(spec);\n    }\n\n    _typeof(obj) {\n        if (obj === null) {\n            return \"null\";\n        }\n        return typeof obj;\n    }\n\n    _coerce(name, value) {\n        const spec = this.parameters[name];\n        if (typeof value !== spec.type)\n            try {\n                switch (spec.type) {\n                    case \"json\":\n                        value = JSON.parse(value);\n                        break;\n                    case \"boolean\":\n                        if (typeof value === \"string\") {\n                            value = value.toLowerCase();\n                            const num = parseInt(value, 10);\n                            if (!isNaN(num)) value = !!num;\n                            else\n                                value =\n                                    value === \"true\" ||\n                                    value === \"y\" ||\n                                    value === \"yes\" ||\n                                    value === \"y\" ||\n                                    value === \"on\";\n                        } else if (typeof value === \"number\") {\n                            value = !!value;\n                        } else {\n                            throw \"Cannot convert value for \" + name + \" to boolean\";\n                        }\n                        break;\n                    case \"number\":\n                        if (typeof value === \"string\") {\n                            value = parseInt(value, 10);\n                            if (isNaN(value)) {\n                                throw \"Cannot convert value for \" + name + \" to number\";\n                            }\n                        } else if (typeof value === \"boolean\") {\n                            value = value + 0;\n                        } else {\n                            throw \"Cannot convert value for \" + name + \" to number\";\n                        }\n                        break;\n                    case \"string\":\n                        value = value.toString();\n                        break;\n                    case \"null\": // Missing default values\n                    case \"undefined\":\n                        break;\n                    default:\n                        throw (\n                            \"Do not know how to convert value for \" +\n                            name +\n                            \" to \" +\n                            spec.type\n                        );\n                }\n            } catch (e) {\n                this.log.warn(e);\n                return null;\n            }\n\n        if (spec.choices && spec.choices.indexOf(value) === -1) {\n            this.log.warn(\"Illegal value for \" + name + \": \" + value);\n            return null;\n        }\n        return value;\n    }\n\n    _set(opts, name, value) {\n        if (!(name in this.parameters)) {\n            this.log.debug(\"Ignoring value for unknown argument \" + name);\n            return;\n        }\n        const spec = this.parameters[name];\n        let parts;\n        if (spec.multiple) {\n            if (typeof value === \"string\") {\n                parts = value.split(/,+/);\n            } else {\n                parts = value;\n            }\n            value = [];\n            for (const part of parts) {\n                const v = this._coerce(name, part.trim());\n                if (v !== null) {\n                    value.push(v);\n                }\n            }\n        } else {\n            value = this._coerce(name, value);\n            if (value === null) {\n                return;\n            }\n        }\n        opts[name] = value;\n    }\n\n    _split(text) {\n        const tokens = [];\n        text.replace(this.token_pattern, (match, quoted, __, simple) => {\n            if (quoted) {\n                tokens.push(quoted);\n            } else if (simple) {\n                tokens.push(simple);\n            }\n        });\n        return tokens;\n    }\n\n    _parseExtendedNotation(argstring) {\n        const opts = {};\n        const parts = argstring\n            .replace(/;;/g, \"\\0x1f\")\n            .replace(/&amp;/g, \"&amp\\0x1f\")\n            .split(/;/)\n            .map((el) => el.replace(new RegExp(\"\\0x1f\", \"g\"), \";\"));\n        for (const part of parts) {\n            if (!part) {\n                continue;\n            }\n            const matches = part.match(this.named_param_pattern);\n            if (!matches) {\n                this.log.warn(\"Invalid parameter: \" + part + \": \" + argstring);\n                continue;\n            }\n            const name = matches[1];\n            const value = matches[2].trim();\n            const arg = Object.values(this.parameters).filter((it) => it.alias === name);\n\n            const is_alias = arg.length === 1;\n\n            if (is_alias) {\n                this._set(opts, arg[0].name, value);\n            } else if (name in this.parameters) {\n                this._set(opts, name, value);\n            } else if (name in this.groups) {\n                const subopt = this.groups[name]._parseShorthandNotation(value);\n                for (const field in subopt) {\n                    this._set(opts, name + \"-\" + field, subopt[field]);\n                }\n            } else {\n                this.log.warn(\"Unknown named parameter \" + matches[1]);\n                continue;\n            }\n        }\n        return opts;\n    }\n\n    _parseShorthandNotation(parameter) {\n        const parts = this._split(parameter);\n        const opts = {};\n        let i = 0;\n\n        while (parts.length) {\n            const part = parts.shift().trim();\n            let sense;\n            let flag;\n            let positional = true;\n            if (part.slice(0, 3) === \"no-\") {\n                sense = false;\n                flag = part.slice(3);\n            } else {\n                sense = true;\n                flag = part;\n            }\n            if (flag in this.parameters && this.parameters[flag].type === \"boolean\") {\n                positional = false;\n                this._set(opts, flag, sense);\n            } else if (flag in this.enum_values) {\n                positional = false;\n                this._set(opts, this.enum_values[flag], flag);\n            } else if (positional) this._set(opts, this.order[i], part);\n            else {\n                parts.unshift(part);\n                break;\n            }\n            i++;\n            if (i >= this.order.length) {\n                break;\n            }\n        }\n        if (parts.length) this.log.warn(\"Ignore extra arguments: \" + parts.join(\" \"));\n        return opts;\n    }\n\n    _parse(parameter) {\n        if (!parameter) {\n            return {};\n        }\n        if (parameter.match(this.json_param_pattern)) {\n            try {\n                return JSON.parse(parameter);\n            } catch (e) {\n                this.log.warn(\"Invalid JSON argument found: \" + parameter);\n            }\n        }\n        if (parameter.match(this.named_param_pattern)) {\n            return this._parseExtendedNotation(parameter);\n        }\n        const sep = parameter.indexOf(\";\");\n        if (sep === -1) {\n            return this._parseShorthandNotation(parameter);\n        }\n        const opts = this._parseShorthandNotation(parameter.slice(0, sep));\n        const extended = this._parseExtendedNotation(parameter.slice(sep + 1));\n        for (const name in extended) {\n            opts[name] = extended[name];\n        }\n        return opts;\n    }\n\n    _defaults($el) {\n        const result = {};\n        for (const name in this.parameters)\n            if (typeof this.parameters[name].value === \"function\")\n                try {\n                    result[name] = this.parameters[name].value($el, name);\n                    this.parameters[name].type = typeof result[name];\n                } catch (e) {\n                    this.log.error(\"Default function for \" + name + \" failed.\");\n                }\n            else result[name] = this.parameters[name].value;\n        return result;\n    }\n\n    _cleanupOptions(options, group_options = true) {\n        // Resolve references\n        for (const name of Object.keys(options)) {\n            const spec = this.parameters[name];\n            if (spec === undefined) continue;\n\n            if (\n                options[name] === spec.value &&\n                typeof spec.value === \"string\" &&\n                spec.value.slice(0, 1) === \"$\"\n            )\n                options[name] = options[spec.value.slice(1)];\n        }\n        if (group_options) {\n            // Move options into groups and do renames\n            for (const name of Object.keys(options)) {\n                const spec = this.parameters[name];\n                let target;\n                if (spec === undefined) continue;\n\n                if (spec.group) {\n                    if (typeof options[spec.group] !== \"object\")\n                        options[spec.group] = {};\n                    target = options[spec.group];\n                } else {\n                    target = options;\n                }\n\n                if (spec.dest !== name) {\n                    target[spec.dest] = options[name];\n                    delete options[name];\n                }\n            }\n        }\n        return options;\n    }\n\n    parse($el, options, multiple, inherit = true, group_options = true) {\n        if (!$el.jquery) {\n            $el = $($el);\n        }\n        if (typeof options === \"boolean\" && multiple === undefined) {\n            // Fix argument order: ``multiple`` passed instead of ``options``.\n            multiple = options;\n            options = {};\n        }\n        const stack = inherit ? [[this._defaults($el)]] : [[{}]];\n        let $possible_config_providers;\n        let final_length = 1;\n        /*\n         * XXX this is a workaround for:\n         * - https://github.com/Patternslib/Patterns/issues/393\n         *\n         * Prevents the parser to pollute the pat-modal configuration\n         * with data-pat-inject elements define in a `.pat-modal` parent element.\n         *\n         *  Probably this function should be completely revisited, see:\n         * - https://github.com/Patternslib/Patterns/issues/627\n         *\n         */\n        if (\n            !inherit ||\n            ($el.hasClass(\"pat-modal\") && this.attribute === \"data-pat-inject\")\n        ) {\n            $possible_config_providers = $el;\n        } else {\n            $possible_config_providers = $el\n                .parents(\"[\" + this.attribute + \"]\")\n                .addBack();\n        }\n\n        for (const provider of $possible_config_providers) {\n            let frame;\n            const data = ($(provider).attr(this.attribute) || \"\").trim();\n            if (!data) {\n                continue;\n            }\n            const _parse = this._parse.bind(this);\n            if (data.match(/&&/)) {\n                frame = data.split(/\\s*&&\\s*/).map(_parse);\n            } else {\n                frame = _parse(data);\n            }\n            if (!Array.isArray(frame)) {\n                frame = [frame];\n            }\n            final_length = Math.max(frame.length, final_length);\n            stack.push(frame);\n        }\n\n        if (typeof options === \"object\") {\n            if (Array.isArray(options)) {\n                stack.push(options);\n                final_length = Math.max(options.length, final_length);\n            } else {\n                stack.push([options]);\n            }\n        }\n        if (!multiple) {\n            final_length = 1;\n        }\n        const results = utils\n            .removeDuplicateObjects(utils.mergeStack(stack, final_length))\n            .map((current_value) => this._cleanupOptions(current_value, group_options));\n        return multiple ? results : results[0];\n    }\n}\n\n// BBB\nArgumentParser.prototype.add_argument = ArgumentParser.prototype.addArgument;\n\nexport default ArgumentParser;\n","// Polyfills for modern browsers\n\n// SubmitEvent.submitter polyfill for Safari < 15.4 and jsDOM\n// Original code: https://stackoverflow.com/a/61110260/1337474\n// Also see: https://caniuse.com/?search=submitter\n//\n!(function () {\n    let last_btn = null;\n    const submitable_buttons = `button, input[type=\"button\"], input[type=\"submit\"], input[type=\"image\"]`;\n    document.addEventListener(\n        \"click\",\n        function (e) {\n            if (!e.target.closest) return;\n            last_btn = e.target.closest(submitable_buttons);\n        },\n        true\n    );\n    document.addEventListener(\n        \"submit\",\n        function (e) {\n            if (\"submitter\" in e) return;\n            const canditates = [document.activeElement, last_btn];\n            last_btn = null;\n            for (const candidate of canditates) {\n                if (!candidate) continue;\n                if (!candidate.form) continue;\n                if (!candidate.matches(submitable_buttons)) continue;\n                e.submitter = candidate;\n                return;\n            }\n            e.submitter = e.target.querySelector(submitable_buttons);\n        },\n        true\n    );\n})();\n","/**\n * Patterns registry - Central registry and scan logic for patterns\n *\n * Copyright 2012-2013 Simplon B.V.\n * Copyright 2012-2013 Florian Friesdorf\n * Copyright 2013 Marko Durkovic\n * Copyright 2013 Rok Garbas\n * Copyright 2014-2015 Syslab.com GmBH, JC Brand\n */\n\n/*\n * changes to previous patterns.register/scan mechanism\n * - if you want initialised class, do it in init\n * - init returns set of elements actually initialised\n * - handle once within init\n * - no turnstile anymore\n * - set pattern.jquery_plugin if you want it\n */\nimport $ from \"jquery\";\nimport dom from \"./dom\";\nimport logging from \"./logging\";\nimport utils from \"./utils\";\n\nconst log = logging.getLogger(\"registry\");\nconst disable_re = /patterns-disable=([^&]+)/g;\nconst dont_catch_re = /patterns-dont-catch/g;\nconst disabled = {};\nlet dont_catch = false;\nlet match;\n\nwhile ((match = disable_re.exec(window.location.search)) !== null) {\n    disabled[match[1]] = true;\n    log.info(\"Pattern disabled via url config:\", match[1]);\n}\n\nwhile ((match = dont_catch_re.exec(window.location.search)) !== null) {\n    dont_catch = true;\n    log.info(\"I will not catch init exceptions\");\n}\n\n/**\n * Global pattern registry.\n *\n * This is a singleton and shared among any instance of the Patternslib\n * registry since Patternslib version 8.\n *\n * You normally don't need this as the registry handles it for you.\n */\nif (typeof window.__patternslib_registry === \"undefined\") {\n    window.__patternslib_registry = {};\n}\nexport const PATTERN_REGISTRY = window.__patternslib_registry;\nif (typeof window.__patternslib_registry_initialized === \"undefined\") {\n    window.__patternslib_registry_initialized = false;\n}\n\nconst registry = {\n    patterns: PATTERN_REGISTRY, // reference to global patterns registry\n    // as long as the registry is not initialized, pattern\n    // registration just registers a pattern. Once init is called,\n    // the DOM is scanned. After that registering a new pattern\n    // results in rescanning the DOM only for this pattern.\n    init() {\n        $(document).ready(function () {\n            if (window.__patternslib_registry_initialized) {\n                // Do not reinitialize a already initialized registry.\n                return;\n            }\n            window.__patternslib_registry_initialized = true;\n            log.debug(\"Loaded: \" + Object.keys(registry.patterns).sort().join(\", \"));\n            registry.scan(document.body);\n            log.debug(\"Finished initial scan.\");\n        });\n    },\n\n    clear() {\n        // Removes all patterns from the registry. Currently only being\n        // used in tests.\n        for (const name in registry.patterns) {\n            delete registry.patterns[name];\n        }\n    },\n\n    transformPattern(name, content) {\n        /* Call the transform method on the pattern with the given name, if\n         * it exists.\n         */\n        if (disabled[name]) {\n            log.debug(`Skipping disabled pattern: ${name}.`);\n            return;\n        }\n\n        const pattern = registry.patterns[name];\n        const transform = pattern.transform || pattern.prototype?.transform;\n        if (transform) {\n            try {\n                transform($(content));\n            } catch (e) {\n                if (dont_catch) {\n                    throw e;\n                }\n                log.error(`Transform error for pattern ${name}.`, e);\n            }\n        }\n    },\n\n    initPattern(name, el, trigger) {\n        /* Initialize the pattern with the provided name and in the context\n         * of the passed in DOM element.\n         */\n        const $el = $(el);\n        const pattern = registry.patterns[name];\n        const plog = logging.getLogger(`pat.${name}`);\n        if (el.matches(pattern.trigger)) {\n            plog.debug(\"Initialising.\", el);\n            try {\n                if (pattern.init) {\n                    // old style initialisation\n                    pattern.init($el, null, trigger);\n                } else {\n                    // class based pattern initialisation\n                    new pattern($el, null, trigger);\n                }\n\n                plog.debug(\"done.\");\n            } catch (e) {\n                if (dont_catch) {\n                    throw e;\n                }\n                plog.error(\"Caught error:\", e);\n            }\n        }\n    },\n\n    orderPatterns(patterns) {\n        // Always add pat-validation as first pattern, so that it can prevent\n        // other patterns from reacting to submit events if form validation\n        // fails.\n        if (patterns.includes(\"validation\")) {\n            patterns.splice(patterns.indexOf(\"validation\"), 1);\n            patterns.unshift(\"validation\");\n        }\n        // Add clone-code to the very beginning - we want to copy the markup\n        // before any other patterns changed the markup.\n        if (patterns.includes(\"clone-code\")) {\n            patterns.splice(patterns.indexOf(\"clone-code\"), 1);\n            patterns.unshift(\"clone-code\");\n        }\n\n        return patterns;\n    },\n\n    scan(content, patterns, trigger) {\n        if (!content) {\n            return;\n        }\n\n        if (typeof content === \"string\") {\n            content = document.querySelector(content);\n        } else if (content instanceof Text) {\n            // No need to scan a TextNode.\n            return;\n        } else if (content.jquery) {\n            content = content[0];\n        }\n\n        const selectors = [];\n        patterns = this.orderPatterns(patterns || Object.keys(registry.patterns));\n        for (const name of patterns) {\n            this.transformPattern(name, content);\n            const pattern = registry.patterns[name];\n            if (pattern.trigger) {\n                selectors.unshift(pattern.trigger);\n            }\n        }\n\n        let matches = dom.querySelectorAllAndMe(\n            content,\n            selectors.map((it) => it.trim().replace(/,$/, \"\")).join(\",\")\n        );\n        matches = matches.filter((el) => {\n            // Filter out patterns:\n            // - with class ``.disable-patterns``\n            // - wrapped in ``.disable-patterns`` elements\n            // - wrapped in ``<pre>`` elements\n            // - wrapped in ``<template>`` elements\n            return (\n                !el.matches(\".disable-patterns\") &&\n                !el?.parentNode?.closest?.(\".disable-patterns\") &&\n                !el?.parentNode?.closest?.(\"pre\") &&\n                !el?.parentNode?.closest?.(\"template\") && // NOTE: not strictly necessary. Template is a DocumentFragment and not reachable except for IE.\n                !el.matches(\".cant-touch-this\") && // BBB. TODO: Remove with next major version.\n                !el?.parentNode?.closest?.(\".cant-touch-this\") // BBB. TODO: Remove with next major version.\n            );\n        });\n\n        // walk list backwards and initialize patterns inside-out.\n        for (const el of matches.reverse()) {\n            for (const name of patterns) {\n                this.initPattern(name, el, trigger);\n            }\n        }\n        document.body.classList.add(\"patterns-loaded\");\n    },\n\n    register(pattern, name) {\n        name = name || pattern.name;\n        if (!name) {\n            log.error(\"Pattern lacks a name.\", pattern);\n            return false;\n        }\n        if (registry.patterns[name]) {\n            log.debug(`Already have a pattern called ${name}.`);\n            return false;\n        }\n        // register pattern to be used for scanning new content\n        registry.patterns[name] = pattern;\n\n        // register pattern as jquery plugin\n        if (pattern.jquery_plugin) {\n            const plugin_name = (\"pat-\" + name).replace(\n                /-([a-zA-Z])/g,\n                function (match, p1) {\n                    return p1.toUpperCase();\n                }\n            );\n            $.fn[plugin_name] = utils.jqueryPlugin(pattern);\n            // BBB 2012-12-10 and also for Mockup patterns.\n            $.fn[plugin_name.replace(/^pat/, \"pattern\")] = $.fn[plugin_name];\n        }\n        log.debug(`Registered pattern ${name}`, pattern);\n        if (window.__patternslib_registry_initialized) {\n            // Once the first initialization has been done, do only scan for\n            // newly registered patterns.\n            registry.scan(document.body, [name]);\n            log.debug(`Re-scanned dom with newly registered pattern ${name}.`);\n        }\n        return true;\n    },\n};\n\nexport default registry;\n","import $ from \"jquery\";\nimport dom from \"./dom\";\n\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24; // Milliseconds per day.\n\n$.fn.safeClone = function () {\n    var $clone = this.clone();\n    return $clone;\n};\n\n// Production steps of ECMA-262, Edition 5, 15.4.4.18\n// Reference: http://es5.github.io/#x15.4.4.18\nif (!Array.prototype.forEach) {\n    Array.prototype.forEach = function (callback, thisArg) {\n        var T, k;\n        if (this === null) {\n            throw new TypeError(\" this is null or not defined\");\n        }\n        // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n        var O = Object(this);\n        // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n        // 3. Let len be ToUint32(lenValue).\n        var len = O.length >>> 0;\n        // 4. If IsCallable(callback) is false, throw a TypeError exception.\n        // See: http://es5.github.com/#x9.11\n        if (typeof callback !== \"function\") {\n            throw new TypeError(callback + \" is not a function\");\n        }\n        // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 1) {\n            T = thisArg;\n        }\n        // 6. Let k be 0\n        k = 0;\n        // 7. Repeat, while k < len\n        while (k < len) {\n            var kValue;\n            // a. Let Pk be ToString(k).\n            //   This is implicit for LHS operands of the in operator\n            // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n            //   This step can be combined with c\n            // c. If kPresent is true, then\n            if (k in O) {\n                // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n                kValue = O[k];\n                // ii. Call the Call internal method of callback with T as the this value and\n                // argument list containing kValue, k, and O.\n                callback.call(T, kValue, k, O);\n            }\n            // d. Increase k by 1.\n            k++;\n        }\n        // 8. return undefined\n    };\n}\n\nvar singleBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR EACH\n     * matched element in the DOM.\n     *\n     * This is how the Mockup-type patterns behave. They are constructor\n     * functions which need to be invoked once per jQuery-wrapped DOM node\n     * for all DOM nodes on which the pattern applies.\n     */\n    var $this = this;\n    $this.each(function () {\n        var pat,\n            $el = $(this);\n        pat = pattern.init($el, options);\n        if (method) {\n            if (pat[method] === undefined) {\n                $.error(\n                    \"Method \" + method + \" does not exist on jQuery.\" + pattern.name\n                );\n                return false;\n            }\n            if (method.charAt(0) === \"_\") {\n                $.error(\"Method \" + method + \" is private on jQuery.\" + pattern.name);\n                return false;\n            }\n            pat[method].apply(pat, [options]);\n        }\n    });\n    return $this;\n};\n\nvar pluralBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR ALL\n     * matched elements in the DOM.\n     *\n     * This is how the vanilla Patternslib-type patterns behave. They are\n     * simple objects with an init method and this method gets called once\n     * with a list of jQuery-wrapped DOM nodes on which the pattern\n     * applies.\n     */\n    var $this = this;\n    if (method) {\n        if (pattern[method]) {\n            return pattern[method].apply($this, [$this].concat([options]));\n        } else {\n            $.error(\"Method \" + method + \" does not exist on jQuery.\" + pattern.name);\n        }\n    } else {\n        pattern.init.apply($this, [$this].concat([options]));\n    }\n    return $this;\n};\n\nvar jqueryPlugin = function (pattern) {\n    return function (method, options) {\n        var $this = this;\n        if ($this.length === 0) {\n            return $this;\n        }\n        if (typeof method === \"object\") {\n            options = method;\n            method = undefined;\n        }\n        if (typeof pattern === \"function\") {\n            return singleBoundJQueryPlugin.call(this, pattern, method, options);\n        } else {\n            return pluralBoundJQueryPlugin.call(this, pattern, method, options);\n        }\n    };\n};\n\n// Is a given variable an object?\nfunction isObject(obj) {\n    var type = typeof obj;\n    return type === \"function\" || (type === \"object\" && !!obj);\n}\n\n// Extend a given object with all the properties in passed-in object(s).\nfunction extend(obj) {\n    if (!isObject(obj)) return obj;\n    var source, prop;\n    for (var i = 1, length = arguments.length; i < length; i++) {\n        source = arguments[i];\n        for (prop in source) {\n            if (hasOwnProperty.call(source, prop)) {\n                obj[prop] = source[prop];\n            }\n        }\n    }\n    return obj;\n}\n// END: Taken from Underscore.js until here.\n\nfunction findLabel(input) {\n    var $label;\n    for (\n        var label = input.parentNode;\n        label && label.nodeType !== 11;\n        label = label.parentNode\n    ) {\n        if (label.tagName === \"LABEL\") {\n            return label;\n        }\n    }\n    if (input.id) {\n        $label = $('label[for=\"' + input.id + '\"]');\n    }\n    if ($label && $label.length === 0 && input.form) {\n        $label = $('label[for=\"' + input.name + '\"]', input.form);\n    }\n    if ($label && $label.length) {\n        return $label[0];\n    } else {\n        return null;\n    }\n}\n\n// Taken from http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nfunction escapeRegExp(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\n\n/**\n * Remove classes from a list of targets if they match a specific pattern.\n *\n * @param {Node, NodeList} targets: Dom Node or NodeList where the classes should be removed.\n * @param {string} classes: String matching classes to be removed.\n *                          You can add a \"*\" as wildcard to search for classes to be removed.\n *                          E.g. \"icon-*-alert\" to remove any of \"icon-1-alert icon-2-alert\".\n *\n * @returns {undefined}: This method directly operates on the targets.\n */\nfunction removeWildcardClass(targets, classes) {\n    targets = utils.ensureArray(targets);\n\n    if (classes.indexOf(\"*\") === -1) {\n        for (const target of targets) {\n            target.classList.remove(classes);\n        }\n    } else {\n        let matcher = classes.replace(/[\\-\\[\\]{}()+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n        matcher = matcher.replace(/[*]/g, \".*\");\n        matcher = new RegExp(\"^\" + matcher + \"$\");\n\n        for (const target of targets) {\n            const class_list = (target.getAttribute(\"class\") || \"\").split(/\\s+/);\n            if (!class_list.length) {\n                continue;\n            }\n            const ok = class_list.filter((it) => !matcher.test(it));\n            if (ok.length) {\n                target.setAttribute(\"class\", ok.join(\" \"));\n            } else {\n                target.removeAttribute(\"class\");\n            }\n        }\n    }\n}\n\nfunction hasValue(el) {\n    if (el.tagName === \"INPUT\") {\n        if (el.type === \"checkbox\" || el.type === \"radio\") {\n            return el.checked;\n        }\n        return el.value !== \"\";\n    }\n    if (el.tagName === \"SELECT\") {\n        return el.selectedIndex !== -1;\n    }\n    if (el.tagName === \"TEXTAREA\") {\n        return el.value !== \"\";\n    }\n    return false;\n}\n\nconst hideOrShow = (nodes, visible, options, pattern_name) => {\n    nodes = dom.toNodeArray(nodes);\n\n    const transitions = {\n        none: { hide: \"hide\", show: \"show\" },\n        fade: { hide: \"fadeOut\", show: \"fadeIn\" },\n        slide: { hide: \"slideUp\", show: \"slideDown\" },\n    };\n\n    const duration =\n        options.transition === \"css\" || options.transition === \"none\"\n            ? null\n            : options.effect.duration;\n\n    const on_complete = (el) => {\n        el.classList.remove(\"in-progress\");\n        el.classList.add(visible ? \"visible\" : \"hidden\");\n        $(el).trigger(\"pat-update\", {\n            pattern: pattern_name,\n            action: \"attribute-changed\",\n            dom: el,\n            transition: \"complete\",\n        });\n    };\n\n    for (const el of nodes) {\n        el.classList.remove(\"visible\");\n        el.classList.remove(\"hidden\");\n        el.classList.remove(\"in-progress\");\n\n        if (duration) {\n            const t = transitions[options.transition];\n            el.classList.add(\"in-progress\");\n            $(el).trigger(\"pat-update\", {\n                pattern: pattern_name,\n                action: \"attribute-changed\",\n                dom: el,\n                transition: \"start\",\n            });\n            $(el)[visible ? t.show : t.hide]({\n                duration: duration,\n                easing: options.effect.easing,\n                complete: () => on_complete(el),\n            });\n        } else {\n            if (options.transition !== \"css\") {\n                dom[visible ? \"show\" : \"hide\"](el);\n            }\n            on_complete(el);\n        }\n    }\n};\n\nfunction addURLQueryParameter(fullURL, param, value) {\n    /* Using a positive lookahead (?=\\=) to find the given parameter,\n     * preceded by a ? or &, and followed by a = with a value after\n     * than (using a non-greedy selector) and then followed by\n     * a & or the end of the string.\n     *\n     * Taken from http://stackoverflow.com/questions/7640270/adding-modify-query-string-get-variables-in-a-url-with-javascript\n     */\n    var val = new RegExp(\"(\\\\?|\\\\&)\" + param + \"=.*?(?=(&|$))\"),\n        parts = fullURL.toString().split(\"#\"),\n        url = parts[0],\n        hash = parts[1],\n        qstring = /\\?.+$/,\n        newURL = url;\n    // Check if the parameter exists\n    if (val.test(url)) {\n        // if it does, replace it, using the captured group\n        // to determine & or ? at the beginning\n        newURL = url.replace(val, \"$1\" + param + \"=\" + value);\n    } else if (qstring.test(url)) {\n        // otherwise, if there is a query string at all\n        // add the param to the end of it\n        newURL = url + \"&\" + param + \"=\" + value;\n    } else {\n        // if there's no query string, add one\n        newURL = url + \"?\" + param + \"=\" + value;\n    }\n    if (hash) {\n        newURL += \"#\" + hash;\n    }\n    return newURL;\n}\n\nfunction removeDuplicateObjects(objs) {\n    /* Given an array of objects, remove any duplicate objects which might\n     * be present.\n     */\n    const comparator = function (k, v) {\n        return this[k] === v;\n    };\n\n    return objs.reduce(function (list, next_obj) {\n        let is_duplicate = false;\n        for (const obj of list) {\n            is_duplicate =\n                Object.keys(obj).length === Object.keys(next_obj).length &&\n                Object.entries(obj).filter(\n                    (it) => !comparator.bind(next_obj)(it[0], it[1])\n                ).length === 0;\n        }\n        if (!is_duplicate) {\n            list.push(next_obj);\n        }\n        return list;\n    }, []);\n}\n\nfunction mergeStack(stack, length) {\n    /* Given a list of lists of objects (which for brevity we call a stack),\n     * return a list of objects where each object is the merge of all the\n     * corresponding original objects at that particular index.\n     *\n     * If a certain sub-list doesn't have an object at that particular\n     * index, the last object in that list is merged.\n     */\n    const results = [];\n    for (let i = 0; i < length; i++) {\n        results.push({});\n    }\n    for (const frame of stack) {\n        const frame_length = frame.length - 1;\n        for (let x = 0; x < length; x++) {\n            results[x] = $.extend(\n                results[x] || {},\n                frame[x > frame_length ? frame_length : x]\n            );\n        }\n    }\n    return results;\n}\n\nfunction isElementInViewport(el, partial = false, offset = 0) {\n    /* returns true if element is visible to the user ie. is in the viewport.\n     * Setting partial parameter to true, will only check if a part of the element is visible\n     * in the viewport, specifically that some part of that element is touching the top part\n     * of the viewport. This only applies to the vertical direction, ie. doesnt check partial\n     * visibility for horizontal scrolling\n     * some code taken from:\n     * http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport/7557433#7557433\n     */\n    if (el instanceof $) {\n        el = el[0];\n    }\n\n    const rec = el.getBoundingClientRect();\n    const rec_values = [rec.top, rec.bottom, rec.left, rec.right];\n\n    if (rec_values.every((val) => val === 0)) {\n        // if every property of rec is 0, the element is invisible;\n        return false;\n    } else if (partial) {\n        // when using getBoundingClientRect() (in the vertical case)\n        // negative means above top of viewport, positive means below top of viewport\n        // therefore for part of the element to be touching or crossing the top of the viewport\n        // rec.top must <= 0 and rec.bottom must >= 0\n        // an optional tolerance offset can be added for when the desired element is not exactly\n        // toucing the top of the viewport but needs to be considered as touching.\n        return (\n            rec.top <= 0 + offset && rec.bottom >= 0 + offset\n            //(rec.top >= 0+offset && rec.top <= window.innerHeight) // this checks if the element\n            // touches bottom part of viewport\n            // XXX do we want to include a check for the padding of an element?\n            // using window.getComputedStyle(target).paddingTop\n        );\n    } else {\n        // this will return true if the entire element is completely in the viewport\n        return (\n            rec.top >= 0 &&\n            rec.left >= 0 &&\n            rec.bottom <=\n                (window.innerHeight || document.documentElement.clientHeight) &&\n            rec.right <= (window.innerWidth || document.documentElement.clientWidth)\n        );\n    }\n}\n\n/* parseTime - Parse a duration from a string and return the parsed time in milliseconds.\n *\n * @param {String} time - A duration/time string like ``1ms``, ``1s`` or ``1m``.\n *\n * @returns {Number} - A integer which represents the parsed time in milliseconds.\n */\nfunction parseTime(time) {\n    var m = /^(\\d+(?:\\.\\d+)?)\\s*(\\w*)/.exec(time);\n    if (!m) {\n        throw new Error(\"Invalid time\");\n    }\n    var amount = parseFloat(m[1]);\n    switch (m[2]) {\n        case \"s\":\n            return Math.round(amount * 1000);\n        case \"m\":\n            return Math.round(amount * 1000 * 60);\n        case \"ms\":\n        default:\n            return Math.round(amount);\n    }\n}\n\n/*\n\n * parseLength - Parse a length from a string and return the parsed length in\n * pixels.\n\n * @param {String} length - A length string like `1px` or `25%`. Lengths without a unit are treated as pixels.\n * @param {Number} reference_length - The reference length to use for percentage lengths.\n *\n * @returns {Number} - A integer which represents the parsed length in pixels.\n *\n * @throws {Error} - If the length string is invalid.\n *\n * @example\n * parseLength(\"1px\"); // 1\n * parseLength(\"10%\", 100); // 10\n *\n */\nfunction parseLength(length, reference_length = null) {\n    const m = /^(\\d+(?:\\.\\d+)?)\\s*(\\%?\\w*)/.exec(length);\n    if (!m) {\n        throw new Error(\"Invalid length\");\n    }\n    const amount = parseFloat(m[1]);\n    switch (m[2]) {\n        case \"px\":\n            return Math.round(amount);\n        case \"%\":\n            if (!reference_length) {\n                return 0;\n            }\n            return (reference_length / 100) * Math.round(amount);\n        case \"vw\":\n            return Math.round((amount * window.innerWidth) / 100);\n        case \"vh\":\n            return Math.round((amount * window.innerHeight) / 100);\n        case \"vmin\":\n            return Math.round(\n                (amount * Math.min(window.innerWidth, window.innerHeight)) / 100\n            );\n        case \"vmax\":\n            return Math.round(\n                (amount * Math.max(window.innerWidth, window.innerHeight)) / 100\n            );\n        default:\n            return Math.round(amount);\n    }\n}\n\n// Return a jQuery object with elements related to an input element.\nfunction findRelatives(el) {\n    var $el = $(el),\n        $relatives = $(el),\n        $label = $();\n\n    $relatives = $relatives.add($el.closest(\"label\"));\n    $relatives = $relatives.add($el.closest(\"fieldset\"));\n\n    if (el.id) $label = $(\"label[for='\" + el.id + \"']\");\n    if (!$label.length) {\n        var $form = $el.closest(\"form\");\n        if (!$form.length) $form = $(document.body);\n        $label = $form.find(\"label[for='\" + el.name + \"']\");\n    }\n    $relatives = $relatives.add($label);\n    return $relatives;\n}\n\nfunction get_bounds(el) {\n    // Return bounds of an element with it's values rounded and converted to ints.\n    const bounds = el.getBoundingClientRect();\n    return {\n        x: parseInt(Math.round(bounds.x), 10) || 0,\n        y: parseInt(Math.round(bounds.y), 10) || 0,\n        top: parseInt(Math.round(bounds.top), 10) || 0,\n        bottom: parseInt(Math.round(bounds.bottom), 10) || 0,\n        left: parseInt(Math.round(bounds.left), 10) || 0,\n        right: parseInt(Math.round(bounds.right), 10) || 0,\n        width: parseInt(Math.round(bounds.width), 10) || 0,\n        height: parseInt(Math.round(bounds.height), 10) || 0,\n    };\n}\n\nfunction checkInputSupport(type, invalid_value) {\n    /* Check input type support.\n     *  See: https://stackoverflow.com/a/10199306/1337474\n     */\n    let support = false;\n    const input = document.createElement(\"input\");\n    input.setAttribute(\"type\", type);\n    support = input.type == type;\n\n    if (invalid_value !== undefined) {\n        // Check for input type UI support\n        input.setAttribute(\"value\", invalid_value);\n        support = input.value !== invalid_value;\n    }\n    return support;\n}\n\nconst checkCSSFeature = (attribute, value, tag = \"div\") => {\n    /* Check for browser support of specific CSS feature.\n     */\n    tag = document.createElement(tag);\n    let supported = tag.style[attribute] !== undefined;\n    if (supported && value !== undefined) {\n        tag.style[attribute] = value;\n        supported = tag.style[attribute] === value;\n    }\n    return supported;\n};\n\nconst animation_frame = () => {\n    // Return promise to await next repaint cycle\n    // Use it in your async function like so: ``await utils.animation_frame()``\n    // From: http://www.albertlobo.com/fractals/async-await-requestanimationframe-buddhabrot\n    return new Promise(window.requestAnimationFrame);\n};\n\nconst timeout = (ms) => {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n};\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds.\n * From: https://underscorejs.org/#debounce\n *\n * @param {Function} func - The function to debounce.\n * @param {Number} ms - The time in milliseconds to debounce.\n * @param {Object} timer - A module-global timer as an object.\n * @param {Boolean} postpone - If true, the function will be called after it stops being called for N milliseconds.\n *\n * @returns {Function} - The debounced function.\n */\nconst debounce = (func, ms, timer = { timer: null }, postpone = true) => {\n    // Returns a function, that, as long as it continues to be invoked, will not\n    // be triggered. The function will be called after it stops being called for\n    // N milliseconds.\n    // From: https://underscorejs.org/#debounce\n    //\n    // Make sure to initialize ``debounce`` only once per to-be-debounced\n    // function to not reinitialize the timer each time and debounce not being\n    // able to cancel previouse runs.\n    //\n    // Pass a module-global timer as an object ``{ timer: null }`` if you want\n    // to also cancel debounced functions from other pattern-invocations.\n    timer.last_run = 0;\n    return function () {\n        const args = arguments;\n        if (!postpone && timer.timer && Date.now() - timer.last_run <= ms) {\n            return;\n        }\n        clearTimeout(timer.timer);\n        timer.last_run = Date.now();\n        timer.timer = setTimeout(() => {\n            func.apply(this, args);\n        }, ms);\n    };\n};\n\nconst isIE = () => {\n    // See: https://stackoverflow.com/a/9851769/1337474\n    // Internet Explorer 6-11\n    return /*@cc_on!@*/ false || !!document.documentMode;\n};\n\nconst jqToNode = (el) => {\n    // Return a DOM node if a jQuery node was passed.\n    if (el.jquery) {\n        el = el[0];\n    }\n    return el;\n};\n\n/**\n * Always return an iterable object.\n *\n * @param {any} it: The object which needs to be wrapped in an array or returned as is if it is iterable.\n * @param {boolean} force_array: If the object is iterable but not an Array, convert it to an array (e.g. For jQuery items or NodeList objects).\n *\n * @returns {Array}: Returns the object wrapped in an Array, expanded to an Array or as-is if it is already iterable.\n */\nconst ensureArray = (it, force_array) => {\n    // Ensure to return always an array\n    const array_like = !!(\n        NodeList.prototype.isPrototypeOf(it) || // eslint-disable-line no-prototype-builtins\n        Array.isArray(it) ||\n        it.jquery\n    );\n    return array_like ? (force_array ? [...it] : it) : [it];\n};\n\nconst localized_isodate = (date) => {\n    // Return a iso date (date only) in the current timezone instead of a\n    // UTC ISO 8601 date+time component which toISOString returns.\n\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const year = date.getFullYear().toString();\n\n    return `${year}-${month}-${day}`;\n};\n\n/**\n * Replace HTML reserved characters with html entities to add HTML for user\n * editing to e.g. a textarea or a contenteditable.\n *\n * See:\n *  https://stackoverflow.com/a/22706073/1337474\n *  https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} html - The HTML string to encode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&`` will be replaced with ``&amp;``.\n *                     ``<`` will be repalced with ``&lt;``,\n *                     ``>`` will be replaced with ``&gt;``,\n *                     ``\"`` will be replaced with ``&quot;``.\n */\nconst escape_html = (html) => {\n    if (!html) {\n        return \"\";\n    }\n    const el = document.createElement(\"div\");\n    el.appendChild(document.createTextNode(html));\n    // Return escaped html and also replace quotes.\n    return el.innerHTML.replace(/\"/g, \"&quot;\");\n};\n\n/**\n * Return unescaped, raw HTML from an escaped HTML  string.\n *\n * See:\n *  https://stackoverflow.com/a/34064434/1337474\n *  https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} escaped_html - The HTML string to decode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&amp;`` will be replaced with ``&``,\n *                     ``&lt;`` will be repalced with ``<``,\n *                     ``&gt;`` will be replaced with ``>``,\n *                     ``&quot;`` will be replaced with ``\"``.\n */\nconst unescape_html = (escaped_html) => {\n    if (!escaped_html) {\n        return \"\";\n    }\n    const doc = new DOMParser().parseFromString(escaped_html, \"text/html\");\n    // Return unescaped html and also unescape quote named entities.\n    return doc.documentElement.textContent.replace(/&quot;/g, '\"');\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date/time string with or without an optional time component.\n *\n * @param {String} value - The date/time value to be checked.\n * @param {Boolean} [optional_time=false] - True, if time component is optional.\n * @return {Boolean} - True, if the given value is a valid Date string. False if not.\n */\nconst is_iso_date_time = (value, optional_time = false) => {\n    const re_date_time = optional_time\n        ? /^\\d{4}-[01]\\d-[0-3]\\d(T[0-2]\\d:[0-5]\\d)?$/\n        : /^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date string and without a time component.\n *\n * @param {String} value - The date value to be checked.\n * @return {Boolean} - True, if the given value is a valid ISO 8601 date string without a time component. False if not.\n */\nconst is_iso_date = (value) => {\n    const re_date_time = /^\\d{4}-[01]\\d-[0-3]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return the number of days between two dates.\n * Based on: https://stackoverflow.com/a/15289883/1337474\n *\n * @param {Date} date_1 - First date to compare. We will substract date_2 from date_1.\n * @param {Date} date_2 - Second date to compare.\n * @return {Number} - The number of days between the two dates.\n */\nconst date_diff = (date_1, date_2) => {\n    // Discard the time and time-zone information.\n    const utc_1 = Date.UTC(date_1.getFullYear(), date_1.getMonth(), date_1.getDate());\n    const utc_2 = Date.UTC(date_2.getFullYear(), date_2.getMonth(), date_2.getDate());\n\n    return Math.floor((utc_1 - utc_2) / _MS_PER_DAY);\n};\n\n/**\n * Build intersection observer threshold list.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#building_the_array_of_threshold_ratios\n *\n * @param {Number} num_steps - The number of steps to use.\n *\n * @returns {Array} - Returns the threshold list.\n */\nconst threshold_list = (num_steps = 0) => {\n    let thresholds = [];\n\n    for (let i = 1.0; i <= num_steps; i++) {\n        thresholds.push(i / num_steps);\n    }\n    thresholds.push(0);\n    return thresholds.sort();\n};\n\n/**\n * is_option_truthy - Check if an Pattern option is set.\n *\n * An option is set if it is not one of:\n * - undefined\n * - null\n * - \"none\"\n * - \"\"\n *\n * @param {String} option - The option to check.\n *\n * @returns {Boolean} - Returns true if the option is set, false otherwise.\n *\n * @example\n *\n * is_option_truthy() // false\n * is_option_truthy(undefined) // false\n * is_option_truthy(null) // false\n * is_option_truthy(\"\") // false\n * is_option_truthy(\"none\") // false\n * is_option_truthy(\"false\") // false\n * is_option_truthy(\"foo\") // true\n * is_option_truthy(true) // true\n * is_option_truthy(0) // true\n *\n */\nconst is_option_truthy = (option) => {\n    return ![undefined, null, \"none\", false, \"false\", \"\"].includes(option);\n};\n\nvar utils = {\n    jqueryPlugin: jqueryPlugin,\n    escapeRegExp: escapeRegExp,\n    isObject: isObject,\n    extend: extend,\n    findLabel: findLabel,\n    removeWildcardClass: removeWildcardClass,\n    hideOrShow: hideOrShow,\n    addURLQueryParameter: addURLQueryParameter,\n    removeDuplicateObjects: removeDuplicateObjects,\n    mergeStack: mergeStack,\n    isElementInViewport: isElementInViewport,\n    hasValue: hasValue,\n    parseTime: parseTime,\n    parseLength: parseLength,\n    findRelatives: findRelatives,\n    get_bounds: get_bounds,\n    checkInputSupport: checkInputSupport,\n    checkCSSFeature: checkCSSFeature,\n    animation_frame: animation_frame,\n    timeout: timeout,\n    debounce: debounce,\n    isIE: isIE,\n    jqToNode: jqToNode,\n    ensureArray: ensureArray,\n    localized_isodate: localized_isodate,\n    escape_html: escape_html,\n    unescape_html: unescape_html,\n    is_iso_date_time: is_iso_date_time,\n    is_iso_date: is_iso_date,\n    date_diff: date_diff,\n    threshold_list: threshold_list,\n    is_option_truthy: is_option_truthy,\n    getCSSValue: dom.get_css_value, // BBB: moved to dom. TODO: Remove in upcoming version.\n    elementInViewport: (el) => {\n        // BBB: Remove with next major version.\n        console.warn(\"Deprecated. Use utils.isElementInViewport\");\n        return isElementInViewport(el);\n    },\n};\n\nexport default utils;\n","import Base from \"../../core/base\";\nimport Parser from \"../../core/parser\";\nimport dom from \"../../core/dom\";\nimport utils from \"../../core/utils\";\nimport \"../../core/jquery-ext\";\n\nexport const parser = new Parser(\"checklist\");\nparser.addArgument(\"select\", \".select-all\");\nparser.addArgument(\"deselect\", \".deselect-all\");\nparser.addArgument(\"toggle\", \".toggle-all\");\n\nexport default Base.extend({\n    name: \"checklist\",\n    trigger: \".pat-checklist\",\n    jquery_plugin: true,\n    all_selects: [],\n    all_deselects: [],\n    all_toggles: [],\n    all_checkboxes: [],\n    all_radios: [],\n\n    init() {\n        this.options = parser.parse(this.el, this.options, false);\n        this.$el.on(\"patterns-injected\", this._init.bind(this));\n        this._init();\n    },\n\n    _init() {\n        this.all_checkboxes = this.el.querySelectorAll(`input[type=checkbox]`);\n        this.all_radios = this.el.querySelectorAll(\"input[type=radio]\");\n\n        this.all_selects = dom.find_scoped(this.el, this.options.select);\n        for (const btn of this.all_selects) {\n            btn.addEventListener(\"click\", this.select_all.bind(this));\n        }\n\n        this.all_deselects = dom.find_scoped(this.el, this.options.deselect);\n        for (const btn of this.all_deselects) {\n            btn.addEventListener(\"click\", this.deselect_all.bind(this));\n        }\n\n        this.all_toggles = dom.find_scoped(this.el, this.options.toggle);\n        for (const btn of this.all_toggles) {\n            btn.addEventListener(\"click\", this.toggle_all.bind(this));\n        }\n\n        // update select/deselect button status\n        this.el.addEventListener(\"change\", this._handler_change.bind(this));\n        this.change_buttons_and_toggles();\n        this.change_checked();\n    },\n\n    _handler_change() {\n        utils.debounce(() => this.change_buttons_and_toggles(), 50)();\n        utils.debounce(() => this.change_checked(), 50)();\n    },\n\n    destroy() {\n        for (const it of this.all_selects) {\n            it.removeEventListener(\"click\", this.select_all);\n        }\n        for (const it of this.all_deselects) {\n            it.removeEventListener(\"click\", this.deselect_all);\n        }\n        this.el.removeEventListener(\"change\", this._handler_change);\n        this.$el.off(\"patterns_injected\");\n    },\n\n    find_siblings(el, sel) {\n        // Looks for the closest elements within the `el` tree that match the\n        // `sel` selector\n        let res;\n        let parent = el.parentNode;\n        while (parent) {\n            res = parent.querySelectorAll(`${sel}:not(${this.options.toggle})`);\n            if (res.length || parent === this.el) {\n                // return if results were found or we reached the pattern top\n                return res;\n            }\n            parent = parent.parentNode;\n        }\n    },\n\n    find_checkboxes(ref_el, sel) {\n        let chkbxs = [];\n        if (this.options.select.indexOf(\"#\") === 0) {\n            chkbxs = this.el.querySelectorAll(sel);\n        } else {\n            chkbxs = this.find_siblings(ref_el, sel);\n        }\n        return chkbxs;\n    },\n\n    change_buttons_and_toggles() {\n        let chkbxs;\n        for (const btn of this.all_selects) {\n            chkbxs = this.find_checkboxes(btn, \"input[type=checkbox]\");\n            btn.disabled = [...chkbxs]\n                .map((el) => el.matches(\":checked\"))\n                .every((it) => it === true);\n        }\n        for (const btn of this.all_deselects) {\n            chkbxs = this.find_checkboxes(btn, \"input[type=checkbox]\");\n            btn.disabled = [...chkbxs]\n                .map((el) => el.matches(\":checked\"))\n                .every((it) => it === false);\n        }\n        for (const tgl of this.all_toggles) {\n            chkbxs = this.find_checkboxes(tgl, \"input[type=checkbox]\");\n            tgl.checked = [...chkbxs]\n                .map((el) => el.matches(\":checked\"))\n                .every((it) => it === true);\n        }\n    },\n\n    select_all(e) {\n        e.preventDefault();\n        const chkbxs = this.find_checkboxes(\n            e.target,\n            \"input[type=checkbox]:not(:checked)\"\n        );\n        for (const box of chkbxs) {\n            box.checked = true;\n            box.dispatchEvent(new Event(\"change\", { bubbles: true, cancelable: true }));\n        }\n    },\n\n    deselect_all(e) {\n        e.preventDefault();\n        const chkbxs = this.find_checkboxes(e.target, \"input[type=checkbox]:checked\");\n        for (const box of chkbxs) {\n            box.checked = false;\n            box.dispatchEvent(new Event(\"change\", { bubbles: true, cancelable: true }));\n        }\n    },\n\n    toggle_all(e) {\n        e.preventDefault();\n        const checked = e.target.checked;\n        const chkbxs = this.find_checkboxes(e.target, \"input[type=checkbox]\");\n        for (const box of chkbxs) {\n            box.checked = checked;\n            box.dispatchEvent(new Event(\"change\", { bubbles: true, cancelable: true }));\n        }\n    },\n\n    change_checked() {\n        for (const it of [...this.all_checkboxes, ...this.all_radios]) {\n            for (const label of it.labels) {\n                label.classList.remove(\"checked\", \"unchecked\");\n                label.classList.add(it.checked ? \"checked\" : \"unchecked\");\n            }\n        }\n\n        for (const fieldset of dom.querySelectorAllAndMe(this.el, \"fieldset\")) {\n            if (\n                fieldset.querySelectorAll(\n                    `input[type=checkbox]:checked:not(${this.options.toggle}), input[type=radio]:checked`\n                ).length\n            ) {\n                fieldset.classList.remove(\"unchecked\");\n                fieldset.classList.add(\"checked\");\n            } else {\n                fieldset.classList.remove(\"checked\");\n                fieldset.classList.add(\"unchecked\");\n            }\n        }\n    },\n});\n","/* pat-date-picker  - Polyfill for input type=date */\nimport $ from \"jquery\";\nimport Base from \"../../core/base\";\nimport logging from \"../../core/logging\";\nimport Parser from \"../../core/parser\";\nimport dom from \"../../core/dom\";\nimport events from \"../../core/events\";\nimport utils from \"../../core/utils\";\n\nconst log = logging.getLogger(\"date-picker\");\n\nexport const parser = new Parser(\"date-picker\");\nparser.addArgument(\"behavior\", \"styled\", [\"native\", \"styled\"]);\nparser.addArgument(\"week-numbers\", [], [\"show\", \"hide\"]);\nparser.addArgument(\"i18n\"); // URL pointing to JSON resource with i18n values\nparser.addArgument(\"first-day\", 0);\nparser.addArgument(\"after\");\nparser.addArgument(\"offset-days\", 0);\n\nparser.add_argument(\"output-format\", null);\nparser.add_argument(\"locale\", null);\n\nparser.addAlias(\"behaviour\", \"behavior\");\n\n/* JSON format for i18n\n * { \"previousMonth\": \"Previous Month\",\n *   \"nextMonth\"    : \"Next Month\",\n *   \"months\"       : [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\n *   \"weekdays\"     : [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],\n *   \"weekdaysShort\": [\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"]\n * } */\n\nexport default Base.extend({\n    name: \"date-picker\",\n    trigger: \".pat-date-picker\",\n    parser: parser,\n    format: \"YYYY-MM-DD\",\n\n    async init() {\n        const el = this.el;\n        const disabled = this.el.disabled;\n\n        //TODO: make parser with options extend missing options.\n        //this.options = parser.parse(el, opts);\n        this.options = $.extend(parser.parse(el), this.options);\n\n        if (!disabled && this.options.after) {\n            // Set the date depending on another date which must be ``offset-days``\n            // BEFORE this date. Only set it, if the other date is AFTER this\n            // date.\n            const befores = document.querySelectorAll(this.options.after);\n            for (const b_el of befores) {\n                b_el.addEventListener(\"change\", (e) => {\n                    let b_date = e.target.value; // the \"before-date\"\n                    b_date = b_date ? new Date(b_date) : null;\n                    if (!b_date) {\n                        return;\n                    }\n                    let a_date = this.el.value; // the \"after-date\"\n                    a_date = a_date ? new Date(a_date) : null;\n                    if (!a_date || a_date < b_date) {\n                        const offset = this.options.offsetDays || 0;\n                        b_date.setDate(b_date.getDate() + offset);\n                        this.el.value = b_date.toISOString().substring(0, 10);\n                        this.dispatch_change_event();\n                    }\n                });\n            }\n        }\n\n        let display_el;\n        if (this.options.behavior === \"styled\") {\n            dom.hide(el); // hide input, but keep active (e.g. for validation)\n\n            display_el = document.createElement(\"time\");\n            display_el.setAttribute(\"class\", \"output-field\");\n            display_el.setAttribute(\"datetime\", el.value);\n            if (disabled) {\n                display_el.classList.add(\"disabled\");\n            }\n            el.insertAdjacentElement(\"beforebegin\", display_el);\n\n            // Disable click on label, as this invokes a click on the invisible\n            // input field which opens the calendar in Firefox and masks a\n            // click on display_el on Chrome.\n            const label = display_el.closest(\"label\");\n            if (label) {\n                events.add_event_listener(\n                    label,\n                    \"click\",\n                    \"pat-date-picker--label\",\n                    (e) => {\n                        e.preventDefault();\n                    }\n                );\n            }\n\n            let pat_display_time;\n            if (this.options.outputFormat) {\n                const PatDisplayTime = (await import(\"../display-time/display-time\")).default; // prettier-ignore\n                const display_time_config = { format: this.format };\n                if (this.options.outputFormat) {\n                    display_time_config[\"output-format\"] = this.options.outputFormat;\n                }\n                if (this.options.locale) {\n                    display_time_config.locale = this.options.locale;\n                }\n                pat_display_time = new PatDisplayTime(display_el, display_time_config);\n            } else if (this.el.value) {\n                display_el.textContent = el.value;\n            }\n\n            // Add the additional elements \"clear button\" and placeholder to\n            // the `<time>` element.\n            const _add_additional = () => {\n                this.add_clear_button(display_el);\n                if (!this.el.value && this.el.placeholder) {\n                    display_el.innerHTML = `<span class=\"placeholder\">${this.el.placeholder}</span>`;\n                }\n            };\n            if (pat_display_time) {\n                // Add the additional elements after display time has\n                // eventually cleared the contents or done any other changes.\n                $(display_el).on(\"init.display-time.patterns\", () => {\n                    _add_additional();\n                });\n            } else {\n                // If no `pat-display-time` was used, add immediately.\n                _add_additional();\n            }\n\n            this.el.addEventListener(\"change\", () => {\n                display_el.setAttribute(\"datetime\", this.el.value);\n                if (pat_display_time && this.el.value) {\n                    pat_display_time.format();\n                } else {\n                    //} else if (this.el.value) {\n                    display_el.textContent = this.el.value;\n                }\n                _add_additional();\n            });\n\n            if (disabled) {\n                // nothing else to do here...\n                return;\n            }\n        } else if (disabled) {\n            return;\n        } else if (utils.checkInputSupport(\"date\", \"invalid date\")) {\n            // behavior native with native support.\n            return;\n        } else if (el.getAttribute(\"type\") === \"date\") {\n            // behavior native but no native support.\n            // Fallback JS date picker with a text input field.\n            el.setAttribute(\"type\", \"text\");\n        }\n\n        if (window.__patternslib_import_styles) {\n            import(\"./_date-picker.scss\");\n        }\n        const Pikaday = (await import(\"pikaday\")).default;\n\n        const config = {\n            field: el,\n            trigger: display_el || el,\n            format: this.format,\n            firstDay: this.options.firstDay,\n            showWeekNumber: this.options.weekNumbers === \"show\",\n            onSelect: () => this.dispatch_change_event(),\n            onClose: () => {\n                if (this.options.behavior === \"styled\" && !this.el.value) {\n                    // blur the input field so that pat-validate can kick in when\n                    // nothing was selected.\n                    el.dispatchEvent(events.blur_event());\n                }\n            },\n        };\n\n        if (el.getAttribute(\"min\")) {\n            config.minDate = new Date(el.getAttribute(\"min\"));\n        }\n        if (el.getAttribute(\"max\")) {\n            config.maxDate = new Date(el.getAttribute(\"max\"));\n        }\n\n        if (this.options.i18n) {\n            try {\n                const response = await fetch(this.options.i18n);\n                config.i18n = await response.json();\n            } catch {\n                log.error(`date-picker could not load i18n for ${this.options.i18n}`);\n            }\n        }\n        this.pikaday = new Pikaday(config);\n    },\n\n    add_clear_button(el_append_to) {\n        if (!this.el.disabled && !this.el.required && this.el.value) {\n            // Add clear button\n            const clear_button = document.createElement(\"span\");\n            clear_button.setAttribute(\"class\", \"cancel-button\");\n            clear_button.addEventListener(\"click\", (e) => {\n                e.stopPropagation();\n                this.el.value = null;\n                this.dispatch_change_event();\n            });\n            el_append_to.appendChild(clear_button);\n        }\n    },\n\n    dispatch_change_event() {\n        const event = new Event(\"change\", {\n            bubbles: true,\n            cancelable: true,\n        });\n        // Set ``firedBy` to prevent pikaday to call it's own handler and land\n        // in an infinite loop.\n        event.firedBy = this.pikaday;\n        this.el.dispatchEvent(event);\n\n        // Also trigger input-change\n        $(this.el).trigger(\"input-change\");\n        $(this.el.form).trigger(\"input-change\");\n    },\n});\n","/* pat-datetime-picker  - Polyfill for input type=datetime-local */\nimport Base from \"../../core/base\";\nimport Parser from \"../../core/parser\";\nimport utils from \"../../core/utils\";\nimport dom from \"../../core/dom\";\n\nexport const parser = new Parser(\"datetime-picker\");\nparser.addArgument(\"format\", \"YYYY-MM-DD\");\nparser.addArgument(\"week-numbers\", [], [\"show\", \"hide\"]);\nparser.addArgument(\"i18n\"); // URL pointing to JSON resource with i18n values\nparser.addArgument(\"today\", \"Today\");\nparser.addArgument(\"clear\", \"Clear\");\nparser.addArgument(\"first-day\", 0);\n\nexport default Base.extend({\n    name: \"datetime-picker\",\n    trigger: \".pat-datetime-picker\",\n    parser: parser,\n    el_date: null,\n    el_time: null,\n\n    async init() {\n        const el = this.el;\n        this.options = parser.parse(this.el, this.options);\n\n        if (utils.checkInputSupport(\"datetime-local\", \"invalid date\")) {\n            return;\n        }\n\n        if (window.__patternslib_import_styles) {\n            import(\"./_datetime-picker.scss\");\n        }\n        const DatePicker = (await import(\"../date-picker/date-picker\")).default;\n\n        const value = this.el.value.split(\"T\");\n        const date_value = value[0] || \"\";\n        const time_value = value[1] || \"\";\n\n        const el_wrapper = document.createElement(\"div\");\n        el_wrapper.setAttribute(\"class\", \"pat-datetime-picker__wrapper\");\n\n        dom.hide(el);\n\n        // let the buttons be of type button otherwise they are submit buttons\n        const html_btn_now = `\n            <button type=\"button\" class=\"_btn _now\" title=\"${this.options.today}\">\n                <span class=\"_icon\"/>\n                <span class=\"_text\">${this.options.today}</span>\n            </button>`;\n        const html_btn_clear = `\n            <button type=\"button\" class=\"_btn _clear\" title=\"${this.options.clear}\">\n                <span class=\"_icon\"/>\n                <span class=\"_text\">${this.options.clear}</span>\n            </button>`;\n\n        el_wrapper.innerHTML = `\n            <input type=\"date\" placeholder=\"YYYY-MM-DD\" value=\"${date_value}\" />\n            <input type=\"time\" placeholder=\"hh:mm\" value=\"${time_value}\" />\n            ${this.options.today ? html_btn_now : \"\"}\n            ${this.options.clear ? html_btn_clear : \"\"}\n        `;\n\n        this.el_time = el_wrapper.querySelector(\"input[type=time]\");\n        this.el_time.addEventListener(\"change\", () => this.update());\n\n        this.el_date = el_wrapper.querySelector(\"input[type=date]\");\n        this.el_date.addEventListener(\"change\", () => {\n            if (!this.el_time.value) {\n                // Set time on date change, if time was empty.\n                this.el_time.value = this.isotime();\n            }\n            this.update();\n        });\n\n        const date_options = {\n            behavior: \"native\",\n            format: this.options.format,\n            weekNumbers: this.options.weekNumbers,\n            firstDay: this.options.firstDay,\n        };\n        await DatePicker.init(this.el_date, date_options);\n\n        if (this.options.today) {\n            const btn_now = el_wrapper.querySelector(\"._btn._now\");\n            btn_now.addEventListener(\"click\", (e) => {\n                e.preventDefault();\n                this.el_date.value = this.isodate();\n                this.el_time.value = this.isotime();\n                this.update();\n            });\n        }\n\n        if (this.options.clear) {\n            const btn_clear = el_wrapper.querySelector(\"._btn._clear\");\n            btn_clear.addEventListener(\"click\", (e) => {\n                e.preventDefault();\n                this.el_date.value = \"\";\n                this.el_time.value = \"\";\n                this.update();\n            });\n        }\n\n        // TODO: timezone\n        el.parentNode.insertBefore(el_wrapper, el);\n    },\n\n    update() {\n        if (this.el_date.value && this.el_time.value) {\n            this.el.value = `${this.el_date.value}T${this.el_time.value}`;\n        } else {\n            this.el.value = \"\";\n        }\n        this.el.dispatchEvent(new Event(\"change\", { bubbles: true, cancelable: true }));\n    },\n\n    isodate() {\n        const now = new Date();\n        return now.toISOString().substr(0, 10);\n    },\n\n    isotime() {\n        const now = new Date();\n        return now.toTimeString().substr(0, 5);\n    },\n});\n","import $ from \"jquery\";\nimport Base from \"../../core/base\";\nimport utils from \"../../core/utils\";\nimport logging from \"../../core/logging\";\nimport Parser from \"../../core/parser\";\n\nconst log = logging.getLogger(\"depends\");\n\nexport const parser = new Parser(\"depends\");\nparser.addArgument(\"condition\");\nparser.addArgument(\"action\", \"show\", [\"show\", \"enable\", \"both\"]);\nparser.addArgument(\"transition\", \"none\", [\"none\", \"css\", \"fade\", \"slide\"]);\nparser.addArgument(\"effect-duration\", \"fast\");\nparser.addArgument(\"effect-easing\", \"swing\");\n\nexport default Base.extend({\n    name: \"depends\",\n    trigger: \".pat-depends\",\n    jquery_plugin: true,\n\n    async init($el, opts) {\n        const DependsHandler = (await import(\"../../lib/dependshandler\")).default; // prettier-ignore\n\n        const dependent = this.$el[0];\n        const options = parser.parse(this.$el, opts);\n        this.$modal = this.$el.parents(\".pat-modal\");\n\n        let handler;\n        try {\n            handler = new DependsHandler(this.$el, options.condition);\n        } catch (e) {\n            log.error(\"Invalid condition: \" + e.message, dependent);\n            return;\n        }\n\n        let state = handler.evaluate();\n        switch (options.action) {\n            case \"show\":\n                utils.hideOrShow($el, state, options, this.name);\n                this.updateModal();\n                break;\n            case \"enable\":\n                if (state) this.enable();\n                else this.disable();\n                break;\n            case \"both\":\n                if (state) {\n                    utils.hideOrShow($el, state, options, this.name);\n                    this.updateModal();\n                    this.enable();\n                } else {\n                    utils.hideOrShow($el, state, options, this.name);\n                    this.updateModal();\n                    this.disable();\n                }\n                break;\n        }\n\n        const data = {\n            handler: handler,\n            options: options,\n            dependent: dependent,\n        };\n\n        for (let input of handler.getAllInputs()) {\n            if (input.form) {\n                let $form = $(input.form);\n                let dependents = $form.data(\"patDepends.dependents\");\n                if (!dependents) {\n                    dependents = [data];\n                    $form.on(\"reset.pat-depends\", () => this.onReset);\n                } else if (dependents.indexOf(data) === -1) dependents.push(data);\n                $form.data(\"patDepends.dependents\", dependents);\n            }\n            $(input).on(\"change.pat-depends\", null, data, this.onChange.bind(this));\n            $(input).on(\"keyup.pat-depends\", null, data, this.onChange.bind(this));\n        }\n    },\n\n    async onReset(event) {\n        const dependents = $(event.target).data(\"patDepends.dependents\");\n        await utils.timeout(50);\n        for (let dependent of dependents) {\n            event.data = dependent;\n            this.onChange(event);\n        }\n    },\n\n    updateModal() {\n        // If we're in a modal, make sure that it gets resized.\n        if (this.$modal.length) {\n            $(document).trigger(\"pat-update\", { pattern: \"depends\" });\n        }\n    },\n\n    enable() {\n        if (this.$el.is(\":input\")) {\n            this.$el[0].disabled = null;\n        } else if (this.$el.is(\"a\")) {\n            this.$el.off(\"click.patternDepends\");\n        }\n        this.$el.removeClass(\"disabled\");\n        this.$el.trigger(\"pat-update\", {\n            pattern: \"depends\",\n            action: \"attribute-changed\",\n            dom: this.$el[0],\n            enabled: true,\n        });\n    },\n\n    disable() {\n        if (this.$el.is(\":input\")) {\n            this.$el[0].disabled = \"disabled\";\n        } else if (this.$el.is(\"a\")) {\n            this.$el.on(\"click.patternDepends\", (e) => e.preventDefault());\n        }\n        this.$el.addClass(\"disabled\");\n        this.$el.trigger(\"pat-update\", {\n            pattern: \"depends\",\n            action: \"attribute-changed\",\n            dom: this.$el[0],\n            enabled: false,\n        });\n    },\n\n    onChange(event) {\n        const handler = event.data.handler;\n        const options = event.data.options;\n        const dependent = event.data.dependent;\n        const $depdendent = $(dependent);\n        const state = handler.evaluate();\n\n        switch (options.action) {\n            case \"show\":\n                utils.hideOrShow($depdendent, state, options, this.name);\n                this.updateModal();\n                break;\n            case \"enable\":\n                if (state) {\n                    this.enable();\n                } else {\n                    this.disable();\n                }\n                break;\n            case \"both\":\n                utils.hideOrShow($depdendent, state, options, this.name);\n                this.updateModal();\n                if (state) {\n                    this.enable();\n                } else {\n                    this.disable();\n                }\n                break;\n        }\n    },\n});\n","import Base from \"../../core/base\";\nimport Parser from \"../../core/parser\";\nimport dom from \"../../core/dom\";\nimport logging from \"../../core/logging\";\nimport utils from \"../../core/utils\";\n\n// Lazy loading modules.\nlet Moment;\n\nconst log = logging.getLogger(\"pat-display-time\");\n\nexport const parser = new Parser(\"display-time\");\n// input datetime options\nparser.add_argument(\"format\", \"\");\nparser.add_argument(\"locale\", null);\nparser.add_argument(\"strict\", false);\n// output options\nparser.add_argument(\"from-now\", false);\nparser.add_argument(\"no-suffix\", false);\nparser.add_argument(\"output-format\", null);\n\nexport default Base.extend({\n    name: \"display-time\",\n    trigger: \".pat-display-time\",\n\n    async init() {\n        Moment = (await import(\"moment\")).default;\n\n        this.options = parser.parse(this.el, this.options);\n\n        let lang = this.options.locale || dom.acquire_attribute(this.el, \"lang\") || \"en\";\n        // we don't support any country-specific language variants, always use first 2 letters\n        lang = lang.substr(0, 2).toLowerCase();\n        try {\n            await import(`moment/locale/${lang}.js`);\n            Moment.locale(lang);\n            this.lang = lang;\n        } catch {\n            Moment.locale(\"en\");\n            this.lang = \"en\";\n        }\n        log.debug(`Moment.js language used: ${lang}.`);\n        this.format();\n    },\n\n    format() {\n        const datetime = this.el.getAttribute(\"datetime\");\n        let out = \"\";\n        if (datetime) {\n            const date = Moment(datetime, this.options.format, this.options.strict);\n            out = date;\n            if (this.options.fromNow === true) {\n                if (utils.is_iso_date(datetime)) {\n                    // date-only case.\n                    const rtf = new Intl.RelativeTimeFormat(this.lang, {\n                        numeric: \"auto\",\n                    });\n                    const date_diff = utils.date_diff(date.toDate(), new Date());\n                    out = date.calendar(null, {\n                        // when the date is closer, specify custom values\n                        lastWeek: `[${rtf.format(date_diff, \"day\")}]`, // translates to \"x days ago\"\n                        lastDay: `[${rtf.format(-1, \"day\")}]`, // translates to \"yesterday\"\n                        sameDay: `[${rtf.format(0, \"day\")}]`, // translates to \"today\"\n                        nextDay: `[${rtf.format(1, \"day\")}]`, // translates to \"tomorrow\"\n                        nextWeek: \"dddd\", // translates to week day name\n                        // otherwise, just use Intl.RelativeTimeFormat.\n                        sameElse: () => {\n                            return `[${rtf.format(date_diff, \"day\")}]`;\n                        },\n                    });\n                } else {\n                    // datetime case.\n                    out = date.fromNow(this.options.noSuffix);\n                }\n            } else if (this.options.outputFormat) {\n                out = date.format(this.options.outputFormat);\n            }\n        }\n        this.el.textContent = out;\n    },\n});\n","/**\n * Patterns ajax - AJAX injection for forms and anchors\n *\n * Copyright 2012-2013 Florian Friesdorf\n * Copyright 2012-2013 Marko Durkovic\n */\nimport $ from \"jquery\";\nimport logging from \"../../core/logging\";\nimport Parser from \"../../core/parser\";\nimport registry from \"../../core/registry\";\n\nconst log = logging.getLogger(\"pat.ajax\");\n\nexport const parser = new Parser(\"ajax\");\nparser.addArgument(\"accept\", \"text/html\");\nparser.addArgument(\"url\", function ($el) {\n    return (\n        $el.is(\"a\") ? $el.attr(\"href\") : $el.is(\"form\") ? $el.attr(\"action\") : \"\"\n    ).split(\"#\")[0];\n});\nparser.addArgument(\"browser-cache\", \"no-cache\", [\"cache\", \"no-cache\"]); // Cache ajax requests\n\nconst xhrCount = {};\nxhrCount.get = function (a) {\n    return this[a] !== undefined ? this[a] : 0;\n};\nxhrCount.inc = function (a) {\n    this[a] = this.get(a) + 1;\n    return this.get(a);\n};\n\nconst _ = {\n    name: \"ajax\",\n    trigger: \".pat-ajax\",\n    parser: parser,\n    init($el) {\n        $el.off(\".pat-ajax\");\n        $el.filter(\"a\").on(\"click.pat-ajax\", _.onTriggerEvents);\n        $el.filter(\"form\")\n            .on(\"submit.pat-ajax\", _.onTriggerEvents)\n            .on(\"click.pat-ajax\", \"[type=submit]\", _.onClickSubmit);\n        $el.filter(\":not(form,a)\").each(function () {\n            log.warn(\"Unsupported element:\", this);\n        });\n        return $el;\n    },\n    destroy($el) {\n        $el.off(\".pat-ajax\");\n    },\n    onClickSubmit(event) {\n        const el = event.target;\n        const form = el.closest(\"form\");\n        const data = {};\n        if (el.name) {\n            data[el.name] = el.value;\n        }\n        $(form).data(\"pat-ajax.clicked-data\", data);\n    },\n    onTriggerEvents(event) {\n        if (event) {\n            event.preventDefault();\n        }\n        _.request($(this));\n    },\n    request($el, opts) {\n        return $el.each(function () {\n            _._request($(this), opts);\n        });\n    },\n    _request($el, opts) {\n        const cfg = _.parser.parse($el, opts);\n        const onError = function (jqxhr, status, error) {\n            // error can also stem from a javascript\n            // exception, not only errors described in the\n            // jqxhr.\n            log.error(\"load error for \" + cfg.url + \":\", error, jqxhr);\n            $el.trigger({\n                type: \"pat-ajax-error\",\n                jqxhr: jqxhr,\n            });\n        };\n        const seqNumber = xhrCount.inc(cfg.url);\n        const onSuccess = function (data, status, jqxhr) {\n            log.debug(\"success: jqxhr:\", jqxhr);\n            if (seqNumber === xhrCount.get(cfg.url)) {\n                // if this url is requested multiple time, only return the last result\n                $el.trigger({\n                    type: \"pat-ajax-success\",\n                    jqxhr: jqxhr,\n                });\n            } else {\n                // ignore\n            }\n        };\n        const temp = $el.data(\"pat-ajax.clicked-data\");\n        const clickedData = temp ? $.param(temp) : \"\";\n        const args = {\n            context: $el,\n            data: [$el.serialize(), clickedData].filter(Boolean).join(\"&\"),\n            headers: {},\n            url: cfg.url,\n            method: $el.attr(\"method\") ? $el.attr(\"method\") : \"GET\",\n            cache: cfg.browserCache === \"cache\" ? true : false,\n        };\n\n        if (cfg.accept) {\n            args.headers.Accept = cfg.accept;\n        }\n\n        if (\n            $el.is(\"form\") &&\n            $el.attr(\"method\") &&\n            $el.attr(\"method\").toUpperCase() == \"POST\"\n        ) {\n            const formdata = new FormData($el[0]);\n            for (const key in temp) {\n                formdata.append(key, temp[key]);\n            }\n            args[\"method\"] = \"POST\";\n            args[\"data\"] = formdata;\n            args[\"cache\"] = false;\n            args[\"contentType\"] = false;\n            args[\"processData\"] = false;\n            args[\"type\"] = \"POST\";\n        }\n\n        $el.removeData(\"pat-ajax.clicked-data\");\n        log.debug(\"request:\", args, $el[0]);\n\n        // Make it happen\n        const ajax_deferred = $.ajax(args);\n\n        if (ajax_deferred) ajax_deferred.done(onSuccess).fail(onError);\n    },\n};\n\nregistry.register(_);\n\nexport default _;\n","import \"../../core/jquery-ext\"; // for findInclusive\nimport $ from \"jquery\";\nimport ajax from \"../ajax/ajax\";\nimport dom from \"../../core/dom\";\nimport events from \"../../core/events\";\nimport logging from \"../../core/logging\";\nimport Parser from \"../../core/parser\";\nimport registry from \"../../core/registry\";\nimport utils from \"../../core/utils\";\n\nconst log = logging.getLogger(\"pat.inject\");\n//log.setLevel(logging.Level.DEBUG);\n\nconst TEXT_NODE = 3;\nconst COMMENT_NODE = 8;\n\nexport const parser = new Parser(\"inject\");\nparser.addArgument(\"default-selector\");\nparser.addArgument(\"target\");\nparser.addArgument(\"data-type\", \"html\");\nparser.addArgument(\"next-href\");\nparser.addArgument(\"source\");\nparser.addArgument(\"trigger\", \"default\", [\n    \"default\",\n    \"autoload\",\n    \"autoload-visible\",\n    \"idle\",\n]);\nparser.addArgument(\"delay\"); // only used in autoload\nparser.addArgument(\"browser-cache\", \"no-cache\", [\"cache\", \"no-cache\"]); // Cache ajax requests. Pass to pat-ajax.\nparser.addArgument(\"confirm\", \"class\", [\"never\", \"always\", \"form-data\", \"class\"]);\nparser.addArgument(\"confirm-message\", \"Are you sure you want to leave this page?\");\nparser.addArgument(\"loading-class\", \"injecting\"); // Add a class to the target while content is still loading.\nparser.addArgument(\"executing-class\", \"executing\"); // Add a class to the element while content is still loading.\nparser.addArgument(\"executed-class\", \"executed\"); // Add a class to the element when content is loaded.\nparser.addArgument(\"class\"); // Add a class to the injected content.\nparser.addArgument(\"history\", \"none\", [\"none\", \"record\"]);\nparser.addArgument(\"push-marker\");\nparser.addArgument(\"scroll\");\n// XXX: this should not be here but the parser would bail on\n// unknown parameters and expand/collapsible need to pass the url\n// to us\nparser.addArgument(\"url\");\n\nconst inject = {\n    name: \"inject\",\n    trigger: \"a.pat-inject, form.pat-inject, .pat-subform.pat-inject\",\n    parser: parser,\n\n    init($el, opts) {\n        const cfgs = this.extractConfig($el, opts);\n        if (cfgs.some((e) => e.history === \"record\") && !(\"pushState\" in history)) {\n            // if the injection shall add a history entry and HTML5 pushState\n            // is missing, then don't initialize the injection.\n            return $el;\n        }\n        $el.data(\"pat-inject\", cfgs);\n\n        if (cfgs[0].nextHref && cfgs[0].nextHref.indexOf(\"#\") === 0) {\n            // In case the next href is an anchor, and it already\n            // exists in the page, we do not activate the injection\n            // but instead just change the anchors href.\n\n            // XXX: This is used in only one project for linked\n            // fullcalendars, it's sanity is wonky and we should\n            // probably solve it differently.\n            if ($el.is(\"a\") && $(cfgs[0].nextHref).length > 0) {\n                log.debug(\n                    \"Skipping as next href is anchor, which already exists\",\n                    cfgs[0].nextHref\n                );\n                // XXX: reconsider how the injection enters exhausted state\n                return $el.attr({\n                    href: (window.location.href.split(\"#\")[0] || \"\") + cfgs[0].nextHref,\n                });\n            }\n        }\n        if (cfgs[0].pushMarker) {\n            $(\"body\").on(\"push\", (event, data) => {\n                log.debug(\"received push message: \" + data);\n                if (data == cfgs[0].pushMarker) {\n                    log.debug(\"re-injecting \" + data);\n                    this.onTrigger({ currentTarget: $el[0] });\n                }\n            });\n        }\n        if (cfgs[0].idleTrigger) {\n            this._initIdleTrigger($el, cfgs[0].idleTrigger);\n        } else {\n            switch (cfgs[0].trigger) {\n                case \"default\":\n                    cfgs.forEach((cfg) => {\n                        if (cfg.delay) {\n                            cfg.processDelay = cfg.delay;\n                        }\n                    });\n                    // setup event handlers\n                    if ($el.is(\"form\")) {\n                        $el.on(\"submit.pat-inject\", this.onTrigger.bind(this))\n                            .on(\"click.pat-inject\", \"[type=submit]\", ajax.onClickSubmit)\n                            .on(\n                                \"click.pat-inject\",\n                                \"[type=submit][formaction], [type=image][formaction]\",\n                                this.onFormActionSubmit.bind(this)\n                            );\n                    } else if ($el.is(\".pat-subform\")) {\n                        log.debug(\"Initializing subform with injection\");\n                    } else {\n                        $el.on(\"click.pat-inject\", this.onTrigger.bind(this));\n                    }\n                    break;\n                case \"autoload\":\n                    if (!cfgs[0].delay) {\n                        this.onTrigger({ currentTarget: $el[0] });\n                    } else {\n                        // generate UID\n                        const uid = Math.random().toString(36);\n                        $el.attr(\"data-pat-inject-uid\", uid);\n\n                        // function to trigger the autoload and mark as triggered\n                        const delayed_trigger = (uid_) => {\n                            // Check if the element has been removed from the dom\n                            const still_there = $(\n                                \"[data-pat-inject-uid='\" + uid_ + \"']\"\n                            );\n                            if (still_there.length == 0) return false;\n\n                            $el.data(\"pat-inject-autoloaded\", true);\n                            this.onTrigger({ currentTarget: $el[0] });\n                            return true;\n                        };\n                        window.setTimeout(\n                            delayed_trigger.bind(null, uid),\n                            cfgs[0].delay\n                        );\n                    }\n                    break;\n                case \"autoload-visible\":\n                    this._initAutoloadVisible($el, cfgs);\n                    break;\n                case \"idle\":\n                    this._initIdleTrigger($el, cfgs[0].delay);\n                    break;\n            }\n        }\n\n        log.debug(\"initialised:\", $el);\n        return $el;\n    },\n\n    destroy($el) {\n        $el.off(\".pat-inject\");\n        $el.data(\"pat-inject\", null);\n        return $el;\n    },\n\n    onTrigger(e) {\n        /* Injection has been triggered, either via form submission or a\n         * link has been clicked.\n         */\n        const $el = $(e.currentTarget);\n        const cfgs = $el.data(\"pat-inject\");\n        if ($el.is(\"form\")) {\n            $(cfgs).each((i, v) => {\n                v.params = $.param($el.serializeArray());\n            });\n        }\n        e.preventDefault && e.preventDefault();\n        $el.trigger(\"patterns-inject-triggered\");\n        this.execute(cfgs, $el);\n    },\n\n    onFormActionSubmit(e) {\n        ajax.onClickSubmit(e); // make sure the submitting button is sent with the form\n\n        const $button = $(e.target);\n        const formaction = $button.attr(\"formaction\");\n        const $form = $button.parents(\".pat-inject\").first();\n        const opts = {\n            url: formaction,\n        };\n        const $cfg_node = $button.closest(\"[data-pat-inject]\");\n        const cfgs = this.extractConfig($cfg_node, opts);\n\n        $(cfgs).each((i, v) => {\n            v.params = $.param($form.serializeArray());\n        });\n\n        e.preventDefault();\n        $form.trigger(\"patterns-inject-triggered\");\n        this.execute(cfgs, $form);\n    },\n\n    submitSubform($sub) {\n        /* This method is called from pat-subform\n         */\n        const $el = $sub.parents(\"form\");\n        const cfgs = $sub.data(\"pat-inject\");\n\n        // store the params of the subform in the config, to be used by history\n        $(cfgs).each((i, v) => {\n            v.params = $.param($sub.serializeArray());\n        });\n\n        try {\n            $el.trigger(\"patterns-inject-triggered\");\n        } catch (e) {\n            log.error(\"patterns-inject-triggered\", e);\n        }\n        this.execute(cfgs, $el);\n    },\n\n    extractConfig($el, opts) {\n        opts = $.extend({}, opts);\n\n        const cfgs = parser.parse($el, opts, true);\n        cfgs.forEach((cfg) => {\n            cfg.$context = $el;\n            // opts and cfg have priority, fall back to href/action\n            cfg.url =\n                opts.url ||\n                cfg.url ||\n                $el.attr(\"href\") ||\n                $el.attr(\"action\") ||\n                $el.parents(\"form\").attr(\"action\") ||\n                \"\";\n\n            // separate selector from url\n            const urlparts = cfg.url.split(\"#\");\n            cfg.url = urlparts[0];\n\n            if (urlparts.length > 2) {\n                log.warn(\"Ignoring additional source ids:\", urlparts.slice(2));\n            }\n\n            if (!cfg.defaultSelector) {\n                // if no selector, check for selector as part of original url\n                cfg.defaultSelector = (urlparts[1] && \"#\" + urlparts[1]) || \"body\";\n            }\n            if (cfg.delay) {\n                try {\n                    cfg.delay = utils.parseTime(cfg.delay);\n                } catch (e) {\n                    log.warn(\"Invalid delay value: \", cfg.delay);\n                    cfg.delay = null;\n                }\n            }\n            cfg.processDelay = 0;\n        });\n        return cfgs;\n    },\n\n    elementIsDirty(m) {\n        /* Check whether the passed in form element contains a value.\n         */\n        const data = $.map(m.find(\":input:not(select)\"), (i) => {\n            const val = $(i).val();\n            return Boolean(val) && val !== $(i).attr(\"placeholder\");\n        });\n        return $.inArray(true, data) !== -1;\n    },\n\n    askForConfirmation(cfgs) {\n        /* If configured to do so, show a confirmation dialog to the user.\n         * This is done before attempting to perform injection.\n         */\n        let should_confirm = false;\n        let message;\n\n        for (const cfg of cfgs) {\n            let _confirm = false;\n            if (cfg.confirm == \"always\") {\n                _confirm = true;\n            } else if (\n                cfg.confirm === \"form-data\" &&\n                cfg.target &&\n                cfg.target !== \"none\"\n            ) {\n                _confirm = this.elementIsDirty(cfg.$target);\n            } else if (cfg.confirm === \"class\" && cfg.target && cfg.target !== \"none\") {\n                _confirm = cfg.$target.hasClass(\"is-dirty\");\n            }\n            if (_confirm) {\n                should_confirm = true;\n                message = cfg.confirmMessage;\n            }\n        }\n        if (should_confirm) {\n            if (!window.confirm(message)) {\n                return false;\n            }\n        }\n        return true;\n    },\n\n    ensureTarget(cfg) {\n        /* Make sure that a target element exists and that it's assigned to\n         * cfg.$target.\n         */\n        // make sure target exist\n        if (cfg.target === \"none\") {\n            // special case, we don't want to inject anything\n            return true;\n        }\n        cfg.$target =\n            cfg.$target || (cfg.target === \"self\" ? cfg.$context : $(cfg.target));\n        if (cfg.$target.length === 0) {\n            if (!cfg.target) {\n                log.error(\"Need target selector\", cfg);\n                return false;\n            }\n            cfg.$target = this.createTarget(cfg.target);\n            cfg.$injected = cfg.$target;\n        }\n        return true;\n    },\n\n    verifySingleConfig(url, cfg) {\n        /* Verify one of potentially multiple configs (i.e. argument lists).\n         *\n         * Extract modifiers such as ::element or ::after.\n         * Ensure that a target element exists.\n         */\n        if (cfg.url !== url) {\n            // in case of multi-injection, all injections need to use\n            // the same url\n            log.error(\"Unsupported different urls for multi-inject\");\n            return false;\n        }\n        // defaults\n        cfg.source = cfg.source || cfg.defaultSelector;\n        cfg.target = cfg.target || cfg.defaultSelector;\n\n        if (!this.extractModifiers(cfg)) {\n            return false;\n        }\n        if (!this.ensureTarget(cfg)) {\n            return false;\n        }\n        this.listenForFormReset(cfg);\n        return true;\n    },\n\n    verifyConfig(cfgs) {\n        /* Verify and post-process all the configurations.\n         * Each \"config\" is an arguments list separated by the &&\n         * combination operator.\n         *\n         * In case of multi-injection, only one URL is allowed, which\n         * should be specified in the first config (i.e. arguments list).\n         *\n         * Verification for each cfg in the array needs to succeed.\n         */\n        return cfgs.every((cfg) => this.verifySingleConfig(cfgs[0].url, cfg));\n    },\n\n    listenForFormReset(cfg) {\n        /* if pat-inject is used to populate target in some form and when\n         * Cancel button is pressed (this triggers reset event on the\n         * form) you would expect to populate with initial placeholder\n         */\n        if (cfg.target === \"none\")\n            // Special case, we don't want to display any return value.\n            return;\n        const $form = cfg.$target.parents(\"form\");\n        if ($form.length !== 0 && cfg.$target.data(\"initial-value\") === undefined) {\n            cfg.$target.data(\"initial-value\", cfg.$target.html());\n            $form.on(\"reset\", () => {\n                cfg.$target.html(cfg.$target.data(\"initial-value\"));\n            });\n        }\n    },\n\n    extractModifiers(cfg) {\n        /* The user can add modifiers to the source and target arguments.\n         * Modifiers such as ::element, ::before and ::after.\n         * We identifiy and extract these modifiers here.\n         */\n        const source_re = /^(.*?)(::element)?$/;\n        const target_re = /^(.*?)(::element)?(::after|::before)?$/;\n        const source_match = source_re.exec(cfg.source);\n        const target_match = target_re.exec(cfg.target);\n\n        cfg.source = source_match[1];\n        cfg.sourceMod = source_match[2] ? \"element\" : \"content\";\n        cfg.target = target_match[1];\n        const targetMod = target_match[2] ? \"element\" : \"content\";\n        const targetPosition = (target_match[3] || \"::\").slice(2); // position relative to target\n\n        if (cfg.loadingClass) {\n            cfg.loadingClass += \" \" + cfg.loadingClass + \"-\" + targetMod;\n            if (targetPosition && cfg.loadingClass) {\n                cfg.loadingClass += \" \" + cfg.loadingClass + \"-\" + targetPosition;\n            }\n        }\n        cfg.action = targetMod + targetPosition;\n        // Once we start detecting illegal combinations, we'll\n        // return false in case of error\n        return true;\n    },\n\n    createTarget(selector) {\n        /* create a target that matches the selector\n         *\n         * XXX: so far we only support #target and create a div with\n         * that id appended to the body.\n         */\n        if (selector.slice(0, 1) !== \"#\") {\n            log.error(\"only id supported for non-existing target\");\n            return null;\n        }\n        const $target = $(\"<div />\").attr({ id: selector.slice(1) });\n        $(\"body\").append($target);\n        return $target;\n    },\n\n    _performInjection(target, $el, $source, cfg, trigger, title) {\n        /* Called after the XHR has succeeded and we have a new $source\n         * element to inject.\n         */\n        if (cfg.sourceMod === \"content\") {\n            $source = $source.contents();\n        }\n        let $src;\n        $src = $source.safeClone();\n        $src.findInclusive(\"img\").on(\"load\", (e) => {\n            $(e.currentTarget).trigger(\"pat-inject-content-loaded\");\n        });\n\n        const $injected = cfg.$injected || $src;\n        // Now the injection actually happens.\n        if (this._inject(trigger, $src, $(target), cfg)) {\n            // Update history\n            this._update_history(cfg, trigger, title);\n            // Post-injection\n            this._afterInjection($el, $injected, cfg);\n        }\n    },\n\n    _update_history(cfg, trigger, title) {\n        // History support. if subform is submitted, append form params\n        const glue = cfg.url.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n        if (cfg.history === \"record\" && \"pushState\" in history) {\n            if (cfg.params) {\n                history.pushState(\n                    { url: cfg.url + glue + cfg.params },\n                    \"\",\n                    cfg.url + glue + cfg.params\n                );\n            } else {\n                history.pushState({ url: cfg.url }, \"\", cfg.url);\n            }\n            // Also inject title element if we have one\n            if (title)\n                this._inject(trigger, title, $(\"title\"), {\n                    action: \"element\",\n                });\n        }\n    },\n\n    _afterInjection($el, $injected, cfg) {\n        /* Set a class on the injected elements and fire the\n         * patterns-injected event.\n         */\n        $injected\n            .filter((idx, el_) => {\n                return el_.nodeType !== TEXT_NODE;\n            })\n            .data(\"pat-injected\", { origin: cfg.url });\n\n        if ($injected.length === 1 && $injected[0].nodeType == TEXT_NODE) {\n            // Only one element injected, and it was a text node.\n            // So we trigger \"patterns-injected\" on the parent.\n            // The event handler should check whether the\n            // injected element and the triggered element are\n            // the same.\n            $injected.parent().trigger(\"patterns-injected\", [cfg, $el[0], $injected[0]]);\n        } else {\n            $injected.each((idx, el_) => {\n                // patterns-injected event will be triggered for each injected (non-text) element.\n                if (el_.nodeType !== TEXT_NODE) {\n                    $(el_)\n                        .addClass(cfg[\"class\"])\n                        .trigger(\"patterns-injected\", [cfg, $el[0], el_]);\n                }\n            });\n        }\n\n        if (cfg.scroll && cfg.scroll !== \"none\") {\n            // Get the scroll target for\n            // 1) finding the scroll container\n            // 2) getting the element to scroll to (if not \"top\")\n            const scroll_target = [\"top\", \"target\"].includes(cfg.scroll)\n                ? cfg.$target[0]\n                : $injected.findInclusive(cfg.scroll)[0];\n\n            const scroll_container = dom.find_scroll_container(\n                scroll_target,\n                null,\n                window\n            );\n\n            if (cfg.scroll === \"top\") {\n                dom.scroll_to_top(scroll_container);\n            } else if (scroll_target) {\n                dom.scroll_to_element(scroll_target, scroll_container);\n            }\n        }\n\n        $el[0].dispatchEvent(\n            new Event(\"pat-inject-success\", { bubbles: true, cancelable: true })\n        );\n    },\n\n    async _onInjectSuccess($el, cfgs, ev) {\n        let data = ev?.jqxhr?.responseText;\n        if (!data) {\n            log.warn(\"No response content, aborting\", ev);\n            return;\n        }\n        if (cfgs[0].source === \"none\") {\n            // Special case, we want to call something, but we don't want to inject anything\n            data = \"\";\n        }\n        const sources$ = await this.callTypeHandler(cfgs[0].dataType, \"sources\", $el, [\n            cfgs,\n            data,\n            ev,\n        ]);\n        /* pick the title source for dedicated handling later\n          Title - if present - is always appended at the end. */\n        let title;\n        if (\n            sources$ &&\n            sources$[sources$.length - 1] &&\n            sources$[sources$.length - 1][0] &&\n            sources$[sources$.length - 1][0].nodeName == \"TITLE\"\n        ) {\n            title = sources$[sources$.length - 1];\n        }\n        cfgs.forEach((cfg, idx1) => {\n            const perform_inject = () => {\n                if (cfg.target !== \"none\")\n                    cfg.$target.each((idx2, target) => {\n                        this._performInjection(\n                            target,\n                            $el,\n                            sources$[idx1],\n                            cfg,\n                            ev.target,\n                            title\n                        );\n                    });\n            };\n            if (cfg.processDelay) {\n                setTimeout(() => perform_inject(), cfg.processDelay);\n            } else {\n                perform_inject();\n            }\n        });\n        if (cfgs[0].nextHref && $el.is(\"a\")) {\n            // In case next-href is specified the anchor's href will\n            // be set to it after the injection is triggered.\n            $el.attr({ href: cfgs[0].nextHref.replace(/&amp;/g, \"&\") });\n            this.destroy($el);\n        }\n        $el.off(\"pat-ajax-success.pat-inject\");\n        $el.off(\"pat-ajax-error.pat-inject\");\n    },\n\n    async _onInjectError($el, cfgs, event) {\n        let explanation = \"\";\n        const status = event.jqxhr.status;\n        const timestamp = new Date();\n        if (status % 100 == 4) {\n            explanation =\n                \"Sorry! We couldn't find the page to load. Please make a screenshot and send it to support. Thank you!\";\n        } else if (status % 100 == 5) {\n            explanation =\n                \"I am very sorry! There was an error at the server. Please make a screenshot and contact support. Thank you!\";\n        } else if (status == 0) {\n            explanation =\n                \"It seems, the server is down. Please make a screenshot and contact support. Thank you!\";\n        }\n\n        let error_page;\n        let error_page_fragment;\n        const url_params = new URLSearchParams(window.location.search);\n        if (url_params.get(\"pat-inject-errorhandler.off\") === null) {\n            // Prepare a error page to be injected into the document.\n\n            // Try to get a suitable error message from pre-configured error pages.\n            const error_page_url = document\n                ?.querySelector(`meta[name^=pat-inject-status-${status}]`)\n                ?.getAttribute(\"content\", false);\n            error_page_fragment = error_page_url?.split(\"#\")[1];\n            error_page_fragment = error_page_fragment ? `#${error_page_fragment}` : null;\n\n            if (error_page_fragment) {\n                error_page = document.createElement(\"html\");\n                error_page.innerHTML = event.jqxhr.responseText;\n                error_page = error_page.querySelector(error_page_fragment);\n            }\n\n            if (!error_page && error_page_url) {\n                try {\n                    const error_page_response = await fetch(error_page_url, {\n                        method: \"GET\",\n                    });\n                    error_page = document.createElement(\"html\");\n                    error_page.innerHTML = await error_page_response.text();\n                    error_page = error_page.querySelector(error_page_fragment || \"body\");\n                } catch {\n                    // fall back to standard error message and ignore.\n                }\n            }\n        }\n\n        // clean up\n        cfgs.forEach((cfg) => {\n            if (\"$injected\" in cfg) {\n                cfg.$injected.remove();\n            }\n            cfg.$target.removeClass(cfg.loadingClass);\n            $el.removeClass(cfg.executingClass);\n        });\n        $el.off(\"pat-ajax-success.pat-inject\");\n        $el.off(\"pat-ajax-error.pat-inject\");\n\n        if (error_page) {\n            const error_zone = document.querySelector(error_page_fragment || \"body\");\n            error_zone.innerHTML = error_page.innerHTML;\n            registry.scan(error_zone); // initialize any patterns in error page\n        } else {\n            const msg_attr = `${explanation} Status is ${status} ${event.jqxhr.statusText}, time was ${timestamp}. You can click to close this.`;\n            $(\"body\").attr(\"data-error-message\", msg_attr);\n            $(\"body\").on(\"click\", () => {\n                $(\"body\").removeAttr(\"data-error-message\");\n                window.location.href = window.location.href; // reload\n            });\n        }\n    },\n\n    execute(cfgs, $el) {\n        /* Actually execute the injection.\n         *\n         * Either by making an ajax request or by spoofing an ajax\n         * request when the content is readily available in the current page.\n         */\n        // get a kinda deep copy, we scribble on it\n        cfgs = cfgs.map((cfg) => $.extend({}, cfg));\n        if (!this.verifyConfig(cfgs)) {\n            return;\n        }\n        if (!this.askForConfirmation(cfgs)) {\n            return;\n        }\n        if ($el.data(\"pat-inject-triggered\")) {\n            // Prevent double triggers;\n            return;\n        }\n        $el.data(\"pat-inject-triggered\", true);\n\n        for (const cfg of cfgs) {\n            // Add a execute class on the pat-inject element.\n            if (cfg?.executingClass) {\n                $el[0].classList.add(cfg.executingClass);\n            }\n            // Add a loading class to the target.\n            // Can be used for loading-spinners.\n            if (cfg?.loadingClass && cfg?.target !== \"none\") {\n                cfg.$target.addClass(cfg.loadingClass);\n            }\n        }\n\n        $el.on(\"pat-ajax-success.pat-inject\", async (e) => {\n            this._onInjectSuccess($el, cfgs, e);\n\n            // Wait for the next tick to ensure that the close-panel listener\n            // is called before this one, even for non-async local injects.\n            await utils.timeout(1);\n            // Remove the close-panel event listener.\n            events.remove_event_listener($el[0], \"pat-inject--close-panel\");\n            // Only close the panel if a close-panel event was catched previously.\n            if (do_close_panel) {\n                do_close_panel = false;\n                // Re-trigger close-panel event if it was caught while injection was in progress.\n                $el[0].dispatchEvent(\n                    new Event(\"close-panel\", { bubbles: true, cancelable: true })\n                );\n            }\n        });\n        $el.on(\"pat-ajax-error.pat-inject\", this._onInjectError.bind(this, $el, cfgs));\n        $el.on(\"pat-ajax-success.pat-inject pat-ajax-error.pat-inject\", () =>\n            $el.removeData(\"pat-inject-triggered\")\n        );\n\n        // Prevent closing the panel while injection is in progress.\n        let do_close_panel = false;\n        events.add_event_listener(\n            $el[0],\n            \"close-panel\",\n            \"pat-inject--close-panel\",\n            (e) => {\n                e.stopPropagation();\n                e.stopImmediatePropagation();\n                do_close_panel = true;\n            }\n        );\n\n        if (cfgs[0].url.length) {\n            ajax.request($el, {\n                \"url\": cfgs[0].url,\n                \"browser-cache\": cfgs[0].browserCache,\n            });\n        } else {\n            // If there is no url specified, then content is being fetched\n            // from the same page.\n            // No need to do an ajax request for this, so we spoof the ajax\n            // event.\n            $el.trigger({\n                type: \"pat-ajax-success\",\n                jqxhr: {\n                    responseText: $(\"body\").html(),\n                },\n            });\n        }\n    },\n\n    _inject(trigger, $source, $target, cfg) {\n        // action to jquery method mapping, except for \"content\"\n        // and \"element\"\n        const method = {\n            contentbefore: \"prepend\",\n            contentafter: \"append\",\n            elementbefore: \"before\",\n            elementafter: \"after\",\n        }[cfg.action];\n\n        if (cfg.source === \"none\") {\n            $target.replaceWith(\"\");\n            return true;\n        }\n        if ($source.length === 0) {\n            log.warn(\"Aborting injection, source not found:\", $source);\n            $(trigger).trigger(\"pat-inject-missingSource\", {\n                url: cfg.url,\n                selector: cfg.source,\n            });\n            return false;\n        }\n        if (cfg.target === \"none\")\n            // Special case. Don't do anything, we don't want any result\n            return true;\n        if ($target.length === 0) {\n            log.warn(\"Aborting injection, target not found:\", $target);\n            $(trigger).trigger(\"pat-inject-missingTarget\", {\n                selector: cfg.target,\n            });\n            return false;\n        }\n        if (cfg.action === \"content\") {\n            $target.empty().append($source);\n        } else if (cfg.action === \"element\") {\n            $target.replaceWith($source);\n        } else {\n            $target[method]($source);\n        }\n        return true;\n    },\n\n    _sourcesFromHtml(html, url, sources) {\n        const $html = this._parseRawHtml(html, url);\n        return sources.map((source) => {\n            if (source === \"body\") {\n                source = \"#__original_body\";\n            }\n            if (source === \"none\") {\n                return $(\"<!-- -->\");\n            }\n            const $source = $html.find(source);\n\n            if ($source.length === 0) {\n                if (source != \"title\") {\n                    log.warn(\"No source elements for selector:\", source, $html);\n                }\n            }\n\n            $source.find('a[href^=\"#\"]').each((idx, el_) => {\n                const href = el_.getAttribute(\"href\");\n                if (href.indexOf(\"#{1}\") !== -1) {\n                    // We ignore hrefs containing #{1} because they're not\n                    // valid and only applicable in the context of\n                    // pat-clone.\n                    return;\n                }\n                // Skip in-document links pointing to an id that is inside\n                // this fragment.\n                if (href.length === 1) {\n                    // Special case for top-of-page links\n                    el_.href = url;\n                } else if (!$source.find(href).length) {\n                    el_.href = url + href;\n                }\n            });\n            return $source;\n        });\n    },\n\n    _rebaseAttrs: {\n        A: \"href\",\n        FORM: \"action\",\n        IMG: \"data-pat-inject-rebase-src\",\n        OBJECT: \"data\",\n        SOURCE: \"data-pat-inject-rebase-src\",\n        VIDEO: \"data-pat-inject-rebase-src\",\n    },\n\n    _rebaseOptions: {\n        \"calendar\": [\"url\", \"event-sources\"],\n        \"collapsible\": [\"load-content\"],\n        \"date-picker\": [\"i18n\"],\n        \"datetime-picker\": [\"i18n\"],\n        \"inject\": [\"url\"],\n    },\n\n    _rebaseURL(base, url) {\n        if (url.indexOf(\"://\") !== -1 || url[0] === \"/\" || url.indexOf(\"data:\") === 0) {\n            return url;\n        }\n        base = new URL(base, window.location).href; // If base is relative make it absolute.\n        return base.slice(0, base.lastIndexOf(\"/\") + 1) + url;\n    },\n\n    _rebaseHTML(base, html) {\n        if (html === \"\") {\n            // Special case, source is none\n            return \"\";\n        }\n        const $page = $(\n            html.replace(/(\\s)(src\\s*)=/gi, '$1src=\"\" data-pat-inject-rebase-$2=').trim()\n        )\n            .wrapAll(\"<div>\")\n            .parent();\n\n        $page.find(Object.keys(this._rebaseAttrs).join(\",\")).each((idx, el_) => {\n            const $el_ = $(el_);\n            const attrName = this._rebaseAttrs[el_.tagName];\n            let value = $el_.attr(attrName);\n\n            if (\n                value &&\n                value.slice(0, 2) !== \"@@\" &&\n                value[0] !== \"#\" &&\n                value.slice(0, 7) !== \"mailto:\" &&\n                value.slice(0, 4) !== \"tel:\" &&\n                value.slice(0, 4) !== \"fax:\" &&\n                value.slice(0, 7) !== \"callto:\" &&\n                value.slice(0, 10) !== \"ts3server:\" &&\n                value.slice(0, 6) !== \"teams:\" &&\n                value.slice(0, 11) !== \"javascript:\"\n            ) {\n                value = this._rebaseURL(base, value);\n                $el_.attr(attrName, value);\n            }\n        });\n\n        for (const [pattern_name, opts] of Object.entries(this._rebaseOptions)) {\n            for (const el_ of dom.querySelectorAllAndMe(\n                $page[0],\n                `[data-pat-${pattern_name}]`\n            )) {\n                const pattern = registry.patterns?.[pattern_name];\n                const pattern_parser = pattern?.parser;\n                if (!pattern_parser) {\n                    continue;\n                }\n                // parse: no default options, possibly multiple configs, no grouping.\n                const options = pattern_parser.parse(el_, {}, true, false, false);\n                let changed = false;\n                for (const config of options) {\n                    for (const opt of opts) {\n                        const val = config[opt];\n                        if (!val) {\n                            continue;\n                        }\n                        changed = true;\n                        if (Array.isArray(val)) {\n                            config[opt] = val.map((it) => this._rebaseURL(base, it));\n                        } else {\n                            config[opt] = this._rebaseURL(base, val);\n                        }\n                    }\n                }\n                if (changed) {\n                    el_.setAttribute(\n                        `data-pat-${pattern_name}`,\n                        JSON.stringify(options.length === 1 ? options[0] : options)\n                    );\n                }\n            }\n        }\n\n        return $page\n            .html()\n            .replace(/src=\"\" data-pat-inject-rebase-/g, \"\")\n            .trim();\n    },\n\n    _parseRawHtml(html, url = \"\") {\n        // remove script tags and head and replace body by a div\n        const title = html.match(/\\<title\\>(.*)\\<\\/title\\>/);\n        let clean_html = html\n            .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, \"\")\n            .replace(/<head\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/head>/gi, \"\")\n            .replace(/<body([^>]*?)>/gi, '<div id=\"__original_body\">')\n            .replace(/<\\/body([^>]*?)>/gi, \"</div>\");\n        if (title && title.length == 2) {\n            clean_html = title[0] + clean_html;\n        }\n        try {\n            clean_html = this._rebaseHTML(url, clean_html);\n        } catch (e) {\n            log.error(\"Error rebasing urls\", e);\n        }\n        const $html = $(\"<div/>\").html(clean_html);\n        if ($html.children().length === 0) {\n            log.warn(\"Parsing html resulted in empty jquery object:\", clean_html);\n        }\n        return $html;\n    },\n\n    _initAutoloadVisible($el, cfgs) {\n        if ($el.data(\"pat-inject-autoloaded\")) {\n            // ignore executed autoloads\n            return false;\n        }\n\n        const el = $el[0];\n\n        // delay: default is 200ms to allow scrolling over and past autoload-visible elements without loading them.\n        const delay = cfgs[0].delay || 200;\n        log.debug(`Delay time: ${delay}`);\n\n        // function to trigger the autoload and mark as triggered\n        const trigger = (event) => {\n            if ($el.data(\"pat-inject-autoloaded\")) {\n                log.debug(`autoload-visible trigger skipped ${el}`);\n                return false;\n            }\n            $el.data(\"pat-inject-autoloaded\", true);\n            this.onTrigger({ currentTarget: el });\n            event && event.preventDefault();\n            log.debug(`autoload-visible trigger run ${el}`);\n            return true;\n        };\n\n        // Config see: https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n        const intersection_observer_config = {\n            threshold: 0, // If even one pixel is visible, the callback will be run.\n            root: null, // Root is browser viewport. If the element is visible to the user, the callback will be run.\n            margin: \"0px\", // No margins. The element is not preloaded.\n        };\n\n        let timeout_id = null;\n        const observer = new IntersectionObserver((entries) => {\n            for (const entry of entries) {\n                if (entry.isIntersecting) {\n                    // Run the callback after 200ms to prevent loading all\n                    // visible elements when scrolling over.\n                    timeout_id = window.setTimeout(() => {\n                        observer.disconnect(); // Stop observing loaded elements.\n                        trigger();\n                    }, delay);\n                    log.debug(`autoload-visible intersecting ${el}`);\n                } else {\n                    window.clearTimeout(timeout_id);\n                    log.debug(`autoload-visible not intersecting ${el}`);\n                }\n            }\n        }, intersection_observer_config);\n        observer.observe(el);\n    },\n\n    _initIdleTrigger($el, delay) {\n        // XXX TODO: handle item removed from DOM\n        const timeout = parseInt(delay, 10);\n        let timer;\n\n        const onTimeout = () => {\n            this.onTrigger({ currentTarget: $el[0] });\n            unsub();\n            clearTimeout(timer);\n        };\n\n        const onInteraction = utils.debounce(() => {\n            if (!document.body.contains($el[0])) {\n                unsub();\n                return;\n            }\n            clearTimeout(timer);\n            timer = setTimeout(onTimeout, timeout);\n        }, timeout);\n\n        const unsub = () => {\n            [\"scroll\", \"resize\"].forEach((e) =>\n                window.removeEventListener(e, onInteraction)\n            );\n            [\n                \"click\",\n                \"keypress\",\n                \"keyup\",\n                \"mousemove\",\n                \"touchstart\",\n                \"touchend\",\n            ].forEach((e) => document.removeEventListener(e, onInteraction));\n        };\n\n        onInteraction();\n\n        [\"scroll\", \"resize\"].forEach((e) => window.addEventListener(e, onInteraction));\n        [\"click\", \"keypress\", \"keyup\", \"mousemove\", \"touchstart\", \"touchend\"].forEach(\n            (e) => document.addEventListener(e, onInteraction)\n        );\n    },\n\n    // XXX: simple so far to see what the team thinks of the idea\n    registerTypeHandler(type, handler) {\n        this.handlers[type] = handler;\n    },\n\n    async callTypeHandler(type, fn, context, params) {\n        type = type || \"html\";\n        if (this.handlers[type] && $.isFunction(this.handlers[type][fn])) {\n            return await this.handlers[type][fn].bind(this)(...params);\n        } else {\n            return null;\n        }\n    },\n\n    handlers: {\n        html: {\n            sources(cfgs, data) {\n                const sources = cfgs.map((cfg) => cfg.source);\n                sources.push(\"title\");\n                return this._sourcesFromHtml(data, cfgs[0].url, sources);\n            },\n        },\n    },\n};\n\n$(document).on(\"patterns-injected.inject\", async (ev, cfg, trigger, injected) => {\n    /* Listen for the patterns-injected event.\n     *\n     * Remove the \"loading-class\" classes from all injection targets and\n     * then scan the injected content for new patterns.\n     */\n    if (cfg && cfg.skipPatInjectHandler) {\n        // Allow skipping this handler but still have other handlers in other\n        // patterns listen to ``patterns-injected``.\n        return;\n    }\n    if (cfg) {\n        cfg.$target.removeClass(cfg.loadingClass);\n        // Remove the executing class, add the executed class to the element with pat.inject on it.\n        $(trigger).removeClass(cfg.executingClass).addClass(cfg.executedClass);\n    }\n    if (injected.nodeType !== TEXT_NODE && injected.nodeType !== COMMENT_NODE) {\n        registry.scan(injected, null, { type: \"injection\", element: trigger });\n        $(injected).trigger(\"patterns-injected-scanned\");\n\n        await utils.timeout(10); // Wait a bit before dispatching next event.\n        injected.dispatchEvent(\n            new CustomEvent(\"patterns-injected-delayed\", {\n                bubbles: true,\n                cancelable: true,\n                detail: {\n                    injected: injected,\n                },\n            })\n        );\n    }\n});\n\n$(window).on(\"popstate\", (event) => {\n    // popstate also triggers on traditional anchors\n    if (!event.originalEvent.state && \"replaceState\" in history) {\n        try {\n            history.replaceState(\"anchor\", \"\", document.location.href);\n        } catch (e) {\n            log.debug(e);\n        }\n        return;\n    }\n    // Not only change the URL, also reload the page.\n    window.location.reload();\n});\n\n// this entry ensures that the initally loaded page can be reached with\n// the back button\nif (\"replaceState\" in history) {\n    try {\n        history.replaceState(\"pageload\", \"\", document.location.href);\n    } catch (e) {\n        log.debug(e);\n    }\n}\n\nregistry.register(inject);\nexport default inject;\n","import Base from \"../../core/base\";\nimport events from \"../../core/events\";\nimport utils from \"../../core/utils\";\n\nexport default Base.extend({\n    name: \"close-panel\",\n    trigger: \".close-panel\",\n\n    init() {\n        // Close panel support for dialog panels\n        // Other modals are handled in pat-modal.\n        const dialog_panel = this.el.closest(\"dialog\");\n        if (dialog_panel) {\n            events.add_event_listener(\n                dialog_panel,\n                \"close-panel\",\n                \"close-panel--dialog\",\n                () => {\n                    dialog_panel.close();\n                }\n            );\n        }\n\n        this.el.addEventListener(\"click\", async (e) => {\n            await utils.timeout(0); // Wait for other patterns, like pat-validation.\n\n            if (\n                e.target.matches(\":not([formnovalidate])\") &&\n                e.target.matches(\"[type=submit], button:not([type=button])\") &&\n                this.el.closest(\"form\")?.checkValidity() === false\n            ) {\n                // Prevent closing an invalid form when submitting.\n                return;\n            }\n\n            this.el.dispatchEvent(\n                new Event(\"close-panel\", { bubbles: true, cancelable: true })\n            );\n        });\n    },\n});\n","import $ from \"jquery\";\nimport { BasePattern } from \"../../core/basepattern\";\nimport logging from \"../../core/logging\";\nimport Parser from \"../../core/parser\";\nimport events from \"../../core/events\";\nimport registry from \"../../core/registry\";\nimport utils from \"../../core/utils\";\n\n// Initialize close-panel functionality.\nimport \"../close-panel/close-panel\";\n\nconst log = logging.getLogger(\"pat-tooltip\");\n\nexport const parser = new Parser(\"tooltip\");\nconst all_positions = [\n    \"tl\",\n    \"tm\",\n    \"tr\",\n    \"rt\",\n    \"rm\",\n    \"rb\",\n    \"br\",\n    \"bm\",\n    \"bl\",\n    \"lb\",\n    \"lm\",\n    \"lt\",\n];\nparser.addArgument(\"position-list\", [], all_positions, true);\nparser.addArgument(\"position-policy\", \"auto\", [\"auto\", \"force\"]);\nparser.addArgument(\"trigger\", \"click\", [\"click\", \"hover\", \"none\"]);\nparser.addArgument(\"source\", \"title\", [\"ajax\", \"content\", \"title\"]);\nparser.addArgument(\"ajax-data-type\", \"html\", [\"html\", \"markdown\"]);\nparser.addArgument(\"closing\", \"auto\", [\"auto\", \"sticky\", \"close-button\"]);\nparser.addArgument(\"delay\");\nparser.addArgument(\"mark-inactive\", true);\nparser.addArgument(\"class\");\nparser.addArgument(\"target\", \"body\");\nparser.addArgument(\"arrow-padding\", null);\nparser.addArgument(\"url\", null);\n\n// Tippy Lifecycle-hooks\n// See: https://tippyjs.bootcss.com/lifecycle-hooks/\n// onCreate\n// onTrigger\n// onShow\n// onMount\n// onShown\n// onUntrigger\n// onHide\n// onHidden\n//\n// onBeforeUpdate\n// onAfterUpdate\n// onDestroy\n\nclass Pattern extends BasePattern {\n    static name = \"tooltip\";\n    static trigger = \".pat-tooltip, .pat-tooltip-ng\";\n    static parser = parser;\n\n    tippy = null;\n\n    active_class = \"tooltip-active-hover\";\n    inactive_class = \"tooltip-inactive\";\n\n    async init() {\n        const el = this.el;\n\n        if (window.__patternslib_import_styles) {\n            import(\"tippy.js/dist/tippy.css\");\n        }\n        const Tippy = (await import(\"tippy.js\")).default;\n        this.tippy_options = this.parseOptionsForTippy(this.options);\n\n        const defaultProps = {\n            animation: false,\n            arrow: true,\n            //'delay': [0, 1800],\n            //'duration': [325, 275],\n            hideOnClick: this.options.closing === \"close-button\" ? false : true,\n            ignoreAttributes: true,\n            interactive: true,\n            onHide: this._onHide.bind(this),\n            onShow: this._onShow.bind(this),\n            trigger: \"click\",\n        };\n\n        Tippy.setDefaultProps(defaultProps);\n        this.tippy = new Tippy(el, this.tippy_options);\n\n        if (this.options.source === \"title\") {\n            // Remove ``title`` attribute when source is set to ``title`` to\n            // disable the browser's built-in tooltip feature\n            el.removeAttribute(\"title\");\n        }\n\n        if (this.options.trigger === \"click\" && this.options.source === \"ajax\") {\n            // prevent default action for \"click\" and \"mouseenter click\"\n            events.add_event_listener(\n                el,\n                \"click\",\n                \"pat-tooltip--click-prevent-default\",\n                (event) => {\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n            );\n        }\n\n        if (this.options.trigger === \"click\") {\n            this.active_class = \"tooltip-active-click\";\n        }\n        if (this.options.markInactive) {\n            // Initially mark as inactive\n            el.classList.add(this.inactive_class);\n        }\n    }\n\n    show() {\n        // Show this tooltip\n        this.tippy.show();\n    }\n\n    async hide() {\n        // Hide this tooltip\n        await utils.timeout(1); // wait a tick for event being processed by other handlers.\n        this.tippy.hide();\n    }\n\n    destroy() {\n        // Remove this tooltip\n        super.destroy(); // Unregister\n        this.tippy.destroy();\n    }\n\n    parseOptionsForTippy(opts) {\n        const placement = (pos) => {\n            // note that Cornelis needs the positioning to be the placement of the thingy on the bubble\n            // tippy though refers to positioning as the placement of the bubble relatively to the reference element\n            // so we invert the meaning below. It's intentional.\n            const primary = (pos0) =>\n                ({\n                    t: \"bottom\",\n                    r: \"left\",\n                    b: \"top\",\n                    l: \"right\",\n                }[pos0]);\n\n            const secondary = (pos1) =>\n                ({\n                    l: \"-start\",\n                    r: \"-end\",\n                    m: \"\",\n                    t: \"-start\",\n                    b: \"-end\",\n                }[pos1]);\n\n            return `${primary(pos[0])}${secondary(pos[1])}`;\n        };\n\n        const tippy_options = { popperOptions: { modifiers: [] } };\n\n        if (opts.arrowPadding !== null) {\n            tippy_options.popperOptions.modifiers.push({\n                name: \"arrow\",\n                options: {\n                    padding: parseInt(opts.arrowPadding, 10),\n                },\n            });\n        }\n\n        const parsers = {\n            position: () => {\n                if (!opts.position?.list?.length) {\n                    return;\n                }\n                tippy_options.placement = placement(opts.position.list[0]); // main position\n\n                const flip_options = {\n                    name: \"flip\",\n                    enabled: true,\n                };\n\n                if (opts.position.policy === \"force\") {\n                    flip_options.enabled = false;\n                } else if (opts.position.length > 1) {\n                    const fallbacks = opts.position.list.slice(1).map(placement);\n                    flip_options.fallbackPlacements = fallbacks;\n                }\n\n                tippy_options.popperOptions.modifiers.push(flip_options);\n            },\n\n            trigger() {\n                if (opts.trigger === \"hover\") {\n                    tippy_options.trigger = \"mouseenter focus\";\n                } else if (opts.trigger === \"none\") {\n                    tippy_options.trigger = \"manual\";\n                    tippy_options.hideOnClick = false;\n                }\n            },\n\n            source: () => {\n                let content;\n                if (opts.source === \"title\") {\n                    // Tooltip content from title attribute\n                    content = this.el.getAttribute(\"title\");\n                } else if (opts.source === \"content\") {\n                    // Tooltip content from trigger childs.\n                    content = this.el.innerHTML;\n                    tippy_options.allowHTML = true;\n                } else if (opts.source === \"ajax\") {\n                    // Tooltiop content from AJAX request.\n                    content = document.createElement(\"progress\");\n                    tippy_options.allowHTML = true;\n                }\n                tippy_options.content = content;\n            },\n\n            delay() {\n                if (opts.delay) {\n                    tippy_options.delay = [utils.parseTime(opts.delay), 0];\n                }\n            },\n\n            target: () => {\n                if (!opts.target) {\n                    return;\n                }\n                if (opts.target === \"parent\") {\n                    tippy_options.appendTo = \"parent\";\n                } else if (opts.target === \"body\") {\n                    tippy_options.appendTo = document.body;\n                } else {\n                    tippy_options.appendTo = document.querySelector(opts.target);\n                }\n            },\n        };\n\n        for (let arg in opts) {\n            switch (arg) {\n                case \"ajax-data-type\":\n                    arg = \"ajaxDataType\";\n                    break;\n                case \"mark-inactive\":\n                    arg = \"markInactive\";\n                    break;\n            }\n            parsers[arg] && parsers[arg](arg);\n        }\n\n        return tippy_options;\n    }\n\n    _initialize_content() {\n        // Initialize any other patterns.\n        registry.scan(this.tippy.popper);\n    }\n\n    async _onShow() {\n        const tippy_classes = [];\n\n        // Group DOM manipulations\n\n        if (this.options.class) {\n            tippy_classes.push(...this.options.class.split(\" \"));\n        }\n\n        // Add a generic non-tippy related class to identify the tooltip container\n        tippy_classes.push(\"tooltip-container\");\n\n        if (this.options.closing === \"close-button\") {\n            // First, remove previously automatically added close buttons.\n            // Otherwise we would end up adding another close button with every\n            // click on it.\n            for (const close_button of this.tippy.popper.querySelectorAll(\n                \".pat-tooltip--close-button\"\n            )) {\n                close_button.remove();\n            }\n\n            const close_button = document.createElement(\"button\");\n            close_button.setAttribute(\"class\", \"close-panel pat-tooltip--close-button\");\n            const content = this.tippy.popper.querySelector(\".tippy-content\");\n            content.parentNode.insertBefore(close_button, content);\n        }\n\n        // Store reference to method for closing panels on the tooltip element instance.\n        events.add_event_listener(\n            this.tippy.popper,\n            \"close-panel\",\n            \"pat-tooltip--close-panel\",\n            () => this.hide()\n        );\n\n        this.tippy.popper.classList.add(...tippy_classes);\n\n        if (this.options.markInactive) {\n            this.el.classList.remove(this.inactive_class);\n            this.el.classList.add(this.active_class);\n        }\n\n        if (this.options.closing !== \"auto\" && this.options.trigger === \"hover\") {\n            // no auto-close when hovering when closing mode is \"sticky\" or \"close-button\".\n            this.tippy.setProps({ trigger: \"click\" });\n        }\n\n        if (this.options.source === \"ajax\") {\n            await this._get_content();\n        }\n\n        // Notify parent patterns about injected content.\n        // Do not call pat-inject's handler, because all necessary\n        // initialization after injection is done here.\n        $(this.tippy.popper).trigger(\"patterns-injected\", [\n            { skipPatInjectHandler: true },\n            this.el,\n            this.tippy.popper,\n        ]);\n\n        this._initialize_content();\n    }\n\n    _onHide() {\n        if (this.options.markInactive) {\n            this.el.classList.remove(this.active_class);\n            this.el.classList.add(this.inactive_class);\n        }\n\n        if (this.options.closing !== \"auto\" && this.options.trigger === \"hover\") {\n            // re-set hover behavior\n            this.tippy.setProps({ trigger: \"mouseenter focus\" });\n        }\n\n        if (this.options.source === \"ajax\") {\n            this.tippy.setContent(document.createElement(\"progress\"));\n        }\n    }\n\n    async _get_content(url = this.options.url) {\n        let selector;\n        ({ url, selector } = this.get_url_parts(url || this.el.getAttribute(\"href\")));\n        let content;\n        if (url) {\n            // Tooltip from remote page.\n            const handler = this.data_type_handlers[this.options.ajaxDataType];\n            try {\n                // TODO: use pat-inject, once it supports async\n                const response = await fetch(url, {\n                    headers: {\n                        Accept: \"text/html,application/xhtml+xml,application/xml\",\n                    },\n                });\n                const text = await response.text();\n                content = await handler(text, url, selector);\n            } catch (e) {\n                log.error(\"Error on ajax request. ${e}\");\n            }\n        } else if (selector) {\n            // Tooltip content from current DOM tree.\n            content = document.querySelector(selector);\n            content = content?.innerHTML || undefined;\n        }\n        if (content) {\n            this.tippy.setContent(content);\n            await utils.timeout(1); // Wait a tick before forceUpdate. Might fail due to unset popperInstance.\n            this.tippy.popperInstance.forceUpdate(); // re-position tippy after content is known.\n        }\n    }\n\n    async get_content(url = this.options.url) {\n        // API method: _get_content + _initialize_content\n        await this._get_content(url);\n        this._initialize_content();\n    }\n\n    get_url_parts(href) {\n        // Return the URL and a CSS ID selector.\n        let url, selector, query;\n        if (!href) {\n            return { url, selector };\n        }\n        [url, selector] = href.split(\"#\");\n        if (selector) {\n            selector = `#${selector}`;\n            [selector, query] = selector.split(\"?\");\n        }\n        if (query) {\n            url = `${url}?${query}`;\n        }\n        return { url, selector };\n    }\n\n    static data_type_handlers = {\n        html(text, url, selector) {\n            let tmp = document.createElement(\"div\");\n            tmp.innerHTML = text;\n            if (selector) {\n                tmp = tmp.querySelector(selector);\n            }\n            return tmp?.innerHTML || \"\";\n        },\n\n        async markdown(text, url, selector) {\n            const Markdown = registry.patterns.markdown;\n            if (!Markdown) {\n                return text;\n            }\n\n            const instance = new Markdown($(\"<div/>\"));\n            await events.await_pattern_init(instance);\n\n            const cfg = { url };\n            if (selector) {\n                cfg.source = selector;\n            }\n\n            const ret = await instance.renderForInjection(cfg, text);\n            return ret[0];\n        },\n    };\n\n    static register_type_handler(type, handler) {\n        Pattern.data_type_handlers[type] = handler;\n    }\n\n    constructor(...args) {\n        super(...args);\n\n        this.register_type_handler = this.constructor.register_type_handler;\n        this.data_type_handlers = this.constructor.data_type_handlers;\n    }\n}\n\nregistry.register(Pattern);\nexport default Pattern;\nexport { Pattern };\n","// Patterns validate - Form vlidation\nimport \"../../core/polyfills\"; // SubmitEvent.submitter for Safari < 15.4 and jsDOM\nimport $ from \"jquery\";\nimport { BasePattern } from \"../../core/basepattern\";\nimport Parser from \"../../core/parser\";\nimport dom from \"../../core/dom\";\nimport events from \"../../core/events\";\nimport logging from \"../../core/logging\";\nimport utils from \"../../core/utils\";\nimport registry from \"../../core/registry\";\n\nconst logger = logging.getLogger(\"pat-validation\");\n//logger.setLevel(logging.Level.DEBUG);\n\nexport const parser = new Parser(\"validation\");\nparser.addArgument(\"disable-selector\", \"[type=submit], button:not([type=button])\"); // Elements which must be disabled if there are errors\nparser.addArgument(\"message-date\", \"\"); // \"This value must be a valid date\");\nparser.addArgument(\"message-datetime\", \"\"); // \"This value must be a valid date and time\");\nparser.addArgument(\"message-email\", \"\"); // \"This value must be a valid email address\");\nparser.addArgument(\"message-max\", \"\"); // \"This value must be less than or equal to %{count}\");\nparser.addArgument(\"message-min\", \"\"); // \"This value must be greater than or equal to %{count}\"); // prettier-ignore\nparser.addArgument(\"message-number\", \"\"); // \"This value must be a number\");\nparser.addArgument(\"message-required\", \"\"); // \"This field is required\");\nparser.addArgument(\"message-equality\", \"is not equal to %{attribute}.\");\nparser.addArgument(\"not-after\", null);\nparser.addArgument(\"not-before\", null);\nparser.addArgument(\"equality\", null);\nparser.addArgument(\"delay\", 100); // Delay before validation is done to avoid validating while typing.\n\n// BBB\n// TODO: deprecated. Will be removed with next major version.\nparser.addAlias(\"message-integer\", \"message-number\");\nparser.addArgument(\"error-template\");\n\nconst KEY_ERROR_EL = \"__patternslib__input__error__el\";\nconst KEY_ERROR_MSG = \"__patternslib__input__error__msg\";\n\nclass Pattern extends BasePattern {\n    static name = \"validation\";\n    static trigger = \"form.pat-validation\";\n    static parser = parser;\n\n    init() {\n        events.add_event_listener(\n            this.el,\n            \"submit\",\n            `pat-validation--submit--validator`,\n            (e) => {\n                // On submit, check all.\n                // Immediate, non-debounced check with submit. Otherwise submit\n                // is not cancelable.\n                for (const input of this.inputs) {\n                    logger.debug(\"Checking input for submit\", input, e);\n                    this.check_input({ input: input, event: e });\n                }\n            },\n            // Make sure this event handler is run early, in the capturing\n            // phase in order to be able to cancel later non-capturing submit\n            // events.\n            { capture: true }\n        );\n\n        this.initialize_inputs();\n        $(this.el).on(\"pat-update\", () => {\n            this.initialize_inputs();\n        });\n\n        // Set ``novalidate`` attribute to disable the browser's validation\n        // bubbles but not disable the validation API.\n        this.el.setAttribute(\"novalidate\", \"\");\n    }\n\n    initialize_inputs() {\n        this.inputs = [\n            ...this.el.querySelectorAll(\"input[name], select[name], textarea[name]\"),\n        ];\n        this.disabled_elements = [\n            ...this.el.querySelectorAll(this.options.disableSelector),\n        ];\n\n        for (const [cnt, input] of this.inputs.entries()) {\n            // Cancelable debouncer.\n            const debouncer = utils.debounce((e) => {\n                logger.debug(\"Checking input for event\", input, e);\n                this.check_input({ input: input, event: e });\n            }, this.options.delay);\n\n            events.add_event_listener(\n                input,\n                \"input\",\n                `pat-validation--input-${input.name}--${cnt}--validator`,\n                (e) => debouncer(e)\n            );\n            events.add_event_listener(\n                input,\n                \"change\",\n                `pat-validation--change-${input.name}--${cnt}--validator`,\n                (e) => debouncer(e)\n            );\n            events.add_event_listener(\n                input,\n                \"blur\",\n                `pat-validation--blur-${input.name}--${cnt}--validator`,\n                (e) => debouncer(e)\n            );\n        }\n    }\n\n    check_input({ input, event, stop = false }) {\n        if (input.disabled) {\n            // No need to check disabled inputs.\n            return;\n        }\n\n        // In any case, clear the custom validity first.\n        this.set_validity({ input: input, msg: \"\" });\n        const validity_state = input.validity;\n\n        if (event?.submitter?.hasAttribute(\"formnovalidate\")) {\n            // Do not check when a button with ``formnovalidate`` was used.\n            return;\n        }\n\n        logger.debug(`\n            validity_state.badInput ${validity_state.badInput}\n            validity_state.customError ${validity_state.customError}\n            validity_state.patternMismatch ${validity_state.patternMismatch}\n            validity_state.rangeOverflow ${validity_state.rangeOverflow}\n            validity_state.rangeUnderflow ${validity_state.rangeUnderflow}\n            validity_state.stepMismatch ${validity_state.stepMismatch}\n            validity_state.tooLong ${validity_state.tooLong}\n            validity_state.tooShort ${validity_state.tooShort}\n            validity_state.typeMismatch ${validity_state.typeMismatch}\n            validity_state.valid ${validity_state.valid}\n            validity_state.valueMissing ${validity_state.valueMissing}\n        `);\n\n        const input_options = parser.parse(input);\n\n        if (validity_state.valid) {\n            // Custom error cases or no invalid state.\n\n            if (\n                input_options.equality &&\n                this.el.querySelector(`[name=${input_options.equality}]`)?.value !==\n                    input.value\n            ) {\n                const message =\n                    input_options.message.equality ||\n                    `The value is not equal to %{attribute}`;\n                this.set_validity({\n                    input: input,\n                    msg: message,\n                    attribute: input_options.equality,\n                });\n            } else if (input_options.not.after || input_options.not.before) {\n                const msg = input_options.message.date || input_options.message.datetime;\n                const msg_default_not_before = \"The date must be after %{attribute}\";\n                const msg_default_not_after = \"The date must be before %{attribute}\";\n\n                let not_after;\n                let not_after_el;\n                if (input_options.not.after) {\n                    if (utils.is_iso_date_time(input_options.not.after, true)) {\n                        not_after = new Date(input_options.not.after);\n                    } else {\n                        // Handle value as selector\n                        not_after_el = document.querySelector(input_options.not.after);\n                        not_after = not_after_el?.value\n                            ? new Date(not_after_el?.value)\n                            : undefined;\n                    }\n\n                    // Use null if no valid date.\n                    not_after = isNaN(not_after) ? null : not_after;\n                }\n\n                let not_before;\n                let not_before_el;\n                if (input_options.not.before) {\n                    if (utils.is_iso_date_time(input_options.not.before, true)) {\n                        not_before = new Date(input_options.not.before);\n                    } else {\n                        // Handle value as selector\n                        not_before_el = document.querySelector(input_options.not.before);\n                        not_before = not_before_el?.value\n                            ? new Date(not_before_el?.value)\n                            : undefined;\n                    }\n\n                    // Use null if no valid date.\n                    not_before = isNaN(not_before) ? null : not_before;\n                }\n\n                if (\n                    input.value &&\n                    utils.is_iso_date_time(input.value, true) &&\n                    !isNaN(new Date(input.value))\n                ) {\n                    // That's 1 valid date!\n                    const date = new Date(input.value);\n\n                    if (not_after && date > not_after) {\n                        let msg_attr;\n                        // Try to construct a meaningfull error message\n                        if (!not_after_el && input_options.not.after) {\n                            // fixed date case\n                            msg_attr = input_options.not.after;\n                        } else {\n                            // Get the label + other text content within the\n                            // label and replace all whitespace and newlines\n                            // with a single space.\n                            msg_attr = not_after_el?.labels?.[0]?.textContent.replace(\n                                /\\s\\s+/g, // replace all whitespace\n                                \" \" // with a single space\n                            );\n                            msg_attr = msg_attr || not_after_el.name;\n                        }\n                        this.set_validity({\n                            input: input,\n                            msg: msg || msg_default_not_after,\n                            attribute: msg_attr.trim(),\n                        });\n                    } else if (not_before && date < not_before) {\n                        let msg_attr;\n                        // Try to construct a meaningfull error message\n                        if (!not_before_el && input_options.not.before) {\n                            // fixed date case\n                            msg_attr = input_options.not.before;\n                        } else {\n                            // Get the label + other text content within the\n                            // label and replace all whitespace and newlines\n                            // with a single space.\n                            msg_attr = not_before_el?.labels?.[0]?.textContent.replace(\n                                /\\s\\s+/g, // replace all whitespace\n                                \" \" // with a single space\n                            );\n                            msg_attr = msg_attr || not_before_el.name;\n                        }\n                        this.set_validity({\n                            input: input,\n                            msg: msg || msg_default_not_before,\n                            attribute: msg_attr.trim(),\n                        });\n                    }\n                }\n\n                // always check the other input to clear/set errors\n                // do not re-check when stop is set to avoid infinite loops\n                if (!stop && not_after_el) {\n                    logger.debug(\"Check `not-after` input.\", not_after_el);\n                    this.check_input({ input: not_after_el, stop: true });\n                }\n                if (!stop && not_before_el) {\n                    logger.debug(\"Check `no-before` input.\", not_after_el);\n                    this.check_input({ input: not_before_el, stop: true });\n                }\n            }\n\n            if (!validity_state.customError) {\n                // No error to handle. Return.\n                this.remove_error(input, true);\n                return;\n            }\n        } else {\n            // Default error cases with custom messages.\n\n            if (validity_state.valueMissing && input_options.message.required) {\n                this.set_validity({ input: input, msg: input_options.message.required });\n            } else if (validity_state.rangeUnderflow && input_options.message.min) {\n                this.set_validity({\n                    input: input,\n                    msg: input_options.message.min,\n                    min: input.getAttribute(\"min\"),\n                });\n            } else if (validity_state.rangeOverflow && input_options.message.max) {\n                this.set_validity({\n                    input: input,\n                    msg: input_options.message.max,\n                    max: input.getAttribute(\"max\"),\n                });\n            } else if (\n                (validity_state.badInput || validity_state.stepMismatch) &&\n                input.type === \"number\" &&\n                input_options.message.number\n            ) {\n                this.set_validity({ input: input, msg: input_options.message.number });\n            } else if (\n                validity_state.typeMismatch &&\n                input.type === \"email\" &&\n                input_options.message.email\n            ) {\n                this.set_validity({ input: input, msg: input_options.message.email });\n            } else if (\n                validity_state.rangeUnderflow &&\n                input.type === \"date\" &&\n                input_options.message.date\n            ) {\n                this.set_validity({ input: input, msg: input_options.message.date });\n            } else if (\n                validity_state.rangeOverflow &&\n                input.type === \"date\" &&\n                input_options.message.date\n            ) {\n                this.set_validity({ input: input, msg: input_options.message.date });\n            } else if (\n                validity_state.rangeUnderflow &&\n                input.type === \"datetime\" &&\n                input_options.message.datetime\n            ) {\n                this.set_validity({ input: input, msg: input_options.message.datetime });\n            } else if (\n                validity_state.rangeOverflow &&\n                input.type === \"datetime\" &&\n                input_options.message.datetime\n            ) {\n                this.set_validity({ input: input, msg: input_options.message.datetime });\n            }\n        }\n\n        if (event?.type === \"submit\") {\n            // Do not submit in error case and prevent other handlers to take action.\n            event.preventDefault();\n            event.stopPropagation();\n            event.stopImmediatePropagation();\n        }\n        this.set_error_message(input);\n    }\n\n    set_validity({ input, msg, attribute = null, min = null, max = null }) {\n        // Replace some variables, as like validate.js\n        if (attribute) {\n            msg = msg.replace(/%{attribute}/g, attribute);\n        }\n        if (min) {\n            msg = msg.replace(/%{count}/g, min);\n        }\n        if (max) {\n            msg = msg.replace(/%{count}/g, max);\n        }\n        msg = msg.replace(/%{value}/g, JSON.stringify(input.value));\n\n        input.setCustomValidity(msg);\n        // Store the error message on the input.\n        // Hidden inputs do not participate in validation but we need this\n        // (e.g. styled date input).\n        input[KEY_ERROR_MSG] = msg;\n    }\n\n    remove_error(input, all_of_group = false) {\n        // Remove error message and related referencesfrom input.\n\n        let inputs = [input];\n        if (all_of_group) {\n            // Get all inputs with the same name - e.g. radio buttons, checkboxes.\n            inputs = this.inputs.filter((it) => it.name === input.name);\n        }\n        for (const it of inputs) {\n            const error_node = it[KEY_ERROR_EL];\n            it[KEY_ERROR_EL] = null;\n            error_node?.remove();\n        }\n\n        // disable selector\n        if (this.el.checkValidity()) {\n            for (const it of this.disabled_elements) {\n                if (it.disabled) {\n                    it.removeAttribute(\"disabled\");\n                    it.classList.remove(\"disabled\");\n                }\n            }\n        }\n    }\n\n    set_error_message(input) {\n        this.remove_error(input);\n\n        // Do not set a error message for a input group like radio buttons or\n        // checkboxes where one has already been set.\n        const inputs = this.inputs.filter((it) => it.name === input.name);\n        if (inputs.length > 1 && inputs.some((it) => !!it[KEY_ERROR_EL])) {\n            // error message for input group already set.\n            return;\n        }\n\n        // Create the validation error DOM node from the template\n        const validation_message = input.validationMessage || input[KEY_ERROR_MSG];\n        const error_node = dom.create_from_string(\n            this.error_template(validation_message)\n        ).firstChild;\n\n        let fieldset;\n        if (input.type === \"radio\" || input.type === \"checkbox\") {\n            fieldset = input.closest(\"fieldset.pat-checklist\");\n        }\n        if (fieldset) {\n            fieldset.append(error_node);\n        } else {\n            input.after(error_node);\n        }\n        input[KEY_ERROR_EL] = error_node;\n\n        let did_disable = false;\n        for (const it of this.disabled_elements) {\n            // Disable for melements if they are not already disabled and which\n            // do not have set the `formnovalidate` attribute, e.g.\n            // `<button formnovalidate>cancel</button>`.\n            if (!it.disabled && !it.formNoValidate) {\n                did_disable = true;\n                it.setAttribute(\"disabled\", \"disabled\");\n                it.classList.add(\"disabled\");\n                logger.debug(\"Disable element\", it);\n            }\n        }\n\n        // Do an initial check of the whole form when a form element (e.g. the\n        // submit button) was disabled. We want to show the user all possible\n        // errors at once and after the submit button is disabled there is no\n        // way to check the whole form at once. ... well we also do not want to\n        // check the whole form when one input was changed....\n        if (did_disable) {\n            logger.debug(\"Checking whole form after element was disabled.\");\n            for (const _input of this.inputs.filter((it) => it !== input)) {\n                this.check_input({ input: _input, stop: true });\n            }\n        }\n    }\n\n    error_template(message) {\n        // Template for the validation message\n        return `<em class=\"validation warning message\">${message}</em>`;\n    }\n}\n\nregistry.register(Pattern);\n\nexport default Pattern;\nexport { Pattern };\n"],"names":["parser","Parser","addArgument","language_mapping","atom","html","plist","rss","svg","wsf","xhtml","xjb","xsd","xsl","Pattern","BasePattern","static","async","CodeJar","hljs","default","theme","el","this","options","window","__patternslib_import_styles","highlight","editor","textContent","highlightElement","highlight_wrapper","linenumbers","withLineNumbers","class","language","classList","filter","it","startsWith","replace","hljs_language","registerLanguage","includes","nodeName","toLowerCase","pre_el","document","createElement","innerHTML","querySelector","value","parentNode","insertBefore","setAttribute","add","config","tab","indentOn","RegExp","spellcheck","catchTab","preserveIdent","addClosing","history","codeeditor","onUpdate","code","trim","dispatchEvent","events","input_event","registry","register","getOptions","$el","patternName","length","$","parent","elOptions","data","tmpOptions","split","i","item","reverse","key","pop","join","log","logging","getLogger","initBasePattern","trigger","jquery","name","prototype","plog","pattern","undefined","Registry","patterns","mockupParser","e","error","Base","warn","defaults","emit","init","constructor","on","eventName","eventCallback","one","args","extend","patternProps","child","Error","Object","hasOwnProperty","call","apply","arguments","jquery_plugin","Surrogate","__super__","autoregister","parser_group_options","parser_multiple","parser_inherit","Event","bubbles","cancelable","setTimeout","debug","parse","event_name","event_callback","add_event_listener","once","destroy","logger","DATA_PREFIX","DATA_STYLE_DISPLAY","get_css_value","property","as_pixels","as_float","getComputedStyle","getPropertyValue","parseFloat","parseInt","Math","round","get_relative_position","reference_el","body","left","abs","getBoundingClientRect","scrollLeft","dom","top","scrollTop","toNodeArray","nodes","NodeList","Array","querySelectorAllAndMe","selector","all","querySelectorAll","matches","unshift","wrap","wrapper","appendChild","hide","style","display","show","val","find_parents","ret","closest","push","find_scoped","indexOf","get_parents","parents","HTMLElement","acquire_attribute","attribute","include_empty","include_all","_el","getAttribute","parentElement","is_visible","offsetWidth","offsetHeight","is_input","test","create_from_string","string","createRange","createContextualFragment","find_scroll_container","direction","fallback","overflow_y","overflow_x","get_scroll_x","scroll_reference","scrollX","get_scroll_y","scrollY","scroll_to_element","scroll_container","offset","position","behavior","scrollTo","scroll_to_top","scroll_to_bottom","scrollHeight","get_data","default_value","set_data","delete_data","template","template_string","template_variables","Function","get_visible_ratio","container","rect","container_rect","bottom","innerHeight","visible_ratio","rect_height","min","max","escape_css_id","id","CSS","escape","remove_event_listener","event_listener_map","removeEventListener","el_events","entries","entry","event_type","cb","opts","addEventListener","_cb","capture","await_event","Promise","resolve","await_pattern_init","reject","target","catch","blur_event","click_event","change_event","focus_event","mousedown_event","mouseup_event","scroll_event","submit_event","dragstart_event","dragend_event","methods","settings","time","initialTime","exceptionAreas","each","$this","lastEvent","Date","trueTime","untouched","inExceptionArea","mouseMoved","find","live","enteredException","leftException","timeout","addClass","event","off","remove","removeData","hasClass","removeClass","startTimer","fn","floor","now","diff","method","slice","scrollable","element","css","clientHeight","clientWidth","scrollWidth","makeVisibleInScroll","parent_id","absoluteParent","elemTop","elemBottom","height","viewTop","viewBottom","safeOffset","docElem","elem","origin","nodeType","ownerDocument","documentElement","setPositionAbsolute","offsettop","offsetleft","thiswidth","width","pos","setleft","settop","appendTo","positionAncestor","$ancestor","$child","childMarginEdgeLeft","childMarginEdgeTop","ancestorPaddingEdgeLeft","ancestorPaddingEdgeTop","findInclusive","addBack","slideIn","speed","easing","callback","animate","slideOut","Contains","a","m","text","toUpperCase","scopedFind","root","writer","bind","oThis","TypeError","aArgs","fToBind","fNOP","fBound","concat","Level","DEBUG","INFO","WARN","ERROR","FATAL","ConsoleWriter","Logger","_loggers","_parent","_enabled","_level","setWriter","w","output","log_name","level","messages","console","info","path","route","shift","_getFlag","flag","context","setEnabled","state","isEnabled","setLevel","getLevel","fatal","match","logconfig","exec","location","search","api","getWriter","ArgumentParser","order","parameters","enum_values","enum_conflicts","groups","possible_groups","group_pattern","json_param_pattern","named_param_pattern","token_pattern","_camelCase","str","__","p1","addAlias","alias","original","addGroupToSpec","spec","group","field","first_spec","first_name","dest","choices","multiple","addJSONArgument","type","isArray","_typeof","choice","obj","_coerce","JSON","num","isNaN","toString","_set","parts","part","v","_split","tokens","quoted","simple","_parseExtendedNotation","argstring","map","arg","values","subopt","_parseShorthandNotation","parameter","sense","positional","_parse","sep","extended","_defaults","result","_cleanupOptions","group_options","keys","inherit","stack","$possible_config_providers","final_length","provider","frame","attr","results","utils","removeDuplicateObjects","mergeStack","current_value","add_argument","last_btn","submitable_buttons","canditates","activeElement","candidate","form","submitter","disable_re","dont_catch_re","disabled","dont_catch","__patternslib_registry","PATTERN_REGISTRY","__patternslib_registry_initialized","ready","sort","scan","clear","transformPattern","content","transform","initPattern","orderPatterns","splice","Text","selectors","plugin_name","jqueryPlugin","safeClone","clone","forEach","thisArg","T","k","O","len","kValue","singleBoundJQueryPlugin","pat","charAt","pluralBoundJQueryPlugin","isObject","isElementInViewport","partial","rec","right","every","innerWidth","escapeRegExp","source","prop","findLabel","input","$label","label","tagName","removeWildcardClass","targets","classes","ensureArray","matcher","class_list","ok","removeAttribute","hideOrShow","visible","pattern_name","transitions","none","fade","slide","duration","transition","effect","on_complete","action","t","complete","addURLQueryParameter","fullURL","param","url","hash","newURL","objs","comparator","reduce","list","next_obj","is_duplicate","frame_length","x","hasValue","checked","selectedIndex","parseTime","amount","parseLength","reference_length","findRelatives","$relatives","$form","get_bounds","bounds","y","checkInputSupport","invalid_value","support","checkCSSFeature","tag","supported","animation_frame","requestAnimationFrame","ms","debounce","func","timer","postpone","last_run","clearTimeout","isIE","documentMode","jqToNode","force_array","isPrototypeOf","localized_isodate","date","day","getDate","padStart","month","getMonth","getFullYear","escape_html","createTextNode","unescape_html","escaped_html","DOMParser","parseFromString","is_iso_date_time","is_iso_date","date_diff","date_1","date_2","utc_1","UTC","utc_2","threshold_list","num_steps","thresholds","is_option_truthy","option","getCSSValue","elementInViewport","all_selects","all_deselects","all_toggles","all_checkboxes","all_radios","_init","select","btn","select_all","deselect","deselect_all","toggle","toggle_all","_handler_change","change_buttons_and_toggles","change_checked","find_siblings","sel","res","find_checkboxes","ref_el","chkbxs","tgl","preventDefault","box","labels","fieldset","format","after","befores","b_el","b_date","a_date","offsetDays","setDate","toISOString","substring","dispatch_change_event","display_el","insertAdjacentElement","pat_display_time","outputFormat","PatDisplayTime","display_time_config","locale","_add_additional","add_clear_button","placeholder","Pikaday","firstDay","showWeekNumber","weekNumbers","onSelect","onClose","minDate","maxDate","i18n","response","fetch","json","pikaday","el_append_to","required","clear_button","stopPropagation","firedBy","el_date","el_time","DatePicker","date_value","time_value","el_wrapper","html_btn_now","today","html_btn_clear","update","isotime","date_options","isodate","substr","toTimeString","DependsHandler","dependent","handler","$modal","condition","message","evaluate","updateModal","enable","disable","getAllInputs","dependents","onReset","onChange","is","enabled","$depdendent","Moment","lang","datetime","out","strict","fromNow","rtf","Intl","RelativeTimeFormat","numeric","toDate","calendar","lastWeek","lastDay","sameDay","nextDay","nextWeek","sameElse","noSuffix","xhrCount","get","_","onTriggerEvents","onClickSubmit","request","_request","cfg","seqNumber","inc","temp","clickedData","serialize","Boolean","headers","cache","browserCache","accept","Accept","formdata","FormData","append","ajax_deferred","done","status","jqxhr","fail","inject","cfgs","extractConfig","some","nextHref","href","pushMarker","onTrigger","currentTarget","idleTrigger","_initIdleTrigger","delay","processDelay","ajax","onFormActionSubmit","uid","random","delayed_trigger","uid_","_initAutoloadVisible","params","serializeArray","execute","$button","formaction","first","$cfg_node","submitSubform","$sub","$context","urlparts","defaultSelector","elementIsDirty","askForConfirmation","should_confirm","_confirm","confirm","$target","confirmMessage","ensureTarget","createTarget","$injected","verifySingleConfig","extractModifiers","listenForFormReset","verifyConfig","source_match","target_match","sourceMod","targetMod","targetPosition","loadingClass","_performInjection","$source","title","$src","contents","_inject","_update_history","_afterInjection","glue","pushState","idx","el_","scroll","scroll_target","ev","responseText","sources$","callTypeHandler","dataType","idx1","perform_inject","idx2","explanation","timestamp","error_page","error_page_fragment","URLSearchParams","error_page_url","error_page_response","executingClass","error_zone","msg_attr","statusText","removeAttr","_onInjectSuccess","do_close_panel","_onInjectError","stopImmediatePropagation","contentbefore","contentafter","elementbefore","elementafter","replaceWith","empty","_sourcesFromHtml","sources","$html","_parseRawHtml","_rebaseAttrs","A","FORM","IMG","OBJECT","SOURCE","VIDEO","_rebaseOptions","_rebaseURL","base","URL","lastIndexOf","_rebaseHTML","$page","wrapAll","$el_","attrName","pattern_parser","changed","opt","stringify","clean_html","children","timeout_id","observer","IntersectionObserver","isIntersecting","disconnect","threshold","margin","observe","onTimeout","unsub","onInteraction","contains","registerTypeHandler","handlers","injected","skipPatInjectHandler","executedClass","CustomEvent","detail","originalEvent","reload","replaceState","dialog_panel","close","checkValidity","tippy","active_class","inactive_class","Tippy","tippy_options","parseOptionsForTippy","defaultProps","animation","arrow","hideOnClick","closing","ignoreAttributes","interactive","onHide","_onHide","onShow","_onShow","setDefaultProps","markInactive","super","placement","pos0","r","b","l","pos1","popperOptions","modifiers","arrowPadding","padding","parsers","flip_options","policy","fallbacks","fallbackPlacements","allowHTML","_initialize_content","popper","tippy_classes","close_button","setProps","_get_content","setContent","get_url_parts","data_type_handlers","ajaxDataType","popperInstance","forceUpdate","query","tmp","Markdown","markdown","instance","renderForInjection","register_type_handler","KEY_ERROR_EL","KEY_ERROR_MSG","inputs","check_input","initialize_inputs","disabled_elements","disableSelector","cnt","debouncer","_ref","stop","set_validity","msg","validity_state","validity","hasAttribute","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valid","valueMissing","input_options","equality","not","before","msg_default_not_before","msg_default_not_after","not_after","not_after_el","not_before","not_before_el","remove_error","number","email","set_error_message","_ref2","setCustomValidity","error_node","validation_message","validationMessage","error_template","firstChild","did_disable","formNoValidate","_input"],"sourceRoot":""}